2024-07-17 15:27:35,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 15:27:35,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 15:27:35,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 15:27:35,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 15:33:26,245:INFO:PyCaret ClassificationExperiment
2024-07-17 15:33:26,245:INFO:Logging name: clf-default-name
2024-07-17 15:33:26,267:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 15:33:26,267:INFO:version 3.3.2
2024-07-17 15:33:26,267:INFO:Initializing setup()
2024-07-17 15:33:26,267:INFO:self.USI: eacf
2024-07-17 15:33:26,268:INFO:self._variable_keys: {'gpu_param', 'memory', 'exp_name_log', 'y_test', 'exp_id', 'seed', 'pipeline', 'fold_groups_param', 'fold_shuffle_param', 'idx', 'y_train', '_available_plots', 'log_plots_param', 'html_param', 'USI', '_ml_usecase', 'is_multiclass', 'target_param', 'X_train', 'logging_param', 'fix_imbalance', 'data', 'X_test', 'fold_generator', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'X'}
2024-07-17 15:33:26,268:INFO:Checking environment
2024-07-17 15:33:26,268:INFO:python_version: 3.11.7
2024-07-17 15:33:26,268:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-07-17 15:33:26,268:INFO:machine: AMD64
2024-07-17 15:33:26,268:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-17 15:33:26,269:INFO:Memory: svmem(total=17064296448, available=7325667328, percent=57.1, used=9738629120, free=7325667328)
2024-07-17 15:33:26,269:INFO:Physical Core: 4
2024-07-17 15:33:26,269:INFO:Logical Core: 8
2024-07-17 15:33:26,269:INFO:Checking libraries
2024-07-17 15:33:26,269:INFO:System:
2024-07-17 15:33:26,269:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-07-17 15:33:26,270:INFO:executable: C:\Users\MTIDES\anaconda3\python.exe
2024-07-17 15:33:26,270:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-17 15:33:26,270:INFO:PyCaret required dependencies:
2024-07-17 15:33:27,564:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:30,527:INFO:                 pip: 23.2.1
2024-07-17 15:33:30,528:INFO:          setuptools: 68.2.2
2024-07-17 15:33:30,528:INFO:             pycaret: 3.3.2
2024-07-17 15:33:30,528:INFO:             IPython: 8.20.0
2024-07-17 15:33:30,528:INFO:          ipywidgets: 8.0.4
2024-07-17 15:33:30,528:INFO:                tqdm: 4.65.0
2024-07-17 15:33:30,528:INFO:               numpy: 1.24.3
2024-07-17 15:33:30,528:INFO:              pandas: 2.1.4
2024-07-17 15:33:30,528:INFO:              jinja2: 3.1.2
2024-07-17 15:33:30,528:INFO:               scipy: 1.11.4
2024-07-17 15:33:30,528:INFO:              joblib: 1.3.2
2024-07-17 15:33:30,528:INFO:             sklearn: 1.4.2
2024-07-17 15:33:30,528:INFO:                pyod: 2.0.1
2024-07-17 15:33:30,528:INFO:            imblearn: 0.11.0
2024-07-17 15:33:30,528:INFO:   category_encoders: 2.6.3
2024-07-17 15:33:30,528:INFO:            lightgbm: 4.4.0
2024-07-17 15:33:30,529:INFO:               numba: 0.58.1
2024-07-17 15:33:30,529:INFO:            requests: 2.31.0
2024-07-17 15:33:30,529:INFO:          matplotlib: 3.8.0
2024-07-17 15:33:30,529:INFO:          scikitplot: 0.3.7
2024-07-17 15:33:30,529:INFO:         yellowbrick: 1.5
2024-07-17 15:33:30,529:INFO:              plotly: 5.22.0
2024-07-17 15:33:30,529:INFO:    plotly-resampler: Not installed
2024-07-17 15:33:30,529:INFO:             kaleido: 0.2.1
2024-07-17 15:33:30,529:INFO:           schemdraw: 0.15
2024-07-17 15:33:30,529:INFO:         statsmodels: 0.14.0
2024-07-17 15:33:30,529:INFO:              sktime: 0.26.0
2024-07-17 15:33:30,529:INFO:               tbats: 1.1.3
2024-07-17 15:33:30,529:INFO:            pmdarima: 2.0.4
2024-07-17 15:33:30,529:INFO:              psutil: 5.9.0
2024-07-17 15:33:30,529:INFO:          markupsafe: 2.1.3
2024-07-17 15:33:30,529:INFO:             pickle5: Not installed
2024-07-17 15:33:30,529:INFO:         cloudpickle: 2.2.1
2024-07-17 15:33:30,530:INFO:         deprecation: 2.1.0
2024-07-17 15:33:30,530:INFO:              xxhash: 2.0.2
2024-07-17 15:33:30,530:INFO:           wurlitzer: Not installed
2024-07-17 15:33:30,530:INFO:PyCaret optional dependencies:
2024-07-17 15:33:30,556:INFO:                shap: Not installed
2024-07-17 15:33:30,556:INFO:           interpret: Not installed
2024-07-17 15:33:30,556:INFO:                umap: Not installed
2024-07-17 15:33:30,556:INFO:     ydata_profiling: 4.6.4
2024-07-17 15:33:30,556:INFO:  explainerdashboard: Not installed
2024-07-17 15:33:30,556:INFO:             autoviz: Not installed
2024-07-17 15:33:30,556:INFO:           fairlearn: Not installed
2024-07-17 15:33:30,556:INFO:          deepchecks: Not installed
2024-07-17 15:33:30,556:INFO:             xgboost: Not installed
2024-07-17 15:33:30,556:INFO:            catboost: 1.2.5
2024-07-17 15:33:30,556:INFO:              kmodes: Not installed
2024-07-17 15:33:30,556:INFO:             mlxtend: Not installed
2024-07-17 15:33:30,556:INFO:       statsforecast: Not installed
2024-07-17 15:33:30,557:INFO:        tune_sklearn: Not installed
2024-07-17 15:33:30,557:INFO:                 ray: Not installed
2024-07-17 15:33:30,557:INFO:            hyperopt: Not installed
2024-07-17 15:33:30,557:INFO:              optuna: Not installed
2024-07-17 15:33:30,557:INFO:               skopt: Not installed
2024-07-17 15:33:30,557:INFO:              mlflow: Not installed
2024-07-17 15:33:30,557:INFO:              gradio: Not installed
2024-07-17 15:33:30,557:INFO:             fastapi: Not installed
2024-07-17 15:33:30,557:INFO:             uvicorn: Not installed
2024-07-17 15:33:30,557:INFO:              m2cgen: Not installed
2024-07-17 15:33:30,557:INFO:           evidently: Not installed
2024-07-17 15:33:30,557:INFO:               fugue: Not installed
2024-07-17 15:33:30,557:INFO:           streamlit: Not installed
2024-07-17 15:33:30,557:INFO:             prophet: Not installed
2024-07-17 15:33:30,557:INFO:None
2024-07-17 15:33:30,558:INFO:Set up data.
2024-07-17 15:33:30,573:INFO:Set up folding strategy.
2024-07-17 15:33:30,573:INFO:Set up train/test split.
2024-07-17 15:33:31,101:INFO:Set up index.
2024-07-17 15:33:31,101:INFO:Assigning column types.
2024-07-17 15:33:31,114:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 15:33:31,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 15:33:31,177:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 15:33:31,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:31,222:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 15:33:35,232:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 15:33:35,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:35,269:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,270:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 15:33:35,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 15:33:35,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:35,367:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 15:33:35,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:35,466:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,467:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 15:33:35,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:35,559:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:35,654:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:35,658:INFO:Preparing preprocessing pipeline...
2024-07-17 15:33:35,729:INFO:Set up label encoding.
2024-07-17 15:33:35,729:INFO:Set up simple imputation.
2024-07-17 15:33:35,791:INFO:Finished creating preprocessing pipeline.
2024-07-17 15:33:35,798:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-07-17 15:33:35,798:INFO:Creating final display dataframe.
2024-07-17 15:33:36,006:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target  num_awards_given
2                   Target type            Binary
3                Target mapping   High: 0, Low: 1
4           Original data shape        (3798, 40)
5        Transformed data shape        (3798, 40)
6   Transformed train set shape        (2658, 40)
7    Transformed test set shape        (1140, 40)
8              Numeric features                39
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              eacf
2024-07-17 15:33:36,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:36,126:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:36,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 15:33:36,218:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 15:33:36,220:INFO:setup() successfully completed in 10.07s...............
2024-07-17 15:33:36,221:INFO:Initializing compare_models()
2024-07-17 15:33:36,221:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-17 15:33:36,221:INFO:Checking exceptions
2024-07-17 15:33:36,230:INFO:Preparing display monitor
2024-07-17 15:33:36,272:INFO:Initializing Logistic Regression
2024-07-17 15:33:36,273:INFO:Total runtime is 1.630385716756185e-05 minutes
2024-07-17 15:33:36,281:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:36,282:INFO:Initializing create_model()
2024-07-17 15:33:36,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:36,282:INFO:Checking exceptions
2024-07-17 15:33:36,283:INFO:Importing libraries
2024-07-17 15:33:36,283:INFO:Copying training dataset
2024-07-17 15:33:36,308:INFO:Defining folds
2024-07-17 15:33:36,309:INFO:Declaring metric variables
2024-07-17 15:33:36,313:INFO:Importing untrained model
2024-07-17 15:33:36,317:INFO:Logistic Regression Imported successfully
2024-07-17 15:33:36,328:INFO:Starting cross validation
2024-07-17 15:33:36,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:42,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:42,954:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:42,980:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:43,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:43,041:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:43,103:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:43,140:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:43,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 15:33:45,088:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,118:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,122:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,125:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,142:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,149:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,157:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,159:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,170:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,176:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,280:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,283:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,301:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,312:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,314:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,321:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,321:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,326:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,331:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,336:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,341:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,354:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,365:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,376:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,453:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,476:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,484:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,488:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,767:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,848:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 15:33:45,893:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,908:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,923:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:45,949:INFO:Calculating mean and std
2024-07-17 15:33:45,951:INFO:Creating metrics dataframe
2024-07-17 15:33:45,953:INFO:Uploading results into container
2024-07-17 15:33:45,953:INFO:Uploading model into container now
2024-07-17 15:33:45,954:INFO:_master_model_container: 1
2024-07-17 15:33:45,954:INFO:_display_container: 2
2024-07-17 15:33:45,954:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 15:33:45,955:INFO:create_model() successfully completed......................................
2024-07-17 15:33:46,074:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:46,074:INFO:Creating metrics dataframe
2024-07-17 15:33:46,083:INFO:Initializing K Neighbors Classifier
2024-07-17 15:33:46,083:INFO:Total runtime is 0.16351500749588013 minutes
2024-07-17 15:33:46,088:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:46,088:INFO:Initializing create_model()
2024-07-17 15:33:46,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:46,088:INFO:Checking exceptions
2024-07-17 15:33:46,089:INFO:Importing libraries
2024-07-17 15:33:46,089:INFO:Copying training dataset
2024-07-17 15:33:46,106:INFO:Defining folds
2024-07-17 15:33:46,107:INFO:Declaring metric variables
2024-07-17 15:33:46,111:INFO:Importing untrained model
2024-07-17 15:33:46,117:INFO:K Neighbors Classifier Imported successfully
2024-07-17 15:33:46,127:INFO:Starting cross validation
2024-07-17 15:33:46,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:46,884:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,887:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,891:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,894:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,896:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,904:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,905:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,911:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,912:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,917:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,920:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,924:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,927:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,929:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,933:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,935:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,939:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,943:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,952:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,960:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:46,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,277:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,303:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,312:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,315:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,321:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,362:INFO:Calculating mean and std
2024-07-17 15:33:47,365:INFO:Creating metrics dataframe
2024-07-17 15:33:47,369:INFO:Uploading results into container
2024-07-17 15:33:47,370:INFO:Uploading model into container now
2024-07-17 15:33:47,371:INFO:_master_model_container: 2
2024-07-17 15:33:47,371:INFO:_display_container: 2
2024-07-17 15:33:47,371:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-17 15:33:47,372:INFO:create_model() successfully completed......................................
2024-07-17 15:33:47,491:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:47,492:INFO:Creating metrics dataframe
2024-07-17 15:33:47,502:INFO:Initializing Naive Bayes
2024-07-17 15:33:47,502:INFO:Total runtime is 0.1871665875116984 minutes
2024-07-17 15:33:47,506:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:47,507:INFO:Initializing create_model()
2024-07-17 15:33:47,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:47,507:INFO:Checking exceptions
2024-07-17 15:33:47,507:INFO:Importing libraries
2024-07-17 15:33:47,507:INFO:Copying training dataset
2024-07-17 15:33:47,533:INFO:Defining folds
2024-07-17 15:33:47,533:INFO:Declaring metric variables
2024-07-17 15:33:47,541:INFO:Importing untrained model
2024-07-17 15:33:47,555:INFO:Naive Bayes Imported successfully
2024-07-17 15:33:47,578:INFO:Starting cross validation
2024-07-17 15:33:47,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:47,678:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,679:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,688:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,692:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,697:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,701:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,708:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,710:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,713:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,717:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,720:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,723:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,724:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,729:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,734:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,743:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,750:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,790:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,793:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,802:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:47,819:INFO:Calculating mean and std
2024-07-17 15:33:47,821:INFO:Creating metrics dataframe
2024-07-17 15:33:47,823:INFO:Uploading results into container
2024-07-17 15:33:47,824:INFO:Uploading model into container now
2024-07-17 15:33:47,824:INFO:_master_model_container: 3
2024-07-17 15:33:47,824:INFO:_display_container: 2
2024-07-17 15:33:47,825:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-17 15:33:47,825:INFO:create_model() successfully completed......................................
2024-07-17 15:33:47,939:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:47,939:INFO:Creating metrics dataframe
2024-07-17 15:33:47,952:INFO:Initializing Decision Tree Classifier
2024-07-17 15:33:47,952:INFO:Total runtime is 0.1946659286816915 minutes
2024-07-17 15:33:47,959:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:47,960:INFO:Initializing create_model()
2024-07-17 15:33:47,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:47,960:INFO:Checking exceptions
2024-07-17 15:33:47,961:INFO:Importing libraries
2024-07-17 15:33:47,961:INFO:Copying training dataset
2024-07-17 15:33:47,986:INFO:Defining folds
2024-07-17 15:33:47,986:INFO:Declaring metric variables
2024-07-17 15:33:47,991:INFO:Importing untrained model
2024-07-17 15:33:47,998:INFO:Decision Tree Classifier Imported successfully
2024-07-17 15:33:48,014:INFO:Starting cross validation
2024-07-17 15:33:48,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:48,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,214:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,214:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,217:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,218:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,223:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,223:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,227:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,229:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,229:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,231:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,236:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,241:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,241:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,241:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,250:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,253:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,330:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,337:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,360:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,367:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,372:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,398:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,403:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,409:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,429:INFO:Calculating mean and std
2024-07-17 15:33:48,431:INFO:Creating metrics dataframe
2024-07-17 15:33:48,433:INFO:Uploading results into container
2024-07-17 15:33:48,434:INFO:Uploading model into container now
2024-07-17 15:33:48,435:INFO:_master_model_container: 4
2024-07-17 15:33:48,435:INFO:_display_container: 2
2024-07-17 15:33:48,435:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-17 15:33:48,435:INFO:create_model() successfully completed......................................
2024-07-17 15:33:48,564:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:48,564:INFO:Creating metrics dataframe
2024-07-17 15:33:48,580:INFO:Initializing SVM - Linear Kernel
2024-07-17 15:33:48,581:INFO:Total runtime is 0.20515536467234294 minutes
2024-07-17 15:33:48,587:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:48,587:INFO:Initializing create_model()
2024-07-17 15:33:48,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:48,588:INFO:Checking exceptions
2024-07-17 15:33:48,588:INFO:Importing libraries
2024-07-17 15:33:48,588:INFO:Copying training dataset
2024-07-17 15:33:48,610:INFO:Defining folds
2024-07-17 15:33:48,611:INFO:Declaring metric variables
2024-07-17 15:33:48,620:INFO:Importing untrained model
2024-07-17 15:33:48,626:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 15:33:48,635:INFO:Starting cross validation
2024-07-17 15:33:48,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:48,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,805:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,824:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,848:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,851:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,854:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,857:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,860:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,864:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,866:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,870:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,873:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,881:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,890:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,921:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,927:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,933:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,948:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:48,970:INFO:Calculating mean and std
2024-07-17 15:33:48,975:INFO:Creating metrics dataframe
2024-07-17 15:33:48,977:INFO:Uploading results into container
2024-07-17 15:33:48,978:INFO:Uploading model into container now
2024-07-17 15:33:48,978:INFO:_master_model_container: 5
2024-07-17 15:33:48,978:INFO:_display_container: 2
2024-07-17 15:33:48,978:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-17 15:33:48,978:INFO:create_model() successfully completed......................................
2024-07-17 15:33:49,092:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:49,093:INFO:Creating metrics dataframe
2024-07-17 15:33:49,119:INFO:Initializing Ridge Classifier
2024-07-17 15:33:49,119:INFO:Total runtime is 0.2141245404879252 minutes
2024-07-17 15:33:49,124:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:49,125:INFO:Initializing create_model()
2024-07-17 15:33:49,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:49,126:INFO:Checking exceptions
2024-07-17 15:33:49,126:INFO:Importing libraries
2024-07-17 15:33:49,126:INFO:Copying training dataset
2024-07-17 15:33:49,182:INFO:Defining folds
2024-07-17 15:33:49,182:INFO:Declaring metric variables
2024-07-17 15:33:49,188:INFO:Importing untrained model
2024-07-17 15:33:49,194:INFO:Ridge Classifier Imported successfully
2024-07-17 15:33:49,205:INFO:Starting cross validation
2024-07-17 15:33:49,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:49,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,595:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,596:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,598:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,602:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,603:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,603:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,603:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,605:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,606:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,609:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,611:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,614:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,616:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,630:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,630:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,639:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,653:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,677:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,680:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,685:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,687:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,690:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:49,703:INFO:Calculating mean and std
2024-07-17 15:33:49,705:INFO:Creating metrics dataframe
2024-07-17 15:33:49,707:INFO:Uploading results into container
2024-07-17 15:33:49,708:INFO:Uploading model into container now
2024-07-17 15:33:49,708:INFO:_master_model_container: 6
2024-07-17 15:33:49,709:INFO:_display_container: 2
2024-07-17 15:33:49,709:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-17 15:33:49,710:INFO:create_model() successfully completed......................................
2024-07-17 15:33:49,849:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:49,850:INFO:Creating metrics dataframe
2024-07-17 15:33:49,867:INFO:Initializing Random Forest Classifier
2024-07-17 15:33:49,868:INFO:Total runtime is 0.22658832073211668 minutes
2024-07-17 15:33:49,873:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:49,874:INFO:Initializing create_model()
2024-07-17 15:33:49,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:49,875:INFO:Checking exceptions
2024-07-17 15:33:49,875:INFO:Importing libraries
2024-07-17 15:33:49,875:INFO:Copying training dataset
2024-07-17 15:33:49,895:INFO:Defining folds
2024-07-17 15:33:49,895:INFO:Declaring metric variables
2024-07-17 15:33:49,903:INFO:Importing untrained model
2024-07-17 15:33:49,914:INFO:Random Forest Classifier Imported successfully
2024-07-17 15:33:49,929:INFO:Starting cross validation
2024-07-17 15:33:49,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:51,647:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,648:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,650:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,655:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,655:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,659:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,662:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,663:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,667:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,675:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,684:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,692:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,723:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,739:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,745:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,746:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,767:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,772:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:51,776:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,204:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,212:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,234:INFO:Calculating mean and std
2024-07-17 15:33:52,235:INFO:Creating metrics dataframe
2024-07-17 15:33:52,237:INFO:Uploading results into container
2024-07-17 15:33:52,237:INFO:Uploading model into container now
2024-07-17 15:33:52,238:INFO:_master_model_container: 7
2024-07-17 15:33:52,238:INFO:_display_container: 2
2024-07-17 15:33:52,238:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-17 15:33:52,239:INFO:create_model() successfully completed......................................
2024-07-17 15:33:52,344:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:52,344:INFO:Creating metrics dataframe
2024-07-17 15:33:52,354:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 15:33:52,355:INFO:Total runtime is 0.2680573980013529 minutes
2024-07-17 15:33:52,363:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:52,364:INFO:Initializing create_model()
2024-07-17 15:33:52,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:52,364:INFO:Checking exceptions
2024-07-17 15:33:52,364:INFO:Importing libraries
2024-07-17 15:33:52,365:INFO:Copying training dataset
2024-07-17 15:33:52,382:INFO:Defining folds
2024-07-17 15:33:52,383:INFO:Declaring metric variables
2024-07-17 15:33:52,392:INFO:Importing untrained model
2024-07-17 15:33:52,399:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 15:33:52,407:INFO:Starting cross validation
2024-07-17 15:33:52,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,734:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,735:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,735:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,736:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,737:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,742:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,743:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,747:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,747:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,748:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,748:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,748:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,750:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,750:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,762:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,780:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,793:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,794:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 15:33:52,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,826:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,834:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,843:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:52,864:INFO:Calculating mean and std
2024-07-17 15:33:52,865:INFO:Creating metrics dataframe
2024-07-17 15:33:52,868:INFO:Uploading results into container
2024-07-17 15:33:52,868:INFO:Uploading model into container now
2024-07-17 15:33:52,869:INFO:_master_model_container: 8
2024-07-17 15:33:52,869:INFO:_display_container: 2
2024-07-17 15:33:52,869:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-17 15:33:52,869:INFO:create_model() successfully completed......................................
2024-07-17 15:33:52,997:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:52,998:INFO:Creating metrics dataframe
2024-07-17 15:33:53,012:INFO:Initializing Ada Boost Classifier
2024-07-17 15:33:53,013:INFO:Total runtime is 0.27902557452519733 minutes
2024-07-17 15:33:53,018:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:53,018:INFO:Initializing create_model()
2024-07-17 15:33:53,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:53,018:INFO:Checking exceptions
2024-07-17 15:33:53,018:INFO:Importing libraries
2024-07-17 15:33:53,018:INFO:Copying training dataset
2024-07-17 15:33:53,034:INFO:Defining folds
2024-07-17 15:33:53,035:INFO:Declaring metric variables
2024-07-17 15:33:53,040:INFO:Importing untrained model
2024-07-17 15:33:53,045:INFO:Ada Boost Classifier Imported successfully
2024-07-17 15:33:53,054:INFO:Starting cross validation
2024-07-17 15:33:53,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:53,102:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,102:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,110:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,115:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,117:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,126:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,127:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,136:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,728:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,735:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,743:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,746:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,749:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,767:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,788:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 15:33:53,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,834:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,836:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,839:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,844:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,886:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:53,891:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,177:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,181:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,185:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:54,228:INFO:Calculating mean and std
2024-07-17 15:33:54,231:INFO:Creating metrics dataframe
2024-07-17 15:33:54,233:INFO:Uploading results into container
2024-07-17 15:33:54,233:INFO:Uploading model into container now
2024-07-17 15:33:54,234:INFO:_master_model_container: 9
2024-07-17 15:33:54,234:INFO:_display_container: 2
2024-07-17 15:33:54,235:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-17 15:33:54,235:INFO:create_model() successfully completed......................................
2024-07-17 15:33:54,412:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:54,413:INFO:Creating metrics dataframe
2024-07-17 15:33:54,422:INFO:Initializing Gradient Boosting Classifier
2024-07-17 15:33:54,423:INFO:Total runtime is 0.30250632762908936 minutes
2024-07-17 15:33:54,427:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:54,428:INFO:Initializing create_model()
2024-07-17 15:33:54,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:54,428:INFO:Checking exceptions
2024-07-17 15:33:54,428:INFO:Importing libraries
2024-07-17 15:33:54,429:INFO:Copying training dataset
2024-07-17 15:33:54,446:INFO:Defining folds
2024-07-17 15:33:54,447:INFO:Declaring metric variables
2024-07-17 15:33:54,451:INFO:Importing untrained model
2024-07-17 15:33:54,456:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 15:33:54,465:INFO:Starting cross validation
2024-07-17 15:33:54,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:56,480:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,488:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,499:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,502:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,512:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,513:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,520:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,521:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,531:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,561:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,568:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,575:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,681:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,688:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,696:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,798:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,806:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,807:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,819:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:56,826:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:57,874:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:57,878:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:57,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,024:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,043:INFO:Calculating mean and std
2024-07-17 15:33:58,045:INFO:Creating metrics dataframe
2024-07-17 15:33:58,048:INFO:Uploading results into container
2024-07-17 15:33:58,049:INFO:Uploading model into container now
2024-07-17 15:33:58,049:INFO:_master_model_container: 10
2024-07-17 15:33:58,049:INFO:_display_container: 2
2024-07-17 15:33:58,050:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-17 15:33:58,050:INFO:create_model() successfully completed......................................
2024-07-17 15:33:58,163:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:58,164:INFO:Creating metrics dataframe
2024-07-17 15:33:58,175:INFO:Initializing Linear Discriminant Analysis
2024-07-17 15:33:58,175:INFO:Total runtime is 0.36505709489186605 minutes
2024-07-17 15:33:58,179:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:58,180:INFO:Initializing create_model()
2024-07-17 15:33:58,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:58,181:INFO:Checking exceptions
2024-07-17 15:33:58,181:INFO:Importing libraries
2024-07-17 15:33:58,181:INFO:Copying training dataset
2024-07-17 15:33:58,211:INFO:Defining folds
2024-07-17 15:33:58,211:INFO:Declaring metric variables
2024-07-17 15:33:58,216:INFO:Importing untrained model
2024-07-17 15:33:58,222:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 15:33:58,230:INFO:Starting cross validation
2024-07-17 15:33:58,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:58,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,354:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,356:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,357:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,358:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,359:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,359:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,361:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,361:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,364:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,365:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,365:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,367:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,371:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,372:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,372:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,379:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,386:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,392:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,426:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,430:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,430:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,434:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,434:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,438:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:58,450:INFO:Calculating mean and std
2024-07-17 15:33:58,451:INFO:Creating metrics dataframe
2024-07-17 15:33:58,453:INFO:Uploading results into container
2024-07-17 15:33:58,453:INFO:Uploading model into container now
2024-07-17 15:33:58,454:INFO:_master_model_container: 11
2024-07-17 15:33:58,454:INFO:_display_container: 2
2024-07-17 15:33:58,455:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-17 15:33:58,455:INFO:create_model() successfully completed......................................
2024-07-17 15:33:58,672:INFO:SubProcess create_model() end ==================================
2024-07-17 15:33:58,673:INFO:Creating metrics dataframe
2024-07-17 15:33:58,685:INFO:Initializing Extra Trees Classifier
2024-07-17 15:33:58,685:INFO:Total runtime is 0.3735556523005168 minutes
2024-07-17 15:33:58,689:INFO:SubProcess create_model() called ==================================
2024-07-17 15:33:58,690:INFO:Initializing create_model()
2024-07-17 15:33:58,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:33:58,690:INFO:Checking exceptions
2024-07-17 15:33:58,690:INFO:Importing libraries
2024-07-17 15:33:58,690:INFO:Copying training dataset
2024-07-17 15:33:58,712:INFO:Defining folds
2024-07-17 15:33:58,713:INFO:Declaring metric variables
2024-07-17 15:33:58,716:INFO:Importing untrained model
2024-07-17 15:33:58,722:INFO:Extra Trees Classifier Imported successfully
2024-07-17 15:33:58,732:INFO:Starting cross validation
2024-07-17 15:33:58,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:33:59,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,716:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,734:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,755:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,755:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,762:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,766:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,768:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,774:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,777:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,778:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,790:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,799:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,803:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,807:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:33:59,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,136:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,140:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,145:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,153:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,157:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:00,173:INFO:Calculating mean and std
2024-07-17 15:34:00,174:INFO:Creating metrics dataframe
2024-07-17 15:34:00,176:INFO:Uploading results into container
2024-07-17 15:34:00,176:INFO:Uploading model into container now
2024-07-17 15:34:00,177:INFO:_master_model_container: 12
2024-07-17 15:34:00,177:INFO:_display_container: 2
2024-07-17 15:34:00,178:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-17 15:34:00,178:INFO:create_model() successfully completed......................................
2024-07-17 15:34:00,285:INFO:SubProcess create_model() end ==================================
2024-07-17 15:34:00,286:INFO:Creating metrics dataframe
2024-07-17 15:34:00,298:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 15:34:00,298:INFO:Total runtime is 0.40044633944829305 minutes
2024-07-17 15:34:00,304:INFO:SubProcess create_model() called ==================================
2024-07-17 15:34:00,305:INFO:Initializing create_model()
2024-07-17 15:34:00,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:34:00,305:INFO:Checking exceptions
2024-07-17 15:34:00,305:INFO:Importing libraries
2024-07-17 15:34:00,305:INFO:Copying training dataset
2024-07-17 15:34:00,323:INFO:Defining folds
2024-07-17 15:34:00,323:INFO:Declaring metric variables
2024-07-17 15:34:00,328:INFO:Importing untrained model
2024-07-17 15:34:00,333:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 15:34:00,342:INFO:Starting cross validation
2024-07-17 15:34:00,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:34:01,662:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,670:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,679:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,687:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,695:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,729:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,737:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,769:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,778:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,802:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,812:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,820:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,873:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,881:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,888:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,889:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:01,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,265:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,265:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,271:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,272:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,281:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,281:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:02,298:INFO:Calculating mean and std
2024-07-17 15:34:02,300:INFO:Creating metrics dataframe
2024-07-17 15:34:02,304:INFO:Uploading results into container
2024-07-17 15:34:02,305:INFO:Uploading model into container now
2024-07-17 15:34:02,306:INFO:_master_model_container: 13
2024-07-17 15:34:02,306:INFO:_display_container: 2
2024-07-17 15:34:02,307:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-17 15:34:02,307:INFO:create_model() successfully completed......................................
2024-07-17 15:34:02,433:INFO:SubProcess create_model() end ==================================
2024-07-17 15:34:02,433:INFO:Creating metrics dataframe
2024-07-17 15:34:02,444:INFO:Initializing CatBoost Classifier
2024-07-17 15:34:02,444:INFO:Total runtime is 0.4362117330233256 minutes
2024-07-17 15:34:02,448:INFO:SubProcess create_model() called ==================================
2024-07-17 15:34:02,448:INFO:Initializing create_model()
2024-07-17 15:34:02,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:34:02,448:INFO:Checking exceptions
2024-07-17 15:34:02,448:INFO:Importing libraries
2024-07-17 15:34:02,448:INFO:Copying training dataset
2024-07-17 15:34:02,468:INFO:Defining folds
2024-07-17 15:34:02,468:INFO:Declaring metric variables
2024-07-17 15:34:02,476:INFO:Importing untrained model
2024-07-17 15:34:02,483:INFO:CatBoost Classifier Imported successfully
2024-07-17 15:34:02,494:INFO:Starting cross validation
2024-07-17 15:34:02,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:34:25,557:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:25,566:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:25,572:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,448:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,455:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,462:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,859:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:26,869:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,101:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,108:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,117:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,595:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,602:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,605:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,613:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,673:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,677:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,682:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,686:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,689:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:27,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:36,764:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:36,798:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:36,844:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:38,323:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:38,340:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:38,388:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:38,425:INFO:Calculating mean and std
2024-07-17 15:34:38,430:INFO:Creating metrics dataframe
2024-07-17 15:34:38,438:INFO:Uploading results into container
2024-07-17 15:34:38,440:INFO:Uploading model into container now
2024-07-17 15:34:38,443:INFO:_master_model_container: 14
2024-07-17 15:34:38,444:INFO:_display_container: 2
2024-07-17 15:34:38,445:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F76C18850>
2024-07-17 15:34:38,445:INFO:create_model() successfully completed......................................
2024-07-17 15:34:38,748:INFO:SubProcess create_model() end ==================================
2024-07-17 15:34:38,749:INFO:Creating metrics dataframe
2024-07-17 15:34:38,809:INFO:Initializing Dummy Classifier
2024-07-17 15:34:38,811:INFO:Total runtime is 1.0423028190930683 minutes
2024-07-17 15:34:38,846:INFO:SubProcess create_model() called ==================================
2024-07-17 15:34:38,848:INFO:Initializing create_model()
2024-07-17 15:34:38,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76CD3050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:34:38,849:INFO:Checking exceptions
2024-07-17 15:34:38,849:INFO:Importing libraries
2024-07-17 15:34:38,850:INFO:Copying training dataset
2024-07-17 15:34:38,912:INFO:Defining folds
2024-07-17 15:34:38,913:INFO:Declaring metric variables
2024-07-17 15:34:38,937:INFO:Importing untrained model
2024-07-17 15:34:38,958:INFO:Dummy Classifier Imported successfully
2024-07-17 15:34:38,987:INFO:Starting cross validation
2024-07-17 15:34:38,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 15:34:39,235:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,258:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,266:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,267:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,281:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,287:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,290:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,293:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,299:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,313:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,316:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,317:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,328:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,336:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,346:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,377:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,392:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,432:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,444:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,458:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,465:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,472:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,483:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,489:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,495:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,513:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,517:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,524:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,529:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,537:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,543:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,619:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 15:34:39,628:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:39,658:INFO:Calculating mean and std
2024-07-17 15:34:39,660:INFO:Creating metrics dataframe
2024-07-17 15:34:39,662:INFO:Uploading results into container
2024-07-17 15:34:39,663:INFO:Uploading model into container now
2024-07-17 15:34:39,663:INFO:_master_model_container: 15
2024-07-17 15:34:39,663:INFO:_display_container: 2
2024-07-17 15:34:39,664:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-17 15:34:39,664:INFO:create_model() successfully completed......................................
2024-07-17 15:34:39,775:INFO:SubProcess create_model() end ==================================
2024-07-17 15:34:39,775:INFO:Creating metrics dataframe
2024-07-17 15:34:39,800:INFO:Initializing create_model()
2024-07-17 15:34:39,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F76C18850>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 15:34:39,801:INFO:Checking exceptions
2024-07-17 15:34:39,804:INFO:Importing libraries
2024-07-17 15:34:39,805:INFO:Copying training dataset
2024-07-17 15:34:39,827:INFO:Defining folds
2024-07-17 15:34:39,827:INFO:Declaring metric variables
2024-07-17 15:34:39,827:INFO:Importing untrained model
2024-07-17 15:34:39,828:INFO:Declaring custom model
2024-07-17 15:34:39,828:INFO:CatBoost Classifier Imported successfully
2024-07-17 15:34:39,829:INFO:Cross validation set to False
2024-07-17 15:34:39,829:INFO:Fitting Model
2024-07-17 15:34:46,156:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>
2024-07-17 15:34:46,156:INFO:create_model() successfully completed......................................
2024-07-17 15:34:46,299:INFO:_master_model_container: 15
2024-07-17 15:34:46,299:INFO:_display_container: 2
2024-07-17 15:34:46,300:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>
2024-07-17 15:34:46,300:INFO:compare_models() successfully completed......................................
2024-07-17 15:34:46,300:INFO:Initializing evaluate_model()
2024-07-17 15:34:46,300:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-17 15:34:46,346:INFO:Initializing plot_model()
2024-07-17 15:34:46,346:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-17 15:34:46,347:INFO:Checking exceptions
2024-07-17 15:34:46,358:INFO:Preloading libraries
2024-07-17 15:34:46,366:INFO:Copying training dataset
2024-07-17 15:34:46,367:INFO:Plot type: pipeline
2024-07-17 15:34:46,732:INFO:Visual Rendered Successfully
2024-07-17 15:34:46,841:INFO:plot_model() successfully completed......................................
2024-07-17 15:34:46,846:INFO:Initializing predict_model()
2024-07-17 15:34:46,847:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000014F7737C9A0>)
2024-07-17 15:34:46,847:INFO:Checking exceptions
2024-07-17 15:34:46,847:INFO:Preloading libraries
2024-07-17 15:34:46,992:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:47,005:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:47,017:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 15:34:47,152:INFO:Initializing predict_model()
2024-07-17 15:34:47,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000014F7395E700>)
2024-07-17 15:34:47,152:INFO:Checking exceptions
2024-07-17 15:34:47,152:INFO:Preloading libraries
2024-07-17 15:34:47,154:INFO:Set up data.
2024-07-17 15:34:47,165:INFO:Set up index.
2024-07-17 15:34:47,333:INFO:Initializing save_model()
2024-07-17 15:34:47,333:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, model_name=best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-17 15:34:47,333:INFO:Adding model into prep_pipe
2024-07-17 15:34:47,340:INFO:best_pipeline.pkl saved in current working directory
2024-07-17 15:34:47,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state_value',
                                             'exp_award_natl_value', 'ft_pct',
                                             '...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x0000014F75520C10>)],
         verbose=False)
2024-07-17 15:34:47,345:INFO:save_model() successfully completed......................................
2024-07-17 15:47:21,315:INFO:Initializing plot_model()
2024-07-17 15:47:21,315:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 15:47:21,315:INFO:Checking exceptions
2024-07-17 15:47:21,327:INFO:Preloading libraries
2024-07-17 15:47:21,332:INFO:Copying training dataset
2024-07-17 15:47:21,332:INFO:Plot type: confusion_matrix
2024-07-17 15:47:21,597:INFO:Fitting Model
2024-07-17 15:47:21,626:INFO:Scoring test/hold-out set
2024-07-17 15:47:21,820:INFO:Visual Rendered Successfully
2024-07-17 15:47:21,952:INFO:plot_model() successfully completed......................................
2024-07-17 15:48:32,653:INFO:Initializing plot_model()
2024-07-17 15:48:32,654:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 15:48:32,654:INFO:Checking exceptions
2024-07-17 15:48:32,667:INFO:Preloading libraries
2024-07-17 15:48:32,679:INFO:Copying training dataset
2024-07-17 15:48:32,679:INFO:Plot type: auc
2024-07-17 15:48:32,899:INFO:Fitting Model
2024-07-17 15:48:32,901:INFO:Scoring test/hold-out set
2024-07-17 15:48:33,245:INFO:Visual Rendered Successfully
2024-07-17 15:48:33,403:INFO:plot_model() successfully completed......................................
2024-07-17 15:50:07,887:INFO:Initializing plot_model()
2024-07-17 15:50:07,888:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F75520C10>, plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 15:50:07,889:INFO:Checking exceptions
2024-07-17 15:50:07,908:INFO:Preloading libraries
2024-07-17 15:50:07,912:INFO:Copying training dataset
2024-07-17 15:50:07,913:INFO:Plot type: feature
2024-07-17 15:50:07,913:WARNING:No coef_ found. Trying feature_importances_
2024-07-17 15:50:08,264:INFO:Visual Rendered Successfully
2024-07-17 15:50:08,381:INFO:plot_model() successfully completed......................................
2024-07-17 16:02:34,533:INFO:Initializing create_model()
2024-07-17 16:02:34,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 16:02:34,534:INFO:Checking exceptions
2024-07-17 16:02:34,567:INFO:Importing libraries
2024-07-17 16:02:34,567:INFO:Copying training dataset
2024-07-17 16:02:34,582:INFO:Defining folds
2024-07-17 16:02:34,583:INFO:Declaring metric variables
2024-07-17 16:02:34,586:INFO:Importing untrained model
2024-07-17 16:02:34,590:INFO:CatBoost Classifier Imported successfully
2024-07-17 16:02:34,602:INFO:Starting cross validation
2024-07-17 16:02:34,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 16:02:42,107:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,135:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,360:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,384:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,500:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:02:42,799:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:03:04,285:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:04,292:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:04,299:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,418:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,426:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,726:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:06,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,085:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,103:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,239:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,377:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,406:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,917:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,940:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:07,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:08,039:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:08,055:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:08,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:18,474:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:18,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:18,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:19,043:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:19,048:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:19,053:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:03:19,064:INFO:Calculating mean and std
2024-07-17 16:03:19,067:INFO:Creating metrics dataframe
2024-07-17 16:03:19,076:INFO:Finalizing model
2024-07-17 16:03:24,681:INFO:Uploading results into container
2024-07-17 16:03:24,683:INFO:Uploading model into container now
2024-07-17 16:03:24,697:INFO:_master_model_container: 16
2024-07-17 16:03:24,698:INFO:_display_container: 4
2024-07-17 16:03:24,698:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>
2024-07-17 16:03:24,698:INFO:create_model() successfully completed......................................
2024-07-17 16:06:22,504:INFO:Initializing tune_model()
2024-07-17 16:06:22,505:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 16:06:22,505:INFO:Checking exceptions
2024-07-17 16:06:22,558:INFO:Copying training dataset
2024-07-17 16:06:22,571:INFO:Checking base model
2024-07-17 16:06:22,571:INFO:Base model : CatBoost Classifier
2024-07-17 16:06:22,577:INFO:Declaring metric variables
2024-07-17 16:06:22,582:INFO:Defining Hyperparameters
2024-07-17 16:06:22,700:INFO:Tuning with n_jobs=-1
2024-07-17 16:06:22,700:INFO:Initializing RandomizedSearchCV
2024-07-17 16:06:55,960:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 50, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 3}
2024-07-17 16:06:55,962:INFO:Hyperparameter search completed
2024-07-17 16:06:55,963:INFO:SubProcess create_model() called ==================================
2024-07-17 16:06:55,964:INFO:Initializing create_model()
2024-07-17 16:06:55,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F73F9FE10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F772CE450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 50, 'eta': 0.15, 'depth': 3})
2024-07-17 16:06:55,964:INFO:Checking exceptions
2024-07-17 16:06:55,964:INFO:Importing libraries
2024-07-17 16:06:55,965:INFO:Copying training dataset
2024-07-17 16:06:55,984:INFO:Defining folds
2024-07-17 16:06:55,984:INFO:Declaring metric variables
2024-07-17 16:06:55,990:INFO:Importing untrained model
2024-07-17 16:06:55,990:INFO:Declaring custom model
2024-07-17 16:06:56,005:INFO:CatBoost Classifier Imported successfully
2024-07-17 16:06:56,023:INFO:Starting cross validation
2024-07-17 16:06:56,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 16:06:58,336:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,345:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,358:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,367:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,375:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,594:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,600:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,668:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,676:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,685:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,701:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,710:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,710:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,717:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,728:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,731:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,732:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,736:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,739:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,743:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:58,749:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,769:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:06:59,806:INFO:Calculating mean and std
2024-07-17 16:06:59,814:INFO:Creating metrics dataframe
2024-07-17 16:06:59,829:INFO:Finalizing model
2024-07-17 16:07:01,487:INFO:Uploading results into container
2024-07-17 16:07:01,489:INFO:Uploading model into container now
2024-07-17 16:07:01,490:INFO:_master_model_container: 17
2024-07-17 16:07:01,490:INFO:_display_container: 5
2024-07-17 16:07:01,491:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F772CCE50>
2024-07-17 16:07:01,491:INFO:create_model() successfully completed......................................
2024-07-17 16:07:01,646:INFO:SubProcess create_model() end ==================================
2024-07-17 16:07:01,646:INFO:choose_better activated
2024-07-17 16:07:01,653:INFO:SubProcess create_model() called ==================================
2024-07-17 16:07:01,655:INFO:Initializing create_model()
2024-07-17 16:07:01,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 16:07:01,657:INFO:Checking exceptions
2024-07-17 16:07:01,667:INFO:Importing libraries
2024-07-17 16:07:01,668:INFO:Copying training dataset
2024-07-17 16:07:01,755:INFO:Defining folds
2024-07-17 16:07:01,756:INFO:Declaring metric variables
2024-07-17 16:07:01,757:INFO:Importing untrained model
2024-07-17 16:07:01,758:INFO:Declaring custom model
2024-07-17 16:07:01,760:INFO:CatBoost Classifier Imported successfully
2024-07-17 16:07:01,762:INFO:Starting cross validation
2024-07-17 16:07:01,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 16:07:19,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:19,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:19,976:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:22,566:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:22,573:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:22,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:23,251:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:23,258:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:23,266:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,187:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,212:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,675:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,687:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,691:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,816:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,860:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,872:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:25,885:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,010:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,018:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,942:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,945:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:07:35,968:INFO:Calculating mean and std
2024-07-17 16:07:35,969:INFO:Creating metrics dataframe
2024-07-17 16:07:35,970:INFO:Finalizing model
2024-07-17 16:07:41,253:INFO:Uploading results into container
2024-07-17 16:07:41,253:INFO:Uploading model into container now
2024-07-17 16:07:41,253:INFO:_master_model_container: 18
2024-07-17 16:07:41,254:INFO:_display_container: 6
2024-07-17 16:07:41,254:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F77358E10>
2024-07-17 16:07:41,254:INFO:create_model() successfully completed......................................
2024-07-17 16:07:41,367:INFO:SubProcess create_model() end ==================================
2024-07-17 16:07:41,368:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F77358E10> result for Accuracy is 0.7874
2024-07-17 16:07:41,368:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F772CCE50> result for Accuracy is 0.7791
2024-07-17 16:07:41,368:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F77358E10> is best model
2024-07-17 16:07:41,368:INFO:choose_better completed
2024-07-17 16:07:41,368:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 16:07:41,381:INFO:_master_model_container: 18
2024-07-17 16:07:41,381:INFO:_display_container: 5
2024-07-17 16:07:41,381:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F77358E10>
2024-07-17 16:07:41,381:INFO:tune_model() successfully completed......................................
2024-07-17 16:26:48,266:INFO:Initializing tune_model()
2024-07-17 16:26:48,267:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={'parameter_distributions': {'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F76DA5250>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F76DA6C50>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F73FAC5D0>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F774B6750>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F774B4B90>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F774B6690>}})
2024-07-17 16:26:48,267:INFO:Checking exceptions
2024-07-17 16:26:48,300:INFO:Copying training dataset
2024-07-17 16:26:48,315:INFO:Checking base model
2024-07-17 16:26:48,315:INFO:Base model : CatBoost Classifier
2024-07-17 16:26:48,321:INFO:Declaring metric variables
2024-07-17 16:26:48,358:INFO:Defining Hyperparameters
2024-07-17 16:26:48,488:INFO:Tuning with n_jobs=-1
2024-07-17 16:26:48,488:INFO:Initializing RandomizedSearchCV
2024-07-17 16:36:22,527:INFO:Initializing tune_model()
2024-07-17 16:36:22,527:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, fold=None, round=4, n_iter=10, custom_grid={'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B8849D0>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B86A210>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B89FA10>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B89F910>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B89C2D0>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B89CAD0>}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 16:36:22,528:INFO:Checking exceptions
2024-07-17 16:36:22,568:INFO:Copying training dataset
2024-07-17 16:36:22,580:INFO:Checking base model
2024-07-17 16:36:22,580:INFO:Base model : CatBoost Classifier
2024-07-17 16:36:22,585:INFO:Declaring metric variables
2024-07-17 16:36:22,589:INFO:Defining Hyperparameters
2024-07-17 16:36:22,749:INFO:custom_grid: {'actual_estimator__iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B8849D0>, 'actual_estimator__learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B86A210>, 'actual_estimator__depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B89FA10>, 'actual_estimator__l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B89F910>, 'actual_estimator__border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000014F7B89C2D0>, 'actual_estimator__scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000014F7B89CAD0>}
2024-07-17 16:36:22,750:INFO:Tuning with n_jobs=-1
2024-07-17 16:36:22,750:INFO:Initializing RandomizedSearchCV
2024-07-17 16:36:30,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,649:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,652:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,680:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,707:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,730:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:30,827:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 16:36:36,109:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:37,423:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:37,441:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:37,469:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:37,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:38,201:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:38,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:38,231:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:42,827:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:43,644:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:43,896:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:44,355:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:44,384:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:44,526:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:44,550:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:44,557:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:45,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:45,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,240:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,257:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,331:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:48,354:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:50,574:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:50,623:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:52,762:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,086:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,090:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,096:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,396:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,483:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:53,493:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:54,481:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:54,769:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:54,980:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:55,364:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:55,472:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:55,477:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:56,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:56,202:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:56,837:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:57,923:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:58,165:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:58,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:59,423:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:36:59,954:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:37:01,540:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:37:01,681:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:37:50,100:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:37:59,227:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:01,911:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:04,002:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:05,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:06,094:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:07,154:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:07,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:26,170:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:28,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:29,974:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:30,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:30,872:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:31,567:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:36,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:45,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:47,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:47,926:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:48,522:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:50,277:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:51,483:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:52,083:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:53,291:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:38:54,563:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:01,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:02,291:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:04,154:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:09,367:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:11,772:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:12,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:34,950:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:36,843:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:44,848:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:46,594:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:47,289:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:56,209:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:57,760:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:58,250:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:39:59,144:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:00,271:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:00,536:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:03,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:04,095:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:04,711:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:06,158:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:07,243:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:07,260:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:08,095:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:08,188:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:08,341:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:08,357:INFO:best_params: {'actual_estimator__border_count': 246, 'actual_estimator__depth': 5, 'actual_estimator__iterations': 196, 'actual_estimator__l2_leaf_reg': 6.796942970226101, 'actual_estimator__learning_rate': 0.05198522878911536, 'actual_estimator__scale_pos_weight': 1.302035113322407}
2024-07-17 16:40:08,358:INFO:Hyperparameter search completed
2024-07-17 16:40:08,358:INFO:SubProcess create_model() called ==================================
2024-07-17 16:40:08,358:INFO:Initializing create_model()
2024-07-17 16:40:08,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F7719B650>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000014F76DC1450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'border_count': 246, 'depth': 5, 'iterations': 196, 'l2_leaf_reg': 6.796942970226101, 'learning_rate': 0.05198522878911536, 'scale_pos_weight': 1.302035113322407})
2024-07-17 16:40:08,359:INFO:Checking exceptions
2024-07-17 16:40:08,359:INFO:Importing libraries
2024-07-17 16:40:08,359:INFO:Copying training dataset
2024-07-17 16:40:08,380:INFO:Defining folds
2024-07-17 16:40:08,380:INFO:Declaring metric variables
2024-07-17 16:40:08,386:INFO:Importing untrained model
2024-07-17 16:40:08,387:INFO:Declaring custom model
2024-07-17 16:40:08,394:INFO:CatBoost Classifier Imported successfully
2024-07-17 16:40:08,402:INFO:Starting cross validation
2024-07-17 16:40:08,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 16:40:11,766:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:11,779:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:11,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:11,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:11,868:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:11,884:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:12,694:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:12,716:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:12,730:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,153:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,166:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,179:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,222:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,243:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,380:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,394:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,424:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,425:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,438:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,442:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:13,455:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:14,973:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:14,992:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:15,008:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:15,151:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:15,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:15,188:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:15,250:INFO:Calculating mean and std
2024-07-17 16:40:15,267:INFO:Creating metrics dataframe
2024-07-17 16:40:15,301:INFO:Finalizing model
2024-07-17 16:40:19,305:INFO:Uploading results into container
2024-07-17 16:40:19,306:INFO:Uploading model into container now
2024-07-17 16:40:19,307:INFO:_master_model_container: 19
2024-07-17 16:40:19,308:INFO:_display_container: 6
2024-07-17 16:40:19,308:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F7B618150>
2024-07-17 16:40:19,308:INFO:create_model() successfully completed......................................
2024-07-17 16:40:19,520:INFO:SubProcess create_model() end ==================================
2024-07-17 16:40:19,520:INFO:choose_better activated
2024-07-17 16:40:19,524:INFO:SubProcess create_model() called ==================================
2024-07-17 16:40:19,525:INFO:Initializing create_model()
2024-07-17 16:40:19,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 16:40:19,526:INFO:Checking exceptions
2024-07-17 16:40:19,528:INFO:Importing libraries
2024-07-17 16:40:19,528:INFO:Copying training dataset
2024-07-17 16:40:19,544:INFO:Defining folds
2024-07-17 16:40:19,544:INFO:Declaring metric variables
2024-07-17 16:40:19,544:INFO:Importing untrained model
2024-07-17 16:40:19,544:INFO:Declaring custom model
2024-07-17 16:40:19,545:INFO:CatBoost Classifier Imported successfully
2024-07-17 16:40:19,545:INFO:Starting cross validation
2024-07-17 16:40:19,546:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 16:40:38,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:38,235:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:38,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,457:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,468:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,474:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,600:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,895:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,900:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,908:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,910:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:43,916:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,118:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,125:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,151:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,158:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,186:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,194:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:44,202:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:48,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:48,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:49,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:49,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:49,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:49,818:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 16:40:49,830:INFO:Calculating mean and std
2024-07-17 16:40:49,830:INFO:Creating metrics dataframe
2024-07-17 16:40:49,832:INFO:Finalizing model
2024-07-17 16:40:55,444:INFO:Uploading results into container
2024-07-17 16:40:55,445:INFO:Uploading model into container now
2024-07-17 16:40:55,445:INFO:_master_model_container: 20
2024-07-17 16:40:55,445:INFO:_display_container: 7
2024-07-17 16:40:55,446:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F78F6C050>
2024-07-17 16:40:55,446:INFO:create_model() successfully completed......................................
2024-07-17 16:40:55,588:INFO:SubProcess create_model() end ==================================
2024-07-17 16:40:55,588:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F78F6C050> result for F1 is 0.787
2024-07-17 16:40:55,588:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F7B618150> result for F1 is 0.7849
2024-07-17 16:40:55,588:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F78F6C050> is best model
2024-07-17 16:40:55,588:INFO:choose_better completed
2024-07-17 16:40:55,588:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 16:40:55,604:INFO:_master_model_container: 20
2024-07-17 16:40:55,605:INFO:_display_container: 6
2024-07-17 16:40:55,605:INFO:<catboost.core.CatBoostClassifier object at 0x0000014F78F6C050>
2024-07-17 16:40:55,605:INFO:tune_model() successfully completed......................................
2024-07-17 16:42:47,554:INFO:Initializing interpret_model()
2024-07-17 16:42:47,555:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 16:42:47,555:INFO:Checking exceptions
2024-07-17 16:42:47,556:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2024-07-17 16:44:59,776:INFO:Initializing interpret_model()
2024-07-17 16:44:59,776:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000014F735DBD10>, estimator=<catboost.core.CatBoostClassifier object at 0x0000014F72D0FE10>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 16:44:59,776:INFO:Checking exceptions
2024-07-17 16:44:59,777:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2024-07-17 17:07:52,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_1f7f2ad47ba14f4ab3e5cd59342c1163
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_ec4e6cdec0de40bf88142a9f1c3f97f3_2dd11ad9a2dd4120ad0be4b14c96cfac
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_ba6f2bd5455b4b8283bb9faf7e8a90a8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_1ca70be6b79a4a4cb12dab12e27ddf0b_b53c180499df4a3292f61f6ffc2b9a5d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_66ec701a44364dd5853eee9250a62e07
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_4dfad7692ca14c6da5d11302609722cf_79714b5bb75f4396a028c1714dadf15a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_90ce650b400f4391845ee8236b9b2c50
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_5e839d816e064bbeb498054d432f1caa_39617f74ca34483882878114571dfc21
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_9d83730150794167973e016c9f53f2a8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_04e1aa624c994e4ba5d5f87a64529fe2_a17b0cc5f14c4065addd1b5b2070a8c8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_33f5598ee127407d87c7c13635de6abb
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_7afb7b0176c441758b5e9f4d409e9c3b_ad86fd61f1044354ab426ce1e8a5700b
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_5510bcb8a84b45a0acf670b9c3d5e0d8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_dff2571f8c2346afa7bd8e24a1fc3663_9d3a9e2403f54d69868adcaeeb55563f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_41c99fd015b5434e89321c3fd8289d3c
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_03f6adff84144a1cabc698b44cf0d935_6e340aff0fa04aaea53ca83a8c1a640e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_eb9c33648fa14868a138d31097f67f9a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_430448774361407db26d412f6c5e8e2e_4be7d8642a7a4013b9cfb23ecb971789
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_caaf755e053446368d8090ef3d5a12e5
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_d9d8c6f2e77f4c21b7c266a1e87ad3e7_1c6895796bee453aa356be4aa82d84f6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_3f2aa7e1ff934c0692e6c97e6683272d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,968:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_99f9e51c74ba4020beb04aa175020a31_d5801d95e84a42d89438a16d0887a5e9
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_d180bf7c39214707851a9559488e9138
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_40c5a76fb3c842ff9d909c049eda4775_8e390d1b4bed438786dce43e71fba565
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_fa84bb5ef7064830afabcf093e0f9234
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_cd0eb0dd602a413fb30ba8c035404463_d7cf33ea44244f9d8591790b1c26cc01
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_68fb7d975274444395524bb1f5257252
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_82cac1618e3841d18f3bbf77665c6b8b_37d9590c0dd54abe9ff0732dd0561948
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_6c2625025bd54371abb370afa3ae2ee0
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_238348379b894ad388219745ce6ee3f2_4ae6aea94da14b9cb365d31b80166529
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_958ff00682e9498591483e2ba4897ae3
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_c42df424dbc74575bd4a33409bb82477_42ee8f38b8084cc2ba80c86e58f9ed65
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_1cc50505cda14ae8b4f5d2e6bb3a29c4
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_a6f107bd9d4f49408bd88680fc2f6cb5_53c2f9576a664dbcaa862739f9f6c1ad
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_0fd01d72977243a8bf3ef66064e0c373
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_264f07ca20954044adf4fdca20182869_ce9c8aa0618147a1ad93342f43e6b571
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_ef725e2259c44bce8df3d6736cb833ef
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_4a2b90e7238344b2b33a3cf2548fa7b5_ddd5cb9ab4384644b5b9957b059e7692
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_fd0da7c2a7814e1eb789d8b2ebda99da
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_20c4bbc50a7240fe95debee041ab3644_c599e1b5257b49efb38087f8edfdcbe9
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_87299bfb925c4df89885b0654dca6bcf
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_950e306aa1304f7db930ddcd428a627d_0fbab36519d540cfbb140da68b57f475
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_6ba66ececa1d4926bc123482daefc880
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_e35922532fbd4d1d9d3a2154592483a6_fe99c0798fb54ded93c3ba542e16092e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,974:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_3b60fcd898604b439081a82ae75a8edd
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_a4652d6ab187445dae996b68542365e6_3a55a1fc6a884d9da676a1b2e4acc8da
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_66afa97aa2934073b06b84228491ff8d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_f75a50d271cf46788803a151b91d05d5_6419e0d343ff4779818e996904dc1209
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,980:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_c265fca451594360aa5b7f3edb4e6f0f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:07:52,980:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_32820_0937b2582a3f4eb5b7ba14f5810f9a3f_3428b640eb63486489ed0673da49bcb2
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 17:41:45,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:41:45,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:41:45,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:41:45,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:41:54,233:INFO:PyCaret ClassificationExperiment
2024-07-17 17:41:54,233:INFO:Logging name: clf-default-name
2024-07-17 17:41:54,234:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 17:41:54,234:INFO:version 3.3.2
2024-07-17 17:41:54,234:INFO:Initializing setup()
2024-07-17 17:41:54,234:INFO:self.USI: 58d0
2024-07-17 17:41:54,234:INFO:self._variable_keys: {'fix_imbalance', '_available_plots', 'exp_id', 'html_param', 'exp_name_log', 'X', 'memory', 'pipeline', 'n_jobs_param', 'fold_generator', 'data', 'USI', 'seed', 'fold_groups_param', 'X_train', 'X_test', 'target_param', 'is_multiclass', 'gpu_n_jobs_param', 'gpu_param', 'y_train', '_ml_usecase', 'log_plots_param', 'y', 'idx', 'logging_param', 'fold_shuffle_param', 'y_test'}
2024-07-17 17:41:54,234:INFO:Checking environment
2024-07-17 17:41:54,235:INFO:python_version: 3.11.7
2024-07-17 17:41:54,235:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-07-17 17:41:54,235:INFO:machine: AMD64
2024-07-17 17:41:54,235:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-17 17:41:54,235:INFO:Memory: svmem(total=17064296448, available=6770290688, percent=60.3, used=10294005760, free=6770290688)
2024-07-17 17:41:54,235:INFO:Physical Core: 4
2024-07-17 17:41:54,236:INFO:Logical Core: 8
2024-07-17 17:41:54,236:INFO:Checking libraries
2024-07-17 17:41:54,236:INFO:System:
2024-07-17 17:41:54,236:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-07-17 17:41:54,236:INFO:executable: C:\Users\MTIDES\anaconda3\python.exe
2024-07-17 17:41:54,236:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-17 17:41:54,236:INFO:PyCaret required dependencies:
2024-07-17 17:41:54,608:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:55,199:INFO:                 pip: 23.2.1
2024-07-17 17:41:55,199:INFO:          setuptools: 68.2.2
2024-07-17 17:41:55,199:INFO:             pycaret: 3.3.2
2024-07-17 17:41:55,200:INFO:             IPython: 8.20.0
2024-07-17 17:41:55,200:INFO:          ipywidgets: 8.0.4
2024-07-17 17:41:55,200:INFO:                tqdm: 4.65.0
2024-07-17 17:41:55,200:INFO:               numpy: 1.24.3
2024-07-17 17:41:55,200:INFO:              pandas: 2.1.4
2024-07-17 17:41:55,200:INFO:              jinja2: 3.1.2
2024-07-17 17:41:55,200:INFO:               scipy: 1.11.4
2024-07-17 17:41:55,200:INFO:              joblib: 1.3.2
2024-07-17 17:41:55,200:INFO:             sklearn: 1.4.2
2024-07-17 17:41:55,200:INFO:                pyod: 2.0.1
2024-07-17 17:41:55,200:INFO:            imblearn: 0.11.0
2024-07-17 17:41:55,200:INFO:   category_encoders: 2.6.3
2024-07-17 17:41:55,200:INFO:            lightgbm: 4.4.0
2024-07-17 17:41:55,200:INFO:               numba: 0.58.1
2024-07-17 17:41:55,200:INFO:            requests: 2.31.0
2024-07-17 17:41:55,201:INFO:          matplotlib: 3.8.0
2024-07-17 17:41:55,201:INFO:          scikitplot: 0.3.7
2024-07-17 17:41:55,201:INFO:         yellowbrick: 1.5
2024-07-17 17:41:55,201:INFO:              plotly: 5.22.0
2024-07-17 17:41:55,201:INFO:    plotly-resampler: Not installed
2024-07-17 17:41:55,201:INFO:             kaleido: 0.2.1
2024-07-17 17:41:55,201:INFO:           schemdraw: 0.15
2024-07-17 17:41:55,201:INFO:         statsmodels: 0.14.0
2024-07-17 17:41:55,201:INFO:              sktime: 0.26.0
2024-07-17 17:41:55,201:INFO:               tbats: 1.1.3
2024-07-17 17:41:55,201:INFO:            pmdarima: 2.0.4
2024-07-17 17:41:55,201:INFO:              psutil: 5.9.0
2024-07-17 17:41:55,201:INFO:          markupsafe: 2.1.3
2024-07-17 17:41:55,201:INFO:             pickle5: Not installed
2024-07-17 17:41:55,201:INFO:         cloudpickle: 2.2.1
2024-07-17 17:41:55,202:INFO:         deprecation: 2.1.0
2024-07-17 17:41:55,202:INFO:              xxhash: 2.0.2
2024-07-17 17:41:55,202:INFO:           wurlitzer: Not installed
2024-07-17 17:41:55,202:INFO:PyCaret optional dependencies:
2024-07-17 17:41:55,226:INFO:                shap: 0.46.0
2024-07-17 17:41:55,226:INFO:           interpret: Not installed
2024-07-17 17:41:55,226:INFO:                umap: Not installed
2024-07-17 17:41:55,226:INFO:     ydata_profiling: 4.6.4
2024-07-17 17:41:55,226:INFO:  explainerdashboard: Not installed
2024-07-17 17:41:55,227:INFO:             autoviz: Not installed
2024-07-17 17:41:55,227:INFO:           fairlearn: Not installed
2024-07-17 17:41:55,227:INFO:          deepchecks: Not installed
2024-07-17 17:41:55,227:INFO:             xgboost: Not installed
2024-07-17 17:41:55,227:INFO:            catboost: 1.2.5
2024-07-17 17:41:55,227:INFO:              kmodes: Not installed
2024-07-17 17:41:55,227:INFO:             mlxtend: Not installed
2024-07-17 17:41:55,227:INFO:       statsforecast: Not installed
2024-07-17 17:41:55,227:INFO:        tune_sklearn: Not installed
2024-07-17 17:41:55,227:INFO:                 ray: Not installed
2024-07-17 17:41:55,227:INFO:            hyperopt: Not installed
2024-07-17 17:41:55,227:INFO:              optuna: Not installed
2024-07-17 17:41:55,228:INFO:               skopt: Not installed
2024-07-17 17:41:55,228:INFO:              mlflow: Not installed
2024-07-17 17:41:55,228:INFO:              gradio: Not installed
2024-07-17 17:41:55,228:INFO:             fastapi: Not installed
2024-07-17 17:41:55,228:INFO:             uvicorn: Not installed
2024-07-17 17:41:55,228:INFO:              m2cgen: Not installed
2024-07-17 17:41:55,228:INFO:           evidently: Not installed
2024-07-17 17:41:55,228:INFO:               fugue: Not installed
2024-07-17 17:41:55,228:INFO:           streamlit: Not installed
2024-07-17 17:41:55,228:INFO:             prophet: Not installed
2024-07-17 17:41:55,228:INFO:None
2024-07-17 17:41:55,228:INFO:Set up data.
2024-07-17 17:41:55,243:INFO:Set up folding strategy.
2024-07-17 17:41:55,244:INFO:Set up train/test split.
2024-07-17 17:41:55,263:INFO:Set up index.
2024-07-17 17:41:55,263:INFO:Assigning column types.
2024-07-17 17:41:55,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 17:41:55,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,378:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,471:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,471:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 17:41:55,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,555:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,604:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 17:41:55,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,634:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,635:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 17:41:55,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,714:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:55,807:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:55,809:INFO:Preparing preprocessing pipeline...
2024-07-17 17:41:55,811:INFO:Set up label encoding.
2024-07-17 17:41:55,811:INFO:Set up simple imputation.
2024-07-17 17:41:55,860:INFO:Finished creating preprocessing pipeline.
2024-07-17 17:41:55,865:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-07-17 17:41:55,865:INFO:Creating final display dataframe.
2024-07-17 17:41:56,066:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target  num_awards_given
2                   Target type            Binary
3                Target mapping   High: 0, Low: 1
4           Original data shape        (3798, 40)
5        Transformed data shape        (3798, 40)
6   Transformed train set shape        (2658, 40)
7    Transformed test set shape        (1140, 40)
8              Numeric features                39
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              58d0
2024-07-17 17:41:56,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:56,201:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:56,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 17:41:56,378:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 17:41:56,382:INFO:setup() successfully completed in 2.15s...............
2024-07-17 17:41:56,382:INFO:Initializing compare_models()
2024-07-17 17:41:56,382:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-17 17:41:56,383:INFO:Checking exceptions
2024-07-17 17:41:56,400:INFO:Preparing display monitor
2024-07-17 17:41:56,461:INFO:Initializing Logistic Regression
2024-07-17 17:41:56,462:INFO:Total runtime is 0.0 minutes
2024-07-17 17:41:56,468:INFO:SubProcess create_model() called ==================================
2024-07-17 17:41:56,468:INFO:Initializing create_model()
2024-07-17 17:41:56,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:41:56,469:INFO:Checking exceptions
2024-07-17 17:41:56,469:INFO:Importing libraries
2024-07-17 17:41:56,469:INFO:Copying training dataset
2024-07-17 17:41:56,485:INFO:Defining folds
2024-07-17 17:41:56,485:INFO:Declaring metric variables
2024-07-17 17:41:56,489:INFO:Importing untrained model
2024-07-17 17:41:56,492:INFO:Logistic Regression Imported successfully
2024-07-17 17:41:56,503:INFO:Starting cross validation
2024-07-17 17:41:56,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:41:59,648:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,673:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,680:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,722:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,811:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,822:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:41:59,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:42:00,048:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 17:42:01,449:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,480:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,494:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,503:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,536:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,564:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,599:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,611:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,621:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,644:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,678:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,687:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,696:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,721:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,870:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,896:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:01,903:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,912:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,920:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,928:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:01,942:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:02,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:02,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,046:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,050:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 17:42:02,224:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,229:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,247:INFO:Calculating mean and std
2024-07-17 17:42:02,250:INFO:Creating metrics dataframe
2024-07-17 17:42:02,252:INFO:Uploading results into container
2024-07-17 17:42:02,253:INFO:Uploading model into container now
2024-07-17 17:42:02,253:INFO:_master_model_container: 1
2024-07-17 17:42:02,254:INFO:_display_container: 2
2024-07-17 17:42:02,254:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 17:42:02,254:INFO:create_model() successfully completed......................................
2024-07-17 17:42:02,368:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:02,368:INFO:Creating metrics dataframe
2024-07-17 17:42:02,376:INFO:Initializing K Neighbors Classifier
2024-07-17 17:42:02,376:INFO:Total runtime is 0.09858722686767578 minutes
2024-07-17 17:42:02,380:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:02,380:INFO:Initializing create_model()
2024-07-17 17:42:02,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:02,380:INFO:Checking exceptions
2024-07-17 17:42:02,381:INFO:Importing libraries
2024-07-17 17:42:02,381:INFO:Copying training dataset
2024-07-17 17:42:02,397:INFO:Defining folds
2024-07-17 17:42:02,397:INFO:Declaring metric variables
2024-07-17 17:42:02,402:INFO:Importing untrained model
2024-07-17 17:42:02,407:INFO:K Neighbors Classifier Imported successfully
2024-07-17 17:42:02,418:INFO:Starting cross validation
2024-07-17 17:42:02,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:02,932:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,940:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,948:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,959:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,973:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,976:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,981:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,982:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,984:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:02,990:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,039:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,041:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,052:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,085:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,089:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,093:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,219:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,224:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,227:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,228:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,240:INFO:Calculating mean and std
2024-07-17 17:42:03,241:INFO:Creating metrics dataframe
2024-07-17 17:42:03,243:INFO:Uploading results into container
2024-07-17 17:42:03,244:INFO:Uploading model into container now
2024-07-17 17:42:03,244:INFO:_master_model_container: 2
2024-07-17 17:42:03,244:INFO:_display_container: 2
2024-07-17 17:42:03,245:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-17 17:42:03,245:INFO:create_model() successfully completed......................................
2024-07-17 17:42:03,360:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:03,360:INFO:Creating metrics dataframe
2024-07-17 17:42:03,368:INFO:Initializing Naive Bayes
2024-07-17 17:42:03,369:INFO:Total runtime is 0.11514617999394734 minutes
2024-07-17 17:42:03,374:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:03,375:INFO:Initializing create_model()
2024-07-17 17:42:03,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:03,375:INFO:Checking exceptions
2024-07-17 17:42:03,375:INFO:Importing libraries
2024-07-17 17:42:03,375:INFO:Copying training dataset
2024-07-17 17:42:03,390:INFO:Defining folds
2024-07-17 17:42:03,390:INFO:Declaring metric variables
2024-07-17 17:42:03,394:INFO:Importing untrained model
2024-07-17 17:42:03,398:INFO:Naive Bayes Imported successfully
2024-07-17 17:42:03,405:INFO:Starting cross validation
2024-07-17 17:42:03,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:03,475:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,490:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,490:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,490:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,497:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,498:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,498:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,505:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,506:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,507:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,513:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,513:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,515:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,515:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,520:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,523:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,523:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,527:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,528:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,530:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,535:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,543:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,549:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,555:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,559:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,599:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,622:INFO:Calculating mean and std
2024-07-17 17:42:03,623:INFO:Creating metrics dataframe
2024-07-17 17:42:03,626:INFO:Uploading results into container
2024-07-17 17:42:03,627:INFO:Uploading model into container now
2024-07-17 17:42:03,627:INFO:_master_model_container: 3
2024-07-17 17:42:03,628:INFO:_display_container: 2
2024-07-17 17:42:03,628:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-17 17:42:03,628:INFO:create_model() successfully completed......................................
2024-07-17 17:42:03,742:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:03,743:INFO:Creating metrics dataframe
2024-07-17 17:42:03,750:INFO:Initializing Decision Tree Classifier
2024-07-17 17:42:03,750:INFO:Total runtime is 0.12148118019104004 minutes
2024-07-17 17:42:03,754:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:03,755:INFO:Initializing create_model()
2024-07-17 17:42:03,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:03,756:INFO:Checking exceptions
2024-07-17 17:42:03,757:INFO:Importing libraries
2024-07-17 17:42:03,757:INFO:Copying training dataset
2024-07-17 17:42:03,791:INFO:Defining folds
2024-07-17 17:42:03,792:INFO:Declaring metric variables
2024-07-17 17:42:03,795:INFO:Importing untrained model
2024-07-17 17:42:03,804:INFO:Decision Tree Classifier Imported successfully
2024-07-17 17:42:03,817:INFO:Starting cross validation
2024-07-17 17:42:03,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:03,945:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,952:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,959:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,960:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,961:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,963:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,976:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,979:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,986:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,994:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:03,997:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,005:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,013:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,024:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,056:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,060:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,060:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,076:INFO:Calculating mean and std
2024-07-17 17:42:04,077:INFO:Creating metrics dataframe
2024-07-17 17:42:04,079:INFO:Uploading results into container
2024-07-17 17:42:04,079:INFO:Uploading model into container now
2024-07-17 17:42:04,079:INFO:_master_model_container: 4
2024-07-17 17:42:04,080:INFO:_display_container: 2
2024-07-17 17:42:04,080:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-17 17:42:04,080:INFO:create_model() successfully completed......................................
2024-07-17 17:42:04,195:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:04,195:INFO:Creating metrics dataframe
2024-07-17 17:42:04,204:INFO:Initializing SVM - Linear Kernel
2024-07-17 17:42:04,205:INFO:Total runtime is 0.12906424601872762 minutes
2024-07-17 17:42:04,212:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:04,213:INFO:Initializing create_model()
2024-07-17 17:42:04,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:04,213:INFO:Checking exceptions
2024-07-17 17:42:04,213:INFO:Importing libraries
2024-07-17 17:42:04,213:INFO:Copying training dataset
2024-07-17 17:42:04,246:INFO:Defining folds
2024-07-17 17:42:04,246:INFO:Declaring metric variables
2024-07-17 17:42:04,251:INFO:Importing untrained model
2024-07-17 17:42:04,258:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 17:42:04,266:INFO:Starting cross validation
2024-07-17 17:42:04,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:04,374:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,381:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,381:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,388:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,389:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,396:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,422:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,422:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,430:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,432:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,437:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,437:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,440:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,445:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,446:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,450:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,452:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,460:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,461:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,486:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,489:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,490:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,494:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,496:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,499:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,502:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,503:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,518:INFO:Calculating mean and std
2024-07-17 17:42:04,519:INFO:Creating metrics dataframe
2024-07-17 17:42:04,521:INFO:Uploading results into container
2024-07-17 17:42:04,522:INFO:Uploading model into container now
2024-07-17 17:42:04,523:INFO:_master_model_container: 5
2024-07-17 17:42:04,523:INFO:_display_container: 2
2024-07-17 17:42:04,523:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-17 17:42:04,523:INFO:create_model() successfully completed......................................
2024-07-17 17:42:04,636:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:04,636:INFO:Creating metrics dataframe
2024-07-17 17:42:04,645:INFO:Initializing Ridge Classifier
2024-07-17 17:42:04,646:INFO:Total runtime is 0.13642597993214925 minutes
2024-07-17 17:42:04,650:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:04,650:INFO:Initializing create_model()
2024-07-17 17:42:04,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:04,651:INFO:Checking exceptions
2024-07-17 17:42:04,651:INFO:Importing libraries
2024-07-17 17:42:04,651:INFO:Copying training dataset
2024-07-17 17:42:04,664:INFO:Defining folds
2024-07-17 17:42:04,665:INFO:Declaring metric variables
2024-07-17 17:42:04,669:INFO:Importing untrained model
2024-07-17 17:42:04,675:INFO:Ridge Classifier Imported successfully
2024-07-17 17:42:04,682:INFO:Starting cross validation
2024-07-17 17:42:04,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:04,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,763:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,766:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,767:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,772:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,773:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,777:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,779:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,780:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,788:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,827:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,830:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,831:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,834:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,851:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,871:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:04,896:INFO:Calculating mean and std
2024-07-17 17:42:04,897:INFO:Creating metrics dataframe
2024-07-17 17:42:04,900:INFO:Uploading results into container
2024-07-17 17:42:04,901:INFO:Uploading model into container now
2024-07-17 17:42:04,901:INFO:_master_model_container: 6
2024-07-17 17:42:04,901:INFO:_display_container: 2
2024-07-17 17:42:04,902:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-17 17:42:04,902:INFO:create_model() successfully completed......................................
2024-07-17 17:42:05,012:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:05,012:INFO:Creating metrics dataframe
2024-07-17 17:42:05,022:INFO:Initializing Random Forest Classifier
2024-07-17 17:42:05,022:INFO:Total runtime is 0.14268686374028525 minutes
2024-07-17 17:42:05,026:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:05,026:INFO:Initializing create_model()
2024-07-17 17:42:05,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:05,027:INFO:Checking exceptions
2024-07-17 17:42:05,027:INFO:Importing libraries
2024-07-17 17:42:05,027:INFO:Copying training dataset
2024-07-17 17:42:05,041:INFO:Defining folds
2024-07-17 17:42:05,041:INFO:Declaring metric variables
2024-07-17 17:42:05,045:INFO:Importing untrained model
2024-07-17 17:42:05,049:INFO:Random Forest Classifier Imported successfully
2024-07-17 17:42:05,056:INFO:Starting cross validation
2024-07-17 17:42:05,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:07,331:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,359:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,357:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,383:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,396:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,404:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,418:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,453:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,481:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,500:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,507:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,510:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,521:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,541:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,542:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,555:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,579:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,593:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:07,888:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,401:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,409:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,418:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,478:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,488:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,495:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,515:INFO:Calculating mean and std
2024-07-17 17:42:08,517:INFO:Creating metrics dataframe
2024-07-17 17:42:08,521:INFO:Uploading results into container
2024-07-17 17:42:08,522:INFO:Uploading model into container now
2024-07-17 17:42:08,523:INFO:_master_model_container: 7
2024-07-17 17:42:08,523:INFO:_display_container: 2
2024-07-17 17:42:08,524:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-17 17:42:08,524:INFO:create_model() successfully completed......................................
2024-07-17 17:42:08,665:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:08,665:INFO:Creating metrics dataframe
2024-07-17 17:42:08,683:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 17:42:08,683:INFO:Total runtime is 0.2036979675292969 minutes
2024-07-17 17:42:08,691:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:08,692:INFO:Initializing create_model()
2024-07-17 17:42:08,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:08,693:INFO:Checking exceptions
2024-07-17 17:42:08,693:INFO:Importing libraries
2024-07-17 17:42:08,693:INFO:Copying training dataset
2024-07-17 17:42:08,716:INFO:Defining folds
2024-07-17 17:42:08,717:INFO:Declaring metric variables
2024-07-17 17:42:08,725:INFO:Importing untrained model
2024-07-17 17:42:08,736:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 17:42:08,750:INFO:Starting cross validation
2024-07-17 17:42:08,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:08,850:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,855:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,858:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,873:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,876:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,895:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,899:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,908:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,912:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,916:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,920:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,921:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,923:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,924:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,926:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,929:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,934:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,942:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,945:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,948:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,941:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,957:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,962:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,979:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,988:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:08,989:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:08,998:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 17:42:09,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,022:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,043:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:09,060:INFO:Calculating mean and std
2024-07-17 17:42:09,062:INFO:Creating metrics dataframe
2024-07-17 17:42:09,065:INFO:Uploading results into container
2024-07-17 17:42:09,066:INFO:Uploading model into container now
2024-07-17 17:42:09,067:INFO:_master_model_container: 8
2024-07-17 17:42:09,067:INFO:_display_container: 2
2024-07-17 17:42:09,067:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-17 17:42:09,067:INFO:create_model() successfully completed......................................
2024-07-17 17:42:09,256:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:09,257:INFO:Creating metrics dataframe
2024-07-17 17:42:09,276:INFO:Initializing Ada Boost Classifier
2024-07-17 17:42:09,277:INFO:Total runtime is 0.2136117418607076 minutes
2024-07-17 17:42:09,293:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:09,295:INFO:Initializing create_model()
2024-07-17 17:42:09,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:09,296:INFO:Checking exceptions
2024-07-17 17:42:09,296:INFO:Importing libraries
2024-07-17 17:42:09,296:INFO:Copying training dataset
2024-07-17 17:42:09,379:INFO:Defining folds
2024-07-17 17:42:09,380:INFO:Declaring metric variables
2024-07-17 17:42:09,387:INFO:Importing untrained model
2024-07-17 17:42:09,394:INFO:Ada Boost Classifier Imported successfully
2024-07-17 17:42:09,406:INFO:Starting cross validation
2024-07-17 17:42:09,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:09,478:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,488:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,499:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,522:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,530:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,531:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,547:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:09,603:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:10,576:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,578:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,596:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,597:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,618:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,620:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,641:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,683:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,693:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,725:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:10,742:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 17:42:10,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,807:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,841:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,859:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,941:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,954:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:10,980:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,858:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,870:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,963:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:11,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:12,003:INFO:Calculating mean and std
2024-07-17 17:42:12,007:INFO:Creating metrics dataframe
2024-07-17 17:42:12,012:INFO:Uploading results into container
2024-07-17 17:42:12,013:INFO:Uploading model into container now
2024-07-17 17:42:12,014:INFO:_master_model_container: 9
2024-07-17 17:42:12,014:INFO:_display_container: 2
2024-07-17 17:42:12,015:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-17 17:42:12,015:INFO:create_model() successfully completed......................................
2024-07-17 17:42:12,327:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:12,328:INFO:Creating metrics dataframe
2024-07-17 17:42:12,357:INFO:Initializing Gradient Boosting Classifier
2024-07-17 17:42:12,358:INFO:Total runtime is 0.2649566650390625 minutes
2024-07-17 17:42:12,376:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:12,378:INFO:Initializing create_model()
2024-07-17 17:42:12,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:12,380:INFO:Checking exceptions
2024-07-17 17:42:12,381:INFO:Importing libraries
2024-07-17 17:42:12,381:INFO:Copying training dataset
2024-07-17 17:42:12,498:INFO:Defining folds
2024-07-17 17:42:12,499:INFO:Declaring metric variables
2024-07-17 17:42:12,509:INFO:Importing untrained model
2024-07-17 17:42:12,521:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 17:42:12,541:INFO:Starting cross validation
2024-07-17 17:42:12,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:16,138:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,140:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,146:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,147:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,153:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,155:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,159:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,163:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,176:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,301:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,303:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,310:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,310:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,317:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,486:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,495:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,685:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,689:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:16,693:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:17,576:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:17,581:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:17,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,025:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,052:INFO:Calculating mean and std
2024-07-17 17:42:18,053:INFO:Creating metrics dataframe
2024-07-17 17:42:18,056:INFO:Uploading results into container
2024-07-17 17:42:18,056:INFO:Uploading model into container now
2024-07-17 17:42:18,057:INFO:_master_model_container: 10
2024-07-17 17:42:18,057:INFO:_display_container: 2
2024-07-17 17:42:18,057:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-17 17:42:18,057:INFO:create_model() successfully completed......................................
2024-07-17 17:42:18,204:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:18,204:INFO:Creating metrics dataframe
2024-07-17 17:42:18,217:INFO:Initializing Linear Discriminant Analysis
2024-07-17 17:42:18,217:INFO:Total runtime is 0.36260306437810264 minutes
2024-07-17 17:42:18,224:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:18,225:INFO:Initializing create_model()
2024-07-17 17:42:18,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:18,225:INFO:Checking exceptions
2024-07-17 17:42:18,225:INFO:Importing libraries
2024-07-17 17:42:18,225:INFO:Copying training dataset
2024-07-17 17:42:18,244:INFO:Defining folds
2024-07-17 17:42:18,244:INFO:Declaring metric variables
2024-07-17 17:42:18,254:INFO:Importing untrained model
2024-07-17 17:42:18,259:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 17:42:18,269:INFO:Starting cross validation
2024-07-17 17:42:18,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:18,363:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,368:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,371:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,377:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,379:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,381:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,383:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,387:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,393:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,394:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,397:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,402:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,412:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,414:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,414:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,434:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,439:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,443:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,460:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,461:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,464:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,467:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,468:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:18,485:INFO:Calculating mean and std
2024-07-17 17:42:18,486:INFO:Creating metrics dataframe
2024-07-17 17:42:18,489:INFO:Uploading results into container
2024-07-17 17:42:18,490:INFO:Uploading model into container now
2024-07-17 17:42:18,490:INFO:_master_model_container: 11
2024-07-17 17:42:18,490:INFO:_display_container: 2
2024-07-17 17:42:18,490:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-17 17:42:18,491:INFO:create_model() successfully completed......................................
2024-07-17 17:42:18,607:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:18,608:INFO:Creating metrics dataframe
2024-07-17 17:42:18,624:INFO:Initializing Extra Trees Classifier
2024-07-17 17:42:18,624:INFO:Total runtime is 0.36938910086949667 minutes
2024-07-17 17:42:18,629:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:18,630:INFO:Initializing create_model()
2024-07-17 17:42:18,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:18,630:INFO:Checking exceptions
2024-07-17 17:42:18,630:INFO:Importing libraries
2024-07-17 17:42:18,630:INFO:Copying training dataset
2024-07-17 17:42:18,648:INFO:Defining folds
2024-07-17 17:42:18,649:INFO:Declaring metric variables
2024-07-17 17:42:18,653:INFO:Importing untrained model
2024-07-17 17:42:18,657:INFO:Extra Trees Classifier Imported successfully
2024-07-17 17:42:18,667:INFO:Starting cross validation
2024-07-17 17:42:18,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:19,680:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,688:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,689:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,696:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,699:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,701:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,702:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,706:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,715:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,716:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,721:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,725:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,726:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,731:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,735:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,742:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,747:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:19,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,174:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,181:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,193:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:20,225:INFO:Calculating mean and std
2024-07-17 17:42:20,227:INFO:Creating metrics dataframe
2024-07-17 17:42:20,230:INFO:Uploading results into container
2024-07-17 17:42:20,230:INFO:Uploading model into container now
2024-07-17 17:42:20,232:INFO:_master_model_container: 12
2024-07-17 17:42:20,232:INFO:_display_container: 2
2024-07-17 17:42:20,233:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-17 17:42:20,233:INFO:create_model() successfully completed......................................
2024-07-17 17:42:20,366:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:20,367:INFO:Creating metrics dataframe
2024-07-17 17:42:20,384:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 17:42:20,385:INFO:Total runtime is 0.39873191515604656 minutes
2024-07-17 17:42:20,390:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:20,390:INFO:Initializing create_model()
2024-07-17 17:42:20,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:20,391:INFO:Checking exceptions
2024-07-17 17:42:20,391:INFO:Importing libraries
2024-07-17 17:42:20,391:INFO:Copying training dataset
2024-07-17 17:42:20,406:INFO:Defining folds
2024-07-17 17:42:20,406:INFO:Declaring metric variables
2024-07-17 17:42:20,410:INFO:Importing untrained model
2024-07-17 17:42:20,419:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 17:42:20,426:INFO:Starting cross validation
2024-07-17 17:42:20,427:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:21,651:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,659:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,664:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,666:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,667:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,676:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,679:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,686:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,749:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,798:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,806:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,808:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,821:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,835:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,909:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:21,917:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,232:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,240:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,249:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,250:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:22,290:INFO:Calculating mean and std
2024-07-17 17:42:22,292:INFO:Creating metrics dataframe
2024-07-17 17:42:22,296:INFO:Uploading results into container
2024-07-17 17:42:22,297:INFO:Uploading model into container now
2024-07-17 17:42:22,298:INFO:_master_model_container: 13
2024-07-17 17:42:22,298:INFO:_display_container: 2
2024-07-17 17:42:22,299:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-17 17:42:22,299:INFO:create_model() successfully completed......................................
2024-07-17 17:42:22,417:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:22,417:INFO:Creating metrics dataframe
2024-07-17 17:42:22,431:INFO:Initializing CatBoost Classifier
2024-07-17 17:42:22,432:INFO:Total runtime is 0.43283708492914835 minutes
2024-07-17 17:42:22,436:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:22,436:INFO:Initializing create_model()
2024-07-17 17:42:22,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:22,437:INFO:Checking exceptions
2024-07-17 17:42:22,437:INFO:Importing libraries
2024-07-17 17:42:22,437:INFO:Copying training dataset
2024-07-17 17:42:22,473:INFO:Defining folds
2024-07-17 17:42:22,473:INFO:Declaring metric variables
2024-07-17 17:42:22,477:INFO:Importing untrained model
2024-07-17 17:42:22,482:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:42:22,491:INFO:Starting cross validation
2024-07-17 17:42:22,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:46,246:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:46,252:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:46,269:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:46,341:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:46,348:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:46,356:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,335:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,339:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,343:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,763:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,767:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,773:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,773:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,779:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,780:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,788:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,854:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,930:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,939:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:47,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,539:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,544:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,547:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,555:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,558:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,563:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:53,581:INFO:Calculating mean and std
2024-07-17 17:42:53,584:INFO:Creating metrics dataframe
2024-07-17 17:42:53,587:INFO:Uploading results into container
2024-07-17 17:42:53,588:INFO:Uploading model into container now
2024-07-17 17:42:53,589:INFO:_master_model_container: 14
2024-07-17 17:42:53,589:INFO:_display_container: 2
2024-07-17 17:42:53,589:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C336C210>
2024-07-17 17:42:53,590:INFO:create_model() successfully completed......................................
2024-07-17 17:42:53,763:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:53,763:INFO:Creating metrics dataframe
2024-07-17 17:42:53,787:INFO:Initializing Dummy Classifier
2024-07-17 17:42:53,788:INFO:Total runtime is 0.955447256565094 minutes
2024-07-17 17:42:53,794:INFO:SubProcess create_model() called ==================================
2024-07-17 17:42:53,796:INFO:Initializing create_model()
2024-07-17 17:42:53,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C374B550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:53,797:INFO:Checking exceptions
2024-07-17 17:42:53,798:INFO:Importing libraries
2024-07-17 17:42:53,798:INFO:Copying training dataset
2024-07-17 17:42:53,874:INFO:Defining folds
2024-07-17 17:42:53,875:INFO:Declaring metric variables
2024-07-17 17:42:53,882:INFO:Importing untrained model
2024-07-17 17:42:53,898:INFO:Dummy Classifier Imported successfully
2024-07-17 17:42:53,911:INFO:Starting cross validation
2024-07-17 17:42:53,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:42:54,017:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,043:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,044:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,049:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,056:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,057:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,060:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,061:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,068:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,071:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,073:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,075:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,077:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,084:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,090:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,090:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,093:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,097:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,104:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,106:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,108:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,113:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,116:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,120:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,121:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,126:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,135:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,145:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,149:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,152:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,160:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,160:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 17:42:54,168:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:42:54,205:INFO:Calculating mean and std
2024-07-17 17:42:54,207:INFO:Creating metrics dataframe
2024-07-17 17:42:54,211:INFO:Uploading results into container
2024-07-17 17:42:54,212:INFO:Uploading model into container now
2024-07-17 17:42:54,212:INFO:_master_model_container: 15
2024-07-17 17:42:54,213:INFO:_display_container: 2
2024-07-17 17:42:54,213:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-17 17:42:54,213:INFO:create_model() successfully completed......................................
2024-07-17 17:42:54,363:INFO:SubProcess create_model() end ==================================
2024-07-17 17:42:54,363:INFO:Creating metrics dataframe
2024-07-17 17:42:54,405:INFO:Initializing create_model()
2024-07-17 17:42:54,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C336C210>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:42:54,406:INFO:Checking exceptions
2024-07-17 17:42:54,416:INFO:Importing libraries
2024-07-17 17:42:54,417:INFO:Copying training dataset
2024-07-17 17:42:54,489:INFO:Defining folds
2024-07-17 17:42:54,489:INFO:Declaring metric variables
2024-07-17 17:42:54,490:INFO:Importing untrained model
2024-07-17 17:42:54,491:INFO:Declaring custom model
2024-07-17 17:42:54,493:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:42:54,497:INFO:Cross validation set to False
2024-07-17 17:42:54,498:INFO:Fitting Model
2024-07-17 17:43:05,542:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C3454210>
2024-07-17 17:43:05,542:INFO:create_model() successfully completed......................................
2024-07-17 17:43:05,680:INFO:_master_model_container: 15
2024-07-17 17:43:05,681:INFO:_display_container: 2
2024-07-17 17:43:05,681:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C3454210>
2024-07-17 17:43:05,681:INFO:compare_models() successfully completed......................................
2024-07-17 17:43:05,681:INFO:Initializing evaluate_model()
2024-07-17 17:43:05,681:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-17 17:43:05,700:INFO:Initializing plot_model()
2024-07-17 17:43:05,700:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-17 17:43:05,700:INFO:Checking exceptions
2024-07-17 17:43:05,706:INFO:Preloading libraries
2024-07-17 17:43:05,710:INFO:Copying training dataset
2024-07-17 17:43:05,710:INFO:Plot type: pipeline
2024-07-17 17:43:06,013:INFO:Visual Rendered Successfully
2024-07-17 17:43:06,133:INFO:plot_model() successfully completed......................................
2024-07-17 17:43:06,139:INFO:Initializing predict_model()
2024-07-17 17:43:06,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000166C3349080>)
2024-07-17 17:43:06,140:INFO:Checking exceptions
2024-07-17 17:43:06,140:INFO:Preloading libraries
2024-07-17 17:43:06,267:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:43:06,277:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:43:06,288:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:43:06,426:INFO:Initializing predict_model()
2024-07-17 17:43:06,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000166C332BF60>)
2024-07-17 17:43:06,426:INFO:Checking exceptions
2024-07-17 17:43:06,426:INFO:Preloading libraries
2024-07-17 17:43:06,429:INFO:Set up data.
2024-07-17 17:43:06,451:INFO:Set up index.
2024-07-17 17:43:56,912:INFO:Initializing plot_model()
2024-07-17 17:43:56,913:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 17:43:56,913:INFO:Checking exceptions
2024-07-17 17:43:56,924:INFO:Preloading libraries
2024-07-17 17:43:56,929:INFO:Copying training dataset
2024-07-17 17:43:56,929:INFO:Plot type: confusion_matrix
2024-07-17 17:43:57,158:INFO:Fitting Model
2024-07-17 17:43:57,159:INFO:Scoring test/hold-out set
2024-07-17 17:43:57,420:INFO:Visual Rendered Successfully
2024-07-17 17:43:57,592:INFO:plot_model() successfully completed......................................
2024-07-17 17:44:13,484:INFO:Initializing plot_model()
2024-07-17 17:44:13,485:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 17:44:13,485:INFO:Checking exceptions
2024-07-17 17:44:13,502:INFO:Preloading libraries
2024-07-17 17:44:13,506:INFO:Copying training dataset
2024-07-17 17:44:13,506:INFO:Plot type: auc
2024-07-17 17:44:13,715:INFO:Fitting Model
2024-07-17 17:44:13,716:INFO:Scoring test/hold-out set
2024-07-17 17:44:14,044:INFO:Visual Rendered Successfully
2024-07-17 17:44:14,162:INFO:plot_model() successfully completed......................................
2024-07-17 17:44:24,100:INFO:Initializing plot_model()
2024-07-17 17:44:24,101:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 17:44:24,101:INFO:Checking exceptions
2024-07-17 17:44:24,112:INFO:Preloading libraries
2024-07-17 17:44:24,116:INFO:Copying training dataset
2024-07-17 17:44:24,117:INFO:Plot type: feature
2024-07-17 17:44:24,117:WARNING:No coef_ found. Trying feature_importances_
2024-07-17 17:44:24,453:INFO:Visual Rendered Successfully
2024-07-17 17:44:24,561:INFO:plot_model() successfully completed......................................
2024-07-17 17:44:36,811:INFO:Initializing create_model()
2024-07-17 17:44:36,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:44:36,812:INFO:Checking exceptions
2024-07-17 17:44:36,838:INFO:Importing libraries
2024-07-17 17:44:36,838:INFO:Copying training dataset
2024-07-17 17:44:36,853:INFO:Defining folds
2024-07-17 17:44:36,853:INFO:Declaring metric variables
2024-07-17 17:44:36,857:INFO:Importing untrained model
2024-07-17 17:44:36,860:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:44:36,868:INFO:Starting cross validation
2024-07-17 17:44:36,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:44:58,242:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:44:58,250:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:44:58,256:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,427:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,433:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,438:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,492:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,498:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,776:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,796:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,808:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,816:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,840:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,848:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,857:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,865:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,872:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,912:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,919:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:01,927:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:06,910:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:06,918:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:06,927:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:07,608:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:07,613:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:07,617:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:45:07,627:INFO:Calculating mean and std
2024-07-17 17:45:07,629:INFO:Creating metrics dataframe
2024-07-17 17:45:07,635:INFO:Finalizing model
2024-07-17 17:45:16,893:INFO:Uploading results into container
2024-07-17 17:45:16,896:INFO:Uploading model into container now
2024-07-17 17:45:16,943:INFO:_master_model_container: 16
2024-07-17 17:45:16,944:INFO:_display_container: 4
2024-07-17 17:45:16,945:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>
2024-07-17 17:45:16,945:INFO:create_model() successfully completed......................................
2024-07-17 17:45:31,364:INFO:Initializing tune_model()
2024-07-17 17:45:31,364:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 17:45:31,364:INFO:Checking exceptions
2024-07-17 17:45:31,386:INFO:Copying training dataset
2024-07-17 17:45:31,400:INFO:Checking base model
2024-07-17 17:45:31,400:INFO:Base model : CatBoost Classifier
2024-07-17 17:45:31,405:INFO:Declaring metric variables
2024-07-17 17:45:31,409:INFO:Defining Hyperparameters
2024-07-17 17:45:31,532:INFO:Tuning with n_jobs=-1
2024-07-17 17:45:31,532:INFO:Initializing RandomizedSearchCV
2024-07-17 17:46:05,154:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 50, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 3}
2024-07-17 17:46:05,155:INFO:Hyperparameter search completed
2024-07-17 17:46:05,155:INFO:SubProcess create_model() called ==================================
2024-07-17 17:46:05,156:INFO:Initializing create_model()
2024-07-17 17:46:05,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C38D3710>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C3356ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 50, 'eta': 0.15, 'depth': 3})
2024-07-17 17:46:05,157:INFO:Checking exceptions
2024-07-17 17:46:05,158:INFO:Importing libraries
2024-07-17 17:46:05,158:INFO:Copying training dataset
2024-07-17 17:46:05,177:INFO:Defining folds
2024-07-17 17:46:05,178:INFO:Declaring metric variables
2024-07-17 17:46:05,182:INFO:Importing untrained model
2024-07-17 17:46:05,182:INFO:Declaring custom model
2024-07-17 17:46:05,187:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:46:05,201:INFO:Starting cross validation
2024-07-17 17:46:05,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:46:07,067:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:07,079:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:07,097:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,517:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,535:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,547:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,702:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:08,736:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,194:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,222:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,235:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,443:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,457:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,473:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,515:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,529:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,541:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,602:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,617:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:09,630:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,051:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,068:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,083:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,803:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:10,827:INFO:Calculating mean and std
2024-07-17 17:46:10,829:INFO:Creating metrics dataframe
2024-07-17 17:46:10,840:INFO:Finalizing model
2024-07-17 17:46:13,535:INFO:Uploading results into container
2024-07-17 17:46:13,537:INFO:Uploading model into container now
2024-07-17 17:46:13,539:INFO:_master_model_container: 17
2024-07-17 17:46:13,539:INFO:_display_container: 5
2024-07-17 17:46:13,540:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C36B8690>
2024-07-17 17:46:13,540:INFO:create_model() successfully completed......................................
2024-07-17 17:46:13,764:INFO:SubProcess create_model() end ==================================
2024-07-17 17:46:13,765:INFO:choose_better activated
2024-07-17 17:46:13,774:INFO:SubProcess create_model() called ==================================
2024-07-17 17:46:13,776:INFO:Initializing create_model()
2024-07-17 17:46:13,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:46:13,777:INFO:Checking exceptions
2024-07-17 17:46:13,782:INFO:Importing libraries
2024-07-17 17:46:13,784:INFO:Copying training dataset
2024-07-17 17:46:13,845:INFO:Defining folds
2024-07-17 17:46:13,846:INFO:Declaring metric variables
2024-07-17 17:46:13,846:INFO:Importing untrained model
2024-07-17 17:46:13,846:INFO:Declaring custom model
2024-07-17 17:46:13,847:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:46:13,848:INFO:Starting cross validation
2024-07-17 17:46:13,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:46:33,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:33,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:33,147:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:34,253:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:34,275:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:34,290:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,314:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,358:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,577:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,611:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:36,635:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,892:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,903:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,920:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,926:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,943:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:37,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,656:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,680:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,750:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:38,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:44,790:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:44,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:44,811:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:45,093:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:45,100:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:45,106:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:46:45,120:INFO:Calculating mean and std
2024-07-17 17:46:45,121:INFO:Creating metrics dataframe
2024-07-17 17:46:45,126:INFO:Finalizing model
2024-07-17 17:46:50,542:INFO:Uploading results into container
2024-07-17 17:46:50,542:INFO:Uploading model into container now
2024-07-17 17:46:50,543:INFO:_master_model_container: 18
2024-07-17 17:46:50,543:INFO:_display_container: 6
2024-07-17 17:46:50,543:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB910>
2024-07-17 17:46:50,543:INFO:create_model() successfully completed......................................
2024-07-17 17:46:50,655:INFO:SubProcess create_model() end ==================================
2024-07-17 17:46:50,655:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB910> result for Accuracy is 0.7874
2024-07-17 17:46:50,656:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C36B8690> result for Accuracy is 0.7791
2024-07-17 17:46:50,656:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB910> is best model
2024-07-17 17:46:50,656:INFO:choose_better completed
2024-07-17 17:46:50,656:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 17:46:50,676:INFO:_master_model_container: 18
2024-07-17 17:46:50,677:INFO:_display_container: 5
2024-07-17 17:46:50,677:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB910>
2024-07-17 17:46:50,678:INFO:tune_model() successfully completed......................................
2024-07-17 17:47:18,005:INFO:Initializing tune_model()
2024-07-17 17:47:18,006:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, fold=None, round=4, n_iter=10, custom_grid={'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C3455C50>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C376F590>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C345CB90>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C345E550>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C345EE90>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C345D750>}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 17:47:18,006:INFO:Checking exceptions
2024-07-17 17:47:18,053:INFO:Copying training dataset
2024-07-17 17:47:18,070:INFO:Checking base model
2024-07-17 17:47:18,070:INFO:Base model : CatBoost Classifier
2024-07-17 17:47:18,075:INFO:Declaring metric variables
2024-07-17 17:47:18,079:INFO:Defining Hyperparameters
2024-07-17 17:47:18,203:INFO:custom_grid: {'actual_estimator__iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C3455C50>, 'actual_estimator__learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C376F590>, 'actual_estimator__depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C345CB90>, 'actual_estimator__l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C345E550>, 'actual_estimator__border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x00000166C345EE90>, 'actual_estimator__scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x00000166C345D750>}
2024-07-17 17:47:18,203:INFO:Tuning with n_jobs=-1
2024-07-17 17:47:18,203:INFO:Initializing RandomizedSearchCV
2024-07-17 17:47:21,635:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:21,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:21,921:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:21,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:21,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:22,062:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:22,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:22,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:23,988:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:24,546:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,201:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,222:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,321:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,337:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:25,919:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:27,631:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:28,626:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:28,763:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:30,336:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:32,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:32,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:33,993:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:34,544:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:34,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:36,654:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,427:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,495:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,542:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,567:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:37,909:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:38,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,184:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,306:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,439:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,582:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,699:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:39,720:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:40,334:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:40,694:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:40,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,288:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,412:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,502:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,639:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:42,836:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:47:43,720:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:33,706:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:38,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:40,072:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:43,049:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:49,658:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:50,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:52,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:48:52,637:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:01,956:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:09,191:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:14,492:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:14,955:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:15,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:15,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:19,223:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:20,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:25,435:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:25,741:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:27,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:27,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:34,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:37,089:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:37,692:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:37,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:39,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:42,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:45,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:48,270:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:54,168:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:49:58,119:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:16,220:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:17,382:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:22,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:26,505:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:32,076:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:33,145:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:33,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:35,674:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:39,153:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:42,387:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:43,214:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:44,279:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:46,252:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:48,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:50,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:50,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:51,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:52,109:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:52,453:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:53,124:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:53,132:INFO:best_params: {'actual_estimator__border_count': 246, 'actual_estimator__depth': 5, 'actual_estimator__iterations': 196, 'actual_estimator__l2_leaf_reg': 6.796942970226101, 'actual_estimator__learning_rate': 0.05198522878911536, 'actual_estimator__scale_pos_weight': 1.302035113322407}
2024-07-17 17:50:53,134:INFO:Hyperparameter search completed
2024-07-17 17:50:53,134:INFO:SubProcess create_model() called ==================================
2024-07-17 17:50:53,135:INFO:Initializing create_model()
2024-07-17 17:50:53,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166BEEA3750>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C3356ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'border_count': 246, 'depth': 5, 'iterations': 196, 'l2_leaf_reg': 6.796942970226101, 'learning_rate': 0.05198522878911536, 'scale_pos_weight': 1.302035113322407})
2024-07-17 17:50:53,135:INFO:Checking exceptions
2024-07-17 17:50:53,135:INFO:Importing libraries
2024-07-17 17:50:53,136:INFO:Copying training dataset
2024-07-17 17:50:53,151:INFO:Defining folds
2024-07-17 17:50:53,152:INFO:Declaring metric variables
2024-07-17 17:50:53,155:INFO:Importing untrained model
2024-07-17 17:50:53,156:INFO:Declaring custom model
2024-07-17 17:50:53,160:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:50:53,168:INFO:Starting cross validation
2024-07-17 17:50:53,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:50:55,382:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,389:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,396:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,487:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,498:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,507:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,844:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,852:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:55,859:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,002:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,016:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,023:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,031:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,203:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,272:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,279:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,287:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,294:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,305:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,313:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,962:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,983:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:56,992:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:50:57,002:INFO:Calculating mean and std
2024-07-17 17:50:57,003:INFO:Creating metrics dataframe
2024-07-17 17:50:57,009:INFO:Finalizing model
2024-07-17 17:50:58,299:INFO:Uploading results into container
2024-07-17 17:50:58,301:INFO:Uploading model into container now
2024-07-17 17:50:58,301:INFO:_master_model_container: 19
2024-07-17 17:50:58,302:INFO:_display_container: 6
2024-07-17 17:50:58,302:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C346CD10>
2024-07-17 17:50:58,302:INFO:create_model() successfully completed......................................
2024-07-17 17:50:58,428:INFO:SubProcess create_model() end ==================================
2024-07-17 17:50:58,428:INFO:choose_better activated
2024-07-17 17:50:58,432:INFO:SubProcess create_model() called ==================================
2024-07-17 17:50:58,432:INFO:Initializing create_model()
2024-07-17 17:50:58,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:50:58,433:INFO:Checking exceptions
2024-07-17 17:50:58,435:INFO:Importing libraries
2024-07-17 17:50:58,435:INFO:Copying training dataset
2024-07-17 17:50:58,452:INFO:Defining folds
2024-07-17 17:50:58,452:INFO:Declaring metric variables
2024-07-17 17:50:58,452:INFO:Importing untrained model
2024-07-17 17:50:58,452:INFO:Declaring custom model
2024-07-17 17:50:58,453:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:50:58,453:INFO:Starting cross validation
2024-07-17 17:50:58,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:51:22,363:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,369:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,377:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,522:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,526:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,530:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,596:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,604:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,682:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,691:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,710:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,717:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,717:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,725:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,796:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,812:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,840:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:22,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,333:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,349:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,367:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,568:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,579:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,591:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:51:30,616:INFO:Calculating mean and std
2024-07-17 17:51:30,617:INFO:Creating metrics dataframe
2024-07-17 17:51:30,621:INFO:Finalizing model
2024-07-17 17:51:40,366:INFO:Uploading results into container
2024-07-17 17:51:40,367:INFO:Uploading model into container now
2024-07-17 17:51:40,367:INFO:_master_model_container: 20
2024-07-17 17:51:40,367:INFO:_display_container: 7
2024-07-17 17:51:40,367:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB750>
2024-07-17 17:51:40,367:INFO:create_model() successfully completed......................................
2024-07-17 17:51:40,487:INFO:SubProcess create_model() end ==================================
2024-07-17 17:51:40,487:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB750> result for F1 is 0.787
2024-07-17 17:51:40,487:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C346CD10> result for F1 is 0.7849
2024-07-17 17:51:40,487:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB750> is best model
2024-07-17 17:51:40,487:INFO:choose_better completed
2024-07-17 17:51:40,487:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 17:51:40,507:INFO:_master_model_container: 20
2024-07-17 17:51:40,507:INFO:_display_container: 6
2024-07-17 17:51:40,507:INFO:<catboost.core.CatBoostClassifier object at 0x00000166C38AB750>
2024-07-17 17:51:40,507:INFO:tune_model() successfully completed......................................
2024-07-17 17:53:03,961:INFO:Initializing interpret_model()
2024-07-17 17:53:03,962:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 17:53:03,962:INFO:Checking exceptions
2024-07-17 17:53:03,962:INFO:Soft dependency imported: shap: 0.46.0
2024-07-17 17:53:14,513:INFO:plot type: summary
2024-07-17 17:53:14,514:INFO:Creating TreeExplainer
2024-07-17 17:53:14,907:INFO:Compiling shap values
2024-07-17 17:53:16,799:INFO:Visual Rendered Successfully
2024-07-17 17:53:16,799:INFO:interpret_model() successfully completed......................................
2024-07-17 17:54:01,437:INFO:Initializing interpret_model()
2024-07-17 17:54:01,438:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, plot=reason, feature=None, observation=1, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 17:54:01,438:INFO:Checking exceptions
2024-07-17 17:54:01,438:INFO:Soft dependency imported: shap: 0.46.0
2024-07-17 17:54:01,529:INFO:plot type: reason
2024-07-17 17:54:01,529:INFO:model type detected: type 2
2024-07-17 17:54:01,529:INFO:Creating TreeExplainer
2024-07-17 17:54:01,904:INFO:Compiling shap values
2024-07-17 17:54:03,034:INFO:Visual Rendered Successfully
2024-07-17 17:54:03,034:INFO:interpret_model() successfully completed......................................
2024-07-17 17:54:36,812:INFO:Initializing plot_model()
2024-07-17 17:54:36,813:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 17:54:36,813:INFO:Checking exceptions
2024-07-17 17:54:36,831:INFO:Preloading libraries
2024-07-17 17:54:36,839:INFO:Copying training dataset
2024-07-17 17:54:36,839:INFO:Plot type: calibration
2024-07-17 17:54:36,854:INFO:Scoring test/hold-out set
2024-07-17 17:54:37,265:INFO:Visual Rendered Successfully
2024-07-17 17:54:37,386:INFO:plot_model() successfully completed......................................
2024-07-17 17:55:06,654:INFO:Initializing calibrate_model()
2024-07-17 17:55:06,655:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>, method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-17 17:55:06,656:INFO:Checking exceptions
2024-07-17 17:55:06,662:INFO:Preloading libraries
2024-07-17 17:55:06,662:INFO:Preparing display monitor
2024-07-17 17:55:06,687:INFO:Getting model name
2024-07-17 17:55:06,687:INFO:Base model : CatBoost Classifier
2024-07-17 17:55:06,695:INFO:Importing untrained CalibratedClassifierCV
2024-07-17 17:55:06,695:INFO:SubProcess create_model() called ==================================
2024-07-17 17:55:06,695:INFO:Initializing create_model()
2024-07-17 17:55:06,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x00000166C0BAC450>,
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000166C346EA90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 17:55:06,696:INFO:Checking exceptions
2024-07-17 17:55:06,696:INFO:Importing libraries
2024-07-17 17:55:06,696:INFO:Copying training dataset
2024-07-17 17:55:06,710:INFO:Defining folds
2024-07-17 17:55:06,710:INFO:Declaring metric variables
2024-07-17 17:55:06,713:INFO:Importing untrained model
2024-07-17 17:55:06,713:INFO:Declaring custom model
2024-07-17 17:55:06,719:INFO:CatBoost Classifier Imported successfully
2024-07-17 17:55:06,729:INFO:Starting cross validation
2024-07-17 17:55:06,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 17:56:56,665:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:56,683:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:56,695:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:57,440:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:57,468:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:57,481:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:58,534:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:58,547:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:56:58,559:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:01,661:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:01,692:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:01,715:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:03,671:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:03,701:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:03,736:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,138:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,186:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,267:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,293:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:05,317:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:06,044:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:06,051:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:06,058:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,073:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,078:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,083:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,139:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,143:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,148:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 17:57:40,158:INFO:Calculating mean and std
2024-07-17 17:57:40,160:INFO:Creating metrics dataframe
2024-07-17 17:57:40,166:INFO:Finalizing model
2024-07-17 17:58:17,764:INFO:Uploading results into container
2024-07-17 17:58:17,766:INFO:Uploading model into container now
2024-07-17 17:58:17,767:INFO:_master_model_container: 21
2024-07-17 17:58:17,767:INFO:_display_container: 7
2024-07-17 17:58:17,768:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x00000166C38BBFD0>,
                       method='sigmoid', n_jobs=None)
2024-07-17 17:58:17,768:INFO:create_model() successfully completed......................................
2024-07-17 17:58:17,956:INFO:SubProcess create_model() end ==================================
2024-07-17 17:58:17,982:INFO:_master_model_container: 21
2024-07-17 17:58:17,982:INFO:_display_container: 7
2024-07-17 17:58:17,983:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x00000166C38BBFD0>,
                       method='sigmoid', n_jobs=None)
2024-07-17 17:58:17,983:INFO:calibrate_model() successfully completed......................................
2024-07-17 17:59:19,852:INFO:Initializing plot_model()
2024-07-17 17:59:19,852:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000166C2304690>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x00000166C38BBFD0>,
                       method='sigmoid', n_jobs=None), plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 17:59:19,853:INFO:Checking exceptions
2024-07-17 17:59:19,872:INFO:Preloading libraries
2024-07-17 17:59:19,894:INFO:Copying training dataset
2024-07-17 17:59:19,894:INFO:Plot type: calibration
2024-07-17 17:59:19,909:INFO:Scoring test/hold-out set
2024-07-17 17:59:20,349:INFO:Visual Rendered Successfully
2024-07-17 17:59:20,473:INFO:plot_model() successfully completed......................................
2024-07-17 18:01:29,950:INFO:Initializing save_model()
2024-07-17 18:01:29,951:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x00000166C3454210>, model_name=my_first_best_pipeline_cboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-17 18:01:29,951:INFO:Adding model into prep_pipe
2024-07-17 18:01:29,960:INFO:my_first_best_pipeline_cboost.pkl saved in current working directory
2024-07-17 18:01:29,973:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state_value',
                                             'exp_award_natl_value', 'ft_pct',
                                             '...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x00000166C3454210>)],
         verbose=False)
2024-07-17 18:01:29,974:INFO:save_model() successfully completed......................................
2024-07-17 18:02:16,583:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_1623cf64063c4d39942645079a31ccf5
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,583:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_67895d8c1290498a8bc1e1836248866e_8b8732e8b8aa4abd92d703e7bd385e9e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,583:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_980ab8a379054c05af34c7675e615321
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_771177712dcd430b9a6016cde2d0b72b_ab4bb1ecdefd4f34ab30eb7bc44e4b53
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_7457086e240f42e6b845ca9c2b026d07
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_09429569b4ff423b9fd507b44cc1363a_c181e08adc004258bdbf829c98430b71
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_721ba35ba7034f70b5e79b94a04953b0
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_68cfe8c748524495a3ac381d3a949283_4c30c99b96894cecb63a2991e24a8f42
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_5d2263118883439fa75079add12248bb
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_f1b69f1165bd45adb2a854fcf8796b42_e4a30e12b48f4907b62bd03def741dee
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_7671b911ac9040c38e2d75d380c0f7e4
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_ccf8c664be0d48b8ba91f4a7bc9709af_82f93304e38948bcb44eb74ff2d2be05
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_b75cc1cfccc443e58b13864bdd666127
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_9da4886ae7f64b2cb0364d0af6c321e2_cd0215a2d9744c45bcca17addf7f06cb
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_fcb7c97fb2014787a690d039cffc3565
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_3c38dd07abe943d5b97fe845d34dd8e8_9c2f2fbc57154e3e91a8832b7926e16c
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_c6eab37caf3442798b97bb622ffe41a8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_2c0bebd729ae47b6aed592c7b290dc58_0bd95081be484df7b607de3068133ab1
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_96860f871f124497b5e3f10b22bca928
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_4f3d27fd0bd44c4c8e35034bc364e235_98e23a743da942629f590d445fc5b5d3
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_b7612ef282d348c89a16a5ac32e2cc45
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_0c2bf71a7ea64c12a197188ba4e22e4c_88edcb98753842759f2dc0ad3b672d4d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_f94896baa0c940c88860f7f242af7dd1
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_d2c4bd60ba4e49da8efbb8f4012172ef_dbda591184ea473f81bc3f5544fd6a3f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_54275e6ecfde493ba48a8b600da51b4f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_15400c9ce4cf43828b08cf50925de4b4_626978dd12a649c7abfe59dc7f59aa0e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_e8b0a2c2162d4b0ab1f9e26563bb8ba5
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_27f3cf3488aa4207a785b633e263ef77_47aaae7b42e1496189c63a05736f534e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_81d24b7642e648789825025e27c21a4e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_f14ba32caeb24cd6a98230518adb2b37_49866545e3cd46f4a7835d6d2614a486
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_10d566691c914cad940699fdb18e9232
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_3df3c74c4e5b4973a2c183d5e408946a_fb4ae410d28d4922943d2b6626159481
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_b3fb0206dbcf4ce18c108e010948676a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_3368077e15b64407a128b57e9771b963_159b3d46b6fb436c83ccf24ee5eeae7f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,588:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_bbf9d8c91a5b4781b73040c8954da117
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_e82ade2ffa2640d3a9baa78d84495f3f_284a03cef75d499480b0e79e4308ee71
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_614e807e7ebc46d687ca212a67e985be
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_63101b450e234aa9a3f7fe5183bf9348_70b41fc39f8c4b06930caf6c6a81f036
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_f74bd8e820d64695af8905b6de047a72
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_76b31a7cb29c427785ed0b2a9965c371_5d9fa1bc78144a31b7e66c39bc6a9c92
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_94ec75b2c36b41f6ac3e772837345888
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_d1f595ff93c14b32b6a6a234c4fedd74_997203b1cdcd4a459eedd41e02d1ea4a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_86654ad26b9247b093a8d3f2637af3f6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_66d39670e3b744818e8ffdc83e42dff6_925b265612644d548e01e383939d1e54
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_a8c4af6ff8b34bd6bd6df6800f33c304
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,591:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_08f0cc6d1b3f49b895c7c9bfcea0eb06_12b7bc1fc9f4436aaa79a48c473eadc8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,591:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_d04353be54234e46865dfe7bd60903b4
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,592:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_a489a7d2e12f41d5862c475f6024b1df_6911fbae315449e89874f3871f17297b
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,592:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_d39ba3996c104f5a81078009d54f45b6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,592:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_3d5a8d720fc647df998ad2699605142d_aed817613c614f73b6f1d0d81172dab9
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,595:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_c8ed836b1c9e486ab8025d264f367bbe
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 18:02:16,595:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_28304_39c0b01ccfc143af9a26ccfa9fdbaa7d_91f49e16a4e945c5b07de946be342bd5
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 19:14:33,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 19:14:33,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 19:14:33,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 19:14:33,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 19:14:33,662:INFO:PyCaret ClassificationExperiment
2024-07-17 19:14:33,663:INFO:Logging name: clf-default-name
2024-07-17 19:14:33,663:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 19:14:33,663:INFO:version 3.3.2
2024-07-17 19:14:33,663:INFO:Initializing setup()
2024-07-17 19:14:33,663:INFO:self.USI: b247
2024-07-17 19:14:33,663:INFO:self._variable_keys: {'_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'y_train', 'fold_groups_param', 'exp_id', 'fix_imbalance', 'gpu_param', 'idx', 'USI', 'y_test', 'y', 'target_param', 'logging_param', 'exp_name_log', 'X_train', 'fold_generator', 'seed', 'log_plots_param', 'gpu_n_jobs_param', 'data', 'X', 'is_multiclass', 'html_param', '_ml_usecase', 'pipeline', 'memory'}
2024-07-17 19:14:33,663:INFO:Checking environment
2024-07-17 19:14:33,663:INFO:python_version: 3.11.7
2024-07-17 19:14:33,663:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-07-17 19:14:33,663:INFO:machine: AMD64
2024-07-17 19:14:33,663:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-17 19:14:33,663:INFO:Memory: svmem(total=17064296448, available=6965923840, percent=59.2, used=10098372608, free=6965923840)
2024-07-17 19:14:33,663:INFO:Physical Core: 4
2024-07-17 19:14:33,663:INFO:Logical Core: 8
2024-07-17 19:14:33,664:INFO:Checking libraries
2024-07-17 19:14:33,664:INFO:System:
2024-07-17 19:14:33,664:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-07-17 19:14:33,664:INFO:executable: C:\Users\MTIDES\anaconda3\python.exe
2024-07-17 19:14:33,664:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-17 19:14:33,664:INFO:PyCaret required dependencies:
2024-07-17 19:14:33,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:34,741:INFO:                 pip: 23.2.1
2024-07-17 19:14:34,742:INFO:          setuptools: 68.2.2
2024-07-17 19:14:34,742:INFO:             pycaret: 3.3.2
2024-07-17 19:14:34,742:INFO:             IPython: 8.20.0
2024-07-17 19:14:34,742:INFO:          ipywidgets: 8.0.4
2024-07-17 19:14:34,742:INFO:                tqdm: 4.65.0
2024-07-17 19:14:34,742:INFO:               numpy: 1.24.3
2024-07-17 19:14:34,742:INFO:              pandas: 2.1.4
2024-07-17 19:14:34,742:INFO:              jinja2: 3.1.2
2024-07-17 19:14:34,742:INFO:               scipy: 1.11.4
2024-07-17 19:14:34,742:INFO:              joblib: 1.3.2
2024-07-17 19:14:34,742:INFO:             sklearn: 1.4.2
2024-07-17 19:14:34,742:INFO:                pyod: 2.0.1
2024-07-17 19:14:34,742:INFO:            imblearn: 0.11.0
2024-07-17 19:14:34,742:INFO:   category_encoders: 2.6.3
2024-07-17 19:14:34,742:INFO:            lightgbm: 4.4.0
2024-07-17 19:14:34,742:INFO:               numba: 0.58.1
2024-07-17 19:14:34,742:INFO:            requests: 2.31.0
2024-07-17 19:14:34,742:INFO:          matplotlib: 3.8.0
2024-07-17 19:14:34,742:INFO:          scikitplot: 0.3.7
2024-07-17 19:14:34,742:INFO:         yellowbrick: 1.5
2024-07-17 19:14:34,743:INFO:              plotly: 5.22.0
2024-07-17 19:14:34,743:INFO:    plotly-resampler: Not installed
2024-07-17 19:14:34,743:INFO:             kaleido: 0.2.1
2024-07-17 19:14:34,743:INFO:           schemdraw: 0.15
2024-07-17 19:14:34,743:INFO:         statsmodels: 0.14.0
2024-07-17 19:14:34,743:INFO:              sktime: 0.26.0
2024-07-17 19:14:34,743:INFO:               tbats: 1.1.3
2024-07-17 19:14:34,743:INFO:            pmdarima: 2.0.4
2024-07-17 19:14:34,743:INFO:              psutil: 5.9.0
2024-07-17 19:14:34,743:INFO:          markupsafe: 2.1.3
2024-07-17 19:14:34,743:INFO:             pickle5: Not installed
2024-07-17 19:14:34,743:INFO:         cloudpickle: 2.2.1
2024-07-17 19:14:34,743:INFO:         deprecation: 2.1.0
2024-07-17 19:14:34,743:INFO:              xxhash: 2.0.2
2024-07-17 19:14:34,743:INFO:           wurlitzer: Not installed
2024-07-17 19:14:34,743:INFO:PyCaret optional dependencies:
2024-07-17 19:14:34,762:INFO:                shap: 0.46.0
2024-07-17 19:14:34,762:INFO:           interpret: Not installed
2024-07-17 19:14:34,762:INFO:                umap: Not installed
2024-07-17 19:14:34,762:INFO:     ydata_profiling: 4.6.4
2024-07-17 19:14:34,762:INFO:  explainerdashboard: Not installed
2024-07-17 19:14:34,762:INFO:             autoviz: Not installed
2024-07-17 19:14:34,762:INFO:           fairlearn: Not installed
2024-07-17 19:14:34,763:INFO:          deepchecks: Not installed
2024-07-17 19:14:34,763:INFO:             xgboost: Not installed
2024-07-17 19:14:34,763:INFO:            catboost: 1.2.5
2024-07-17 19:14:34,763:INFO:              kmodes: Not installed
2024-07-17 19:14:34,763:INFO:             mlxtend: Not installed
2024-07-17 19:14:34,763:INFO:       statsforecast: Not installed
2024-07-17 19:14:34,763:INFO:        tune_sklearn: Not installed
2024-07-17 19:14:34,763:INFO:                 ray: Not installed
2024-07-17 19:14:34,763:INFO:            hyperopt: Not installed
2024-07-17 19:14:34,763:INFO:              optuna: Not installed
2024-07-17 19:14:34,763:INFO:               skopt: Not installed
2024-07-17 19:14:34,763:INFO:              mlflow: Not installed
2024-07-17 19:14:34,763:INFO:              gradio: Not installed
2024-07-17 19:14:34,763:INFO:             fastapi: Not installed
2024-07-17 19:14:34,763:INFO:             uvicorn: Not installed
2024-07-17 19:14:34,763:INFO:              m2cgen: Not installed
2024-07-17 19:14:34,763:INFO:           evidently: Not installed
2024-07-17 19:14:34,764:INFO:               fugue: Not installed
2024-07-17 19:14:34,764:INFO:           streamlit: Not installed
2024-07-17 19:14:34,764:INFO:             prophet: Not installed
2024-07-17 19:14:34,764:INFO:None
2024-07-17 19:14:34,764:INFO:Set up data.
2024-07-17 19:14:34,775:INFO:Set up folding strategy.
2024-07-17 19:14:34,775:INFO:Set up train/test split.
2024-07-17 19:14:34,792:INFO:Set up index.
2024-07-17 19:14:34,792:INFO:Assigning column types.
2024-07-17 19:14:34,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 19:14:34,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 19:14:34,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 19:14:34,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:34,886:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:34,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 19:14:34,940:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 19:14:34,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:34,968:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:34,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 19:14:35,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 19:14:35,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,048:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 19:14:35,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,126:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,126:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 19:14:35,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,203:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,281:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,283:INFO:Preparing preprocessing pipeline...
2024-07-17 19:14:35,285:INFO:Set up label encoding.
2024-07-17 19:14:35,285:INFO:Set up simple imputation.
2024-07-17 19:14:35,337:INFO:Finished creating preprocessing pipeline.
2024-07-17 19:14:35,342:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-07-17 19:14:35,342:INFO:Creating final display dataframe.
2024-07-17 19:14:35,513:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target  num_awards_given
2                   Target type            Binary
3                Target mapping   High: 0, Low: 1
4           Original data shape        (3798, 40)
5        Transformed data shape        (3798, 40)
6   Transformed train set shape        (2658, 40)
7    Transformed test set shape        (1140, 40)
8              Numeric features                39
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              b247
2024-07-17 19:14:35,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,599:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 19:14:35,678:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 19:14:35,679:INFO:setup() successfully completed in 2.02s...............
2024-07-17 19:14:35,680:INFO:Initializing compare_models()
2024-07-17 19:14:35,680:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-17 19:14:35,680:INFO:Checking exceptions
2024-07-17 19:14:35,688:INFO:Preparing display monitor
2024-07-17 19:14:35,715:INFO:Initializing Logistic Regression
2024-07-17 19:14:35,715:INFO:Total runtime is 0.0 minutes
2024-07-17 19:14:35,720:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:35,720:INFO:Initializing create_model()
2024-07-17 19:14:35,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:35,720:INFO:Checking exceptions
2024-07-17 19:14:35,721:INFO:Importing libraries
2024-07-17 19:14:35,721:INFO:Copying training dataset
2024-07-17 19:14:35,738:INFO:Defining folds
2024-07-17 19:14:35,738:INFO:Declaring metric variables
2024-07-17 19:14:35,744:INFO:Importing untrained model
2024-07-17 19:14:35,750:INFO:Logistic Regression Imported successfully
2024-07-17 19:14:35,759:INFO:Starting cross validation
2024-07-17 19:14:35,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:38,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,740:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,751:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,808:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:38,820:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 19:14:40,392:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,406:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,421:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,428:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,430:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,435:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,436:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,438:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,442:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,443:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,445:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,456:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,459:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,462:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,463:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,467:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,468:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,469:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,472:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,477:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,477:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,481:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,497:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,498:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,503:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,783:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 19:14:40,811:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,819:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:40,833:INFO:Calculating mean and std
2024-07-17 19:14:40,836:INFO:Creating metrics dataframe
2024-07-17 19:14:40,839:INFO:Uploading results into container
2024-07-17 19:14:40,840:INFO:Uploading model into container now
2024-07-17 19:14:40,840:INFO:_master_model_container: 1
2024-07-17 19:14:40,841:INFO:_display_container: 2
2024-07-17 19:14:40,841:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 19:14:40,841:INFO:create_model() successfully completed......................................
2024-07-17 19:14:40,927:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:40,928:INFO:Creating metrics dataframe
2024-07-17 19:14:40,936:INFO:Initializing K Neighbors Classifier
2024-07-17 19:14:40,936:INFO:Total runtime is 0.08701547781626383 minutes
2024-07-17 19:14:40,940:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:40,940:INFO:Initializing create_model()
2024-07-17 19:14:40,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:40,941:INFO:Checking exceptions
2024-07-17 19:14:40,941:INFO:Importing libraries
2024-07-17 19:14:40,941:INFO:Copying training dataset
2024-07-17 19:14:40,957:INFO:Defining folds
2024-07-17 19:14:40,957:INFO:Declaring metric variables
2024-07-17 19:14:40,960:INFO:Importing untrained model
2024-07-17 19:14:40,965:INFO:K Neighbors Classifier Imported successfully
2024-07-17 19:14:40,973:INFO:Starting cross validation
2024-07-17 19:14:40,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:41,449:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,456:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,463:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,465:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,465:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,466:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,473:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,473:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,473:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,477:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,480:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,481:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,486:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,487:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,489:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,493:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,497:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,499:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,508:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,513:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,702:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,706:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,707:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,712:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,722:INFO:Calculating mean and std
2024-07-17 19:14:41,725:INFO:Creating metrics dataframe
2024-07-17 19:14:41,729:INFO:Uploading results into container
2024-07-17 19:14:41,730:INFO:Uploading model into container now
2024-07-17 19:14:41,730:INFO:_master_model_container: 2
2024-07-17 19:14:41,731:INFO:_display_container: 2
2024-07-17 19:14:41,731:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-17 19:14:41,732:INFO:create_model() successfully completed......................................
2024-07-17 19:14:41,827:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:41,827:INFO:Creating metrics dataframe
2024-07-17 19:14:41,836:INFO:Initializing Naive Bayes
2024-07-17 19:14:41,836:INFO:Total runtime is 0.10200610955556233 minutes
2024-07-17 19:14:41,839:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:41,840:INFO:Initializing create_model()
2024-07-17 19:14:41,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:41,840:INFO:Checking exceptions
2024-07-17 19:14:41,840:INFO:Importing libraries
2024-07-17 19:14:41,840:INFO:Copying training dataset
2024-07-17 19:14:41,853:INFO:Defining folds
2024-07-17 19:14:41,854:INFO:Declaring metric variables
2024-07-17 19:14:41,857:INFO:Importing untrained model
2024-07-17 19:14:41,862:INFO:Naive Bayes Imported successfully
2024-07-17 19:14:41,870:INFO:Starting cross validation
2024-07-17 19:14:41,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:41,935:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,938:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,938:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,942:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,944:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,945:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,946:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,950:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,952:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,953:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,957:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,957:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,960:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,960:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,964:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,966:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,976:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:41,996:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,000:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,001:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,004:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,005:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,009:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,024:INFO:Calculating mean and std
2024-07-17 19:14:42,027:INFO:Creating metrics dataframe
2024-07-17 19:14:42,031:INFO:Uploading results into container
2024-07-17 19:14:42,032:INFO:Uploading model into container now
2024-07-17 19:14:42,033:INFO:_master_model_container: 3
2024-07-17 19:14:42,033:INFO:_display_container: 2
2024-07-17 19:14:42,034:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-17 19:14:42,034:INFO:create_model() successfully completed......................................
2024-07-17 19:14:42,127:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:42,127:INFO:Creating metrics dataframe
2024-07-17 19:14:42,136:INFO:Initializing Decision Tree Classifier
2024-07-17 19:14:42,136:INFO:Total runtime is 0.10701054732004801 minutes
2024-07-17 19:14:42,139:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:42,139:INFO:Initializing create_model()
2024-07-17 19:14:42,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:42,140:INFO:Checking exceptions
2024-07-17 19:14:42,140:INFO:Importing libraries
2024-07-17 19:14:42,140:INFO:Copying training dataset
2024-07-17 19:14:42,154:INFO:Defining folds
2024-07-17 19:14:42,154:INFO:Declaring metric variables
2024-07-17 19:14:42,159:INFO:Importing untrained model
2024-07-17 19:14:42,163:INFO:Decision Tree Classifier Imported successfully
2024-07-17 19:14:42,171:INFO:Starting cross validation
2024-07-17 19:14:42,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:42,293:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,295:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,296:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,300:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,303:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,303:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,307:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,307:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,310:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,310:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,311:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,314:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,314:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,315:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,317:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,329:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,329:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,334:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,339:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,343:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,397:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,398:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,401:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,401:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,414:INFO:Calculating mean and std
2024-07-17 19:14:42,415:INFO:Creating metrics dataframe
2024-07-17 19:14:42,417:INFO:Uploading results into container
2024-07-17 19:14:42,418:INFO:Uploading model into container now
2024-07-17 19:14:42,418:INFO:_master_model_container: 4
2024-07-17 19:14:42,418:INFO:_display_container: 2
2024-07-17 19:14:42,418:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-07-17 19:14:42,419:INFO:create_model() successfully completed......................................
2024-07-17 19:14:42,508:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:42,509:INFO:Creating metrics dataframe
2024-07-17 19:14:42,520:INFO:Initializing SVM - Linear Kernel
2024-07-17 19:14:42,521:INFO:Total runtime is 0.11340120633443196 minutes
2024-07-17 19:14:42,524:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:42,525:INFO:Initializing create_model()
2024-07-17 19:14:42,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:42,525:INFO:Checking exceptions
2024-07-17 19:14:42,525:INFO:Importing libraries
2024-07-17 19:14:42,525:INFO:Copying training dataset
2024-07-17 19:14:42,541:INFO:Defining folds
2024-07-17 19:14:42,541:INFO:Declaring metric variables
2024-07-17 19:14:42,544:INFO:Importing untrained model
2024-07-17 19:14:42,549:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 19:14:42,558:INFO:Starting cross validation
2024-07-17 19:14:42,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:42,656:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,663:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,665:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,670:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,679:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,688:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,693:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,694:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,696:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,701:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,702:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,708:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,711:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,712:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,712:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,718:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,774:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,778:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,786:INFO:Calculating mean and std
2024-07-17 19:14:42,787:INFO:Creating metrics dataframe
2024-07-17 19:14:42,789:INFO:Uploading results into container
2024-07-17 19:14:42,789:INFO:Uploading model into container now
2024-07-17 19:14:42,790:INFO:_master_model_container: 5
2024-07-17 19:14:42,790:INFO:_display_container: 2
2024-07-17 19:14:42,791:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-17 19:14:42,791:INFO:create_model() successfully completed......................................
2024-07-17 19:14:42,878:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:42,878:INFO:Creating metrics dataframe
2024-07-17 19:14:42,887:INFO:Initializing Ridge Classifier
2024-07-17 19:14:42,887:INFO:Total runtime is 0.11952048142751057 minutes
2024-07-17 19:14:42,891:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:42,891:INFO:Initializing create_model()
2024-07-17 19:14:42,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:42,891:INFO:Checking exceptions
2024-07-17 19:14:42,891:INFO:Importing libraries
2024-07-17 19:14:42,892:INFO:Copying training dataset
2024-07-17 19:14:42,905:INFO:Defining folds
2024-07-17 19:14:42,905:INFO:Declaring metric variables
2024-07-17 19:14:42,908:INFO:Importing untrained model
2024-07-17 19:14:42,913:INFO:Ridge Classifier Imported successfully
2024-07-17 19:14:42,920:INFO:Starting cross validation
2024-07-17 19:14:42,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:42,983:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,986:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,990:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,993:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,994:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,996:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:42,999:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,000:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,002:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,002:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,006:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,007:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,009:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,009:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,017:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,017:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,022:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,024:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,049:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,053:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,054:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,058:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,058:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,063:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:43,078:INFO:Calculating mean and std
2024-07-17 19:14:43,081:INFO:Creating metrics dataframe
2024-07-17 19:14:43,084:INFO:Uploading results into container
2024-07-17 19:14:43,085:INFO:Uploading model into container now
2024-07-17 19:14:43,086:INFO:_master_model_container: 6
2024-07-17 19:14:43,086:INFO:_display_container: 2
2024-07-17 19:14:43,087:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-07-17 19:14:43,087:INFO:create_model() successfully completed......................................
2024-07-17 19:14:43,174:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:43,174:INFO:Creating metrics dataframe
2024-07-17 19:14:43,184:INFO:Initializing Random Forest Classifier
2024-07-17 19:14:43,184:INFO:Total runtime is 0.1244762063026428 minutes
2024-07-17 19:14:43,187:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:43,188:INFO:Initializing create_model()
2024-07-17 19:14:43,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:43,188:INFO:Checking exceptions
2024-07-17 19:14:43,188:INFO:Importing libraries
2024-07-17 19:14:43,188:INFO:Copying training dataset
2024-07-17 19:14:43,202:INFO:Defining folds
2024-07-17 19:14:43,202:INFO:Declaring metric variables
2024-07-17 19:14:43,205:INFO:Importing untrained model
2024-07-17 19:14:43,209:INFO:Random Forest Classifier Imported successfully
2024-07-17 19:14:43,216:INFO:Starting cross validation
2024-07-17 19:14:43,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:44,482:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,486:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,494:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,495:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,500:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,503:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,510:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,533:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,539:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,541:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,547:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,549:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,556:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,559:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,559:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,566:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,566:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,585:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,589:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,959:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,960:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,963:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,964:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:44,975:INFO:Calculating mean and std
2024-07-17 19:14:44,976:INFO:Creating metrics dataframe
2024-07-17 19:14:44,978:INFO:Uploading results into container
2024-07-17 19:14:44,979:INFO:Uploading model into container now
2024-07-17 19:14:44,979:INFO:_master_model_container: 7
2024-07-17 19:14:44,979:INFO:_display_container: 2
2024-07-17 19:14:44,980:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-07-17 19:14:44,980:INFO:create_model() successfully completed......................................
2024-07-17 19:14:45,065:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:45,065:INFO:Creating metrics dataframe
2024-07-17 19:14:45,074:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 19:14:45,074:INFO:Total runtime is 0.15598351558049517 minutes
2024-07-17 19:14:45,078:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:45,078:INFO:Initializing create_model()
2024-07-17 19:14:45,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:45,078:INFO:Checking exceptions
2024-07-17 19:14:45,079:INFO:Importing libraries
2024-07-17 19:14:45,079:INFO:Copying training dataset
2024-07-17 19:14:45,091:INFO:Defining folds
2024-07-17 19:14:45,091:INFO:Declaring metric variables
2024-07-17 19:14:45,096:INFO:Importing untrained model
2024-07-17 19:14:45,100:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 19:14:45,107:INFO:Starting cross validation
2024-07-17 19:14:45,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:45,154:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,159:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,169:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,175:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,180:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,180:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,181:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,183:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,187:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,188:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,190:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,191:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,192:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,194:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,195:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,197:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,203:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,204:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,215:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,218:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,223:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,228:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,242:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 19:14:45,254:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,260:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,264:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,276:INFO:Calculating mean and std
2024-07-17 19:14:45,277:INFO:Creating metrics dataframe
2024-07-17 19:14:45,279:INFO:Uploading results into container
2024-07-17 19:14:45,280:INFO:Uploading model into container now
2024-07-17 19:14:45,280:INFO:_master_model_container: 8
2024-07-17 19:14:45,280:INFO:_display_container: 2
2024-07-17 19:14:45,281:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-17 19:14:45,281:INFO:create_model() successfully completed......................................
2024-07-17 19:14:45,365:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:45,365:INFO:Creating metrics dataframe
2024-07-17 19:14:45,379:INFO:Initializing Ada Boost Classifier
2024-07-17 19:14:45,379:INFO:Total runtime is 0.1610667546590169 minutes
2024-07-17 19:14:45,383:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:45,383:INFO:Initializing create_model()
2024-07-17 19:14:45,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:45,383:INFO:Checking exceptions
2024-07-17 19:14:45,383:INFO:Importing libraries
2024-07-17 19:14:45,384:INFO:Copying training dataset
2024-07-17 19:14:45,397:INFO:Defining folds
2024-07-17 19:14:45,398:INFO:Declaring metric variables
2024-07-17 19:14:45,402:INFO:Importing untrained model
2024-07-17 19:14:45,406:INFO:Ada Boost Classifier Imported successfully
2024-07-17 19:14:45,413:INFO:Starting cross validation
2024-07-17 19:14:45,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:45,451:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,453:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,456:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,458:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,474:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,486:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:45,989:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,991:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,997:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:45,999:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,004:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,006:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,010:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,013:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,021:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,025:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,041:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:46,049:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 19:14:46,050:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,057:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,382:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,386:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,386:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,389:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,393:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:46,401:INFO:Calculating mean and std
2024-07-17 19:14:46,402:INFO:Creating metrics dataframe
2024-07-17 19:14:46,404:INFO:Uploading results into container
2024-07-17 19:14:46,405:INFO:Uploading model into container now
2024-07-17 19:14:46,406:INFO:_master_model_container: 9
2024-07-17 19:14:46,406:INFO:_display_container: 2
2024-07-17 19:14:46,407:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-07-17 19:14:46,407:INFO:create_model() successfully completed......................................
2024-07-17 19:14:46,498:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:46,498:INFO:Creating metrics dataframe
2024-07-17 19:14:46,509:INFO:Initializing Gradient Boosting Classifier
2024-07-17 19:14:46,509:INFO:Total runtime is 0.17988903522491453 minutes
2024-07-17 19:14:46,513:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:46,513:INFO:Initializing create_model()
2024-07-17 19:14:46,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:46,514:INFO:Checking exceptions
2024-07-17 19:14:46,514:INFO:Importing libraries
2024-07-17 19:14:46,514:INFO:Copying training dataset
2024-07-17 19:14:46,527:INFO:Defining folds
2024-07-17 19:14:46,528:INFO:Declaring metric variables
2024-07-17 19:14:46,531:INFO:Importing untrained model
2024-07-17 19:14:46,535:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 19:14:46,542:INFO:Starting cross validation
2024-07-17 19:14:46,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:49,780:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,805:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,817:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,829:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,836:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,849:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,850:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,852:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,858:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,860:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,862:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,865:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,874:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,878:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,889:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,892:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:49,905:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,556:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,558:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,569:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:52,617:INFO:Calculating mean and std
2024-07-17 19:14:52,621:INFO:Creating metrics dataframe
2024-07-17 19:14:52,626:INFO:Uploading results into container
2024-07-17 19:14:52,627:INFO:Uploading model into container now
2024-07-17 19:14:52,628:INFO:_master_model_container: 10
2024-07-17 19:14:52,628:INFO:_display_container: 2
2024-07-17 19:14:52,629:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-17 19:14:52,630:INFO:create_model() successfully completed......................................
2024-07-17 19:14:52,805:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:52,806:INFO:Creating metrics dataframe
2024-07-17 19:14:52,836:INFO:Initializing Linear Discriminant Analysis
2024-07-17 19:14:52,837:INFO:Total runtime is 0.28533955017725626 minutes
2024-07-17 19:14:52,847:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:52,848:INFO:Initializing create_model()
2024-07-17 19:14:52,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:52,849:INFO:Checking exceptions
2024-07-17 19:14:52,849:INFO:Importing libraries
2024-07-17 19:14:52,849:INFO:Copying training dataset
2024-07-17 19:14:52,887:INFO:Defining folds
2024-07-17 19:14:52,888:INFO:Declaring metric variables
2024-07-17 19:14:52,898:INFO:Importing untrained model
2024-07-17 19:14:52,909:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 19:14:52,929:INFO:Starting cross validation
2024-07-17 19:14:52,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:53,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,228:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,246:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,249:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,260:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,267:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,267:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,269:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,280:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,283:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,287:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,288:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,291:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,293:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,297:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,300:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,308:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,311:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,447:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,458:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,461:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,473:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:53,512:INFO:Calculating mean and std
2024-07-17 19:14:53,516:INFO:Creating metrics dataframe
2024-07-17 19:14:53,520:INFO:Uploading results into container
2024-07-17 19:14:53,522:INFO:Uploading model into container now
2024-07-17 19:14:53,523:INFO:_master_model_container: 11
2024-07-17 19:14:53,523:INFO:_display_container: 2
2024-07-17 19:14:53,524:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-17 19:14:53,524:INFO:create_model() successfully completed......................................
2024-07-17 19:14:53,698:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:53,698:INFO:Creating metrics dataframe
2024-07-17 19:14:53,728:INFO:Initializing Extra Trees Classifier
2024-07-17 19:14:53,729:INFO:Total runtime is 0.30022128820419314 minutes
2024-07-17 19:14:53,738:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:53,739:INFO:Initializing create_model()
2024-07-17 19:14:53,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:53,740:INFO:Checking exceptions
2024-07-17 19:14:53,740:INFO:Importing libraries
2024-07-17 19:14:53,740:INFO:Copying training dataset
2024-07-17 19:14:53,779:INFO:Defining folds
2024-07-17 19:14:53,780:INFO:Declaring metric variables
2024-07-17 19:14:53,790:INFO:Importing untrained model
2024-07-17 19:14:53,800:INFO:Extra Trees Classifier Imported successfully
2024-07-17 19:14:53,818:INFO:Starting cross validation
2024-07-17 19:14:53,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:56,099:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,176:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,207:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,213:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,231:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,238:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,265:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,283:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,286:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,292:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,302:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,311:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,311:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,325:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,333:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,343:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,351:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,376:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,399:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,903:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,909:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,928:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,934:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,940:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:56,952:INFO:Calculating mean and std
2024-07-17 19:14:56,954:INFO:Creating metrics dataframe
2024-07-17 19:14:56,957:INFO:Uploading results into container
2024-07-17 19:14:56,957:INFO:Uploading model into container now
2024-07-17 19:14:56,958:INFO:_master_model_container: 12
2024-07-17 19:14:56,958:INFO:_display_container: 2
2024-07-17 19:14:56,958:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-07-17 19:14:56,959:INFO:create_model() successfully completed......................................
2024-07-17 19:14:57,066:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:57,066:INFO:Creating metrics dataframe
2024-07-17 19:14:57,081:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 19:14:57,082:INFO:Total runtime is 0.3561148524284363 minutes
2024-07-17 19:14:57,087:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:57,087:INFO:Initializing create_model()
2024-07-17 19:14:57,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:57,088:INFO:Checking exceptions
2024-07-17 19:14:57,088:INFO:Importing libraries
2024-07-17 19:14:57,088:INFO:Copying training dataset
2024-07-17 19:14:57,108:INFO:Defining folds
2024-07-17 19:14:57,108:INFO:Declaring metric variables
2024-07-17 19:14:57,113:INFO:Importing untrained model
2024-07-17 19:14:57,119:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 19:14:57,129:INFO:Starting cross validation
2024-07-17 19:14:57,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:14:58,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,764:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,772:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,783:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,794:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,853:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,863:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,873:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,890:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,911:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,916:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,928:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,928:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,940:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,940:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:58,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,378:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,382:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,389:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,393:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,402:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:14:59,433:INFO:Calculating mean and std
2024-07-17 19:14:59,436:INFO:Creating metrics dataframe
2024-07-17 19:14:59,442:INFO:Uploading results into container
2024-07-17 19:14:59,443:INFO:Uploading model into container now
2024-07-17 19:14:59,444:INFO:_master_model_container: 13
2024-07-17 19:14:59,444:INFO:_display_container: 2
2024-07-17 19:14:59,446:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-17 19:14:59,446:INFO:create_model() successfully completed......................................
2024-07-17 19:14:59,565:INFO:SubProcess create_model() end ==================================
2024-07-17 19:14:59,566:INFO:Creating metrics dataframe
2024-07-17 19:14:59,582:INFO:Initializing CatBoost Classifier
2024-07-17 19:14:59,582:INFO:Total runtime is 0.3977781534194947 minutes
2024-07-17 19:14:59,587:INFO:SubProcess create_model() called ==================================
2024-07-17 19:14:59,588:INFO:Initializing create_model()
2024-07-17 19:14:59,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:14:59,588:INFO:Checking exceptions
2024-07-17 19:14:59,589:INFO:Importing libraries
2024-07-17 19:14:59,589:INFO:Copying training dataset
2024-07-17 19:14:59,608:INFO:Defining folds
2024-07-17 19:14:59,608:INFO:Declaring metric variables
2024-07-17 19:14:59,613:INFO:Importing untrained model
2024-07-17 19:14:59,618:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:14:59,628:INFO:Starting cross validation
2024-07-17 19:14:59,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:15:18,122:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:18,132:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:18,144:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:19,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:19,866:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:19,870:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,316:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,320:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,323:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,446:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,450:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,453:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,817:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,824:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,829:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,977:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,978:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,988:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:20,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:21,002:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:25,567:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:25,574:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:25,581:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,045:INFO:Calculating mean and std
2024-07-17 19:15:26,048:INFO:Creating metrics dataframe
2024-07-17 19:15:26,053:INFO:Uploading results into container
2024-07-17 19:15:26,054:INFO:Uploading model into container now
2024-07-17 19:15:26,054:INFO:_master_model_container: 14
2024-07-17 19:15:26,055:INFO:_display_container: 2
2024-07-17 19:15:26,055:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A1CED10>
2024-07-17 19:15:26,055:INFO:create_model() successfully completed......................................
2024-07-17 19:15:26,153:INFO:SubProcess create_model() end ==================================
2024-07-17 19:15:26,153:INFO:Creating metrics dataframe
2024-07-17 19:15:26,166:INFO:Initializing Dummy Classifier
2024-07-17 19:15:26,166:INFO:Total runtime is 0.8408390998840333 minutes
2024-07-17 19:15:26,169:INFO:SubProcess create_model() called ==================================
2024-07-17 19:15:26,170:INFO:Initializing create_model()
2024-07-17 19:15:26,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8A135650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:15:26,170:INFO:Checking exceptions
2024-07-17 19:15:26,170:INFO:Importing libraries
2024-07-17 19:15:26,170:INFO:Copying training dataset
2024-07-17 19:15:26,184:INFO:Defining folds
2024-07-17 19:15:26,185:INFO:Declaring metric variables
2024-07-17 19:15:26,188:INFO:Importing untrained model
2024-07-17 19:15:26,193:INFO:Dummy Classifier Imported successfully
2024-07-17 19:15:26,200:INFO:Starting cross validation
2024-07-17 19:15:26,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:15:26,254:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,261:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,262:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,263:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,264:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,266:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,269:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,269:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,269:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,271:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,280:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,281:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,283:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,285:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,287:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,287:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,289:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,291:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,294:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,294:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,299:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,302:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,304:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,310:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,312:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,314:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,316:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,316:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,318:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,318:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 19:15:26,320:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:26,328:INFO:Calculating mean and std
2024-07-17 19:15:26,329:INFO:Creating metrics dataframe
2024-07-17 19:15:26,332:INFO:Uploading results into container
2024-07-17 19:15:26,333:INFO:Uploading model into container now
2024-07-17 19:15:26,334:INFO:_master_model_container: 15
2024-07-17 19:15:26,334:INFO:_display_container: 2
2024-07-17 19:15:26,334:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-07-17 19:15:26,334:INFO:create_model() successfully completed......................................
2024-07-17 19:15:26,421:INFO:SubProcess create_model() end ==================================
2024-07-17 19:15:26,421:INFO:Creating metrics dataframe
2024-07-17 19:15:26,440:INFO:Initializing create_model()
2024-07-17 19:15:26,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A1CED10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:15:26,440:INFO:Checking exceptions
2024-07-17 19:15:26,442:INFO:Importing libraries
2024-07-17 19:15:26,442:INFO:Copying training dataset
2024-07-17 19:15:26,456:INFO:Defining folds
2024-07-17 19:15:26,456:INFO:Declaring metric variables
2024-07-17 19:15:26,456:INFO:Importing untrained model
2024-07-17 19:15:26,456:INFO:Declaring custom model
2024-07-17 19:15:26,456:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:15:26,457:INFO:Cross validation set to False
2024-07-17 19:15:26,457:INFO:Fitting Model
2024-07-17 19:15:31,361:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>
2024-07-17 19:15:31,361:INFO:create_model() successfully completed......................................
2024-07-17 19:15:31,478:INFO:_master_model_container: 15
2024-07-17 19:15:31,479:INFO:_display_container: 2
2024-07-17 19:15:31,479:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>
2024-07-17 19:15:31,479:INFO:compare_models() successfully completed......................................
2024-07-17 19:15:31,480:INFO:Initializing evaluate_model()
2024-07-17 19:15:31,480:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-07-17 19:15:31,497:INFO:Initializing plot_model()
2024-07-17 19:15:31,498:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-07-17 19:15:31,498:INFO:Checking exceptions
2024-07-17 19:15:31,503:INFO:Preloading libraries
2024-07-17 19:15:31,507:INFO:Copying training dataset
2024-07-17 19:15:31,507:INFO:Plot type: pipeline
2024-07-17 19:15:31,743:INFO:Visual Rendered Successfully
2024-07-17 19:15:31,829:INFO:plot_model() successfully completed......................................
2024-07-17 19:15:31,832:INFO:Initializing predict_model()
2024-07-17 19:15:31,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DA8807C220>)
2024-07-17 19:15:31,832:INFO:Checking exceptions
2024-07-17 19:15:31,832:INFO:Preloading libraries
2024-07-17 19:15:31,935:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:31,943:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:31,951:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:32,057:INFO:Initializing predict_model()
2024-07-17 19:15:32,057:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001DA89E894E0>)
2024-07-17 19:15:32,057:INFO:Checking exceptions
2024-07-17 19:15:32,057:INFO:Preloading libraries
2024-07-17 19:15:32,060:INFO:Set up data.
2024-07-17 19:15:32,070:INFO:Set up index.
2024-07-17 19:15:32,208:INFO:Initializing plot_model()
2024-07-17 19:15:32,209:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 19:15:32,209:INFO:Checking exceptions
2024-07-17 19:15:32,219:INFO:Preloading libraries
2024-07-17 19:15:32,223:INFO:Copying training dataset
2024-07-17 19:15:32,223:INFO:Plot type: confusion_matrix
2024-07-17 19:15:32,416:INFO:Fitting Model
2024-07-17 19:15:32,417:INFO:Scoring test/hold-out set
2024-07-17 19:15:32,575:INFO:Visual Rendered Successfully
2024-07-17 19:15:32,660:INFO:plot_model() successfully completed......................................
2024-07-17 19:15:32,666:INFO:Initializing plot_model()
2024-07-17 19:15:32,666:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 19:15:32,666:INFO:Checking exceptions
2024-07-17 19:15:32,675:INFO:Preloading libraries
2024-07-17 19:15:32,678:INFO:Copying training dataset
2024-07-17 19:15:32,678:INFO:Plot type: auc
2024-07-17 19:15:32,906:INFO:Fitting Model
2024-07-17 19:15:32,907:INFO:Scoring test/hold-out set
2024-07-17 19:15:33,309:INFO:Visual Rendered Successfully
2024-07-17 19:15:33,412:INFO:plot_model() successfully completed......................................
2024-07-17 19:15:33,420:INFO:Initializing plot_model()
2024-07-17 19:15:33,420:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 19:15:33,420:INFO:Checking exceptions
2024-07-17 19:15:33,430:INFO:Preloading libraries
2024-07-17 19:15:33,435:INFO:Copying training dataset
2024-07-17 19:15:33,436:INFO:Plot type: feature
2024-07-17 19:15:33,436:WARNING:No coef_ found. Trying feature_importances_
2024-07-17 19:15:33,865:INFO:Visual Rendered Successfully
2024-07-17 19:15:33,974:INFO:plot_model() successfully completed......................................
2024-07-17 19:15:33,983:INFO:Initializing create_model()
2024-07-17 19:15:33,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:15:33,983:INFO:Checking exceptions
2024-07-17 19:15:34,005:INFO:Importing libraries
2024-07-17 19:15:34,005:INFO:Copying training dataset
2024-07-17 19:15:34,025:INFO:Defining folds
2024-07-17 19:15:34,025:INFO:Declaring metric variables
2024-07-17 19:15:34,033:INFO:Importing untrained model
2024-07-17 19:15:34,038:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:15:34,048:INFO:Starting cross validation
2024-07-17 19:15:34,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:15:51,942:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:51,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:51,956:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,596:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,603:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,639:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,644:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,824:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:52,831:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,054:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,060:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,061:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,062:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,071:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,075:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,076:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:53,078:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,009:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,016:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,024:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,213:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,217:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:15:58,233:INFO:Calculating mean and std
2024-07-17 19:15:58,236:INFO:Creating metrics dataframe
2024-07-17 19:15:58,250:INFO:Finalizing model
2024-07-17 19:16:08,621:INFO:Uploading results into container
2024-07-17 19:16:08,623:INFO:Uploading model into container now
2024-07-17 19:16:08,655:INFO:_master_model_container: 16
2024-07-17 19:16:08,655:INFO:_display_container: 4
2024-07-17 19:16:08,656:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>
2024-07-17 19:16:08,656:INFO:create_model() successfully completed......................................
2024-07-17 19:16:08,851:INFO:Initializing tune_model()
2024-07-17 19:16:08,852:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 19:16:08,852:INFO:Checking exceptions
2024-07-17 19:16:08,876:INFO:Copying training dataset
2024-07-17 19:16:08,891:INFO:Checking base model
2024-07-17 19:16:08,891:INFO:Base model : CatBoost Classifier
2024-07-17 19:16:08,895:INFO:Declaring metric variables
2024-07-17 19:16:08,899:INFO:Defining Hyperparameters
2024-07-17 19:16:08,987:INFO:Tuning with n_jobs=-1
2024-07-17 19:16:08,987:INFO:Initializing RandomizedSearchCV
2024-07-17 19:16:41,442:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 50, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 3}
2024-07-17 19:16:41,444:INFO:Hyperparameter search completed
2024-07-17 19:16:41,444:INFO:SubProcess create_model() called ==================================
2024-07-17 19:16:41,445:INFO:Initializing create_model()
2024-07-17 19:16:41,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A10F150>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8596AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 50, 'eta': 0.15, 'depth': 3})
2024-07-17 19:16:41,445:INFO:Checking exceptions
2024-07-17 19:16:41,445:INFO:Importing libraries
2024-07-17 19:16:41,446:INFO:Copying training dataset
2024-07-17 19:16:41,464:INFO:Defining folds
2024-07-17 19:16:41,464:INFO:Declaring metric variables
2024-07-17 19:16:41,468:INFO:Importing untrained model
2024-07-17 19:16:41,468:INFO:Declaring custom model
2024-07-17 19:16:41,472:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:16:41,479:INFO:Starting cross validation
2024-07-17 19:16:41,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:16:43,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,848:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,852:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,856:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,958:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,965:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,969:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,977:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,983:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:43,985:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,012:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,019:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,026:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,041:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,054:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,807:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,856:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,860:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,864:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:16:44,878:INFO:Calculating mean and std
2024-07-17 19:16:44,879:INFO:Creating metrics dataframe
2024-07-17 19:16:44,884:INFO:Finalizing model
2024-07-17 19:16:45,848:INFO:Uploading results into container
2024-07-17 19:16:45,850:INFO:Uploading model into container now
2024-07-17 19:16:45,851:INFO:_master_model_container: 17
2024-07-17 19:16:45,852:INFO:_display_container: 5
2024-07-17 19:16:45,853:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA83547390>
2024-07-17 19:16:45,853:INFO:create_model() successfully completed......................................
2024-07-17 19:16:45,966:INFO:SubProcess create_model() end ==================================
2024-07-17 19:16:45,966:INFO:choose_better activated
2024-07-17 19:16:45,970:INFO:SubProcess create_model() called ==================================
2024-07-17 19:16:45,970:INFO:Initializing create_model()
2024-07-17 19:16:45,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:16:45,970:INFO:Checking exceptions
2024-07-17 19:16:45,972:INFO:Importing libraries
2024-07-17 19:16:45,972:INFO:Copying training dataset
2024-07-17 19:16:45,986:INFO:Defining folds
2024-07-17 19:16:45,986:INFO:Declaring metric variables
2024-07-17 19:16:45,986:INFO:Importing untrained model
2024-07-17 19:16:45,987:INFO:Declaring custom model
2024-07-17 19:16:45,987:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:16:45,987:INFO:Starting cross validation
2024-07-17 19:16:45,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:17:05,432:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:05,439:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:05,446:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,751:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,755:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:06,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,015:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,019:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,184:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,191:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,197:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,204:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,218:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,240:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,247:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,307:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,313:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:07,322:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:11,823:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:11,830:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:11,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:12,380:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:12,383:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:12,387:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:12,400:INFO:Calculating mean and std
2024-07-17 19:17:12,401:INFO:Creating metrics dataframe
2024-07-17 19:17:12,402:INFO:Finalizing model
2024-07-17 19:17:17,350:INFO:Uploading results into container
2024-07-17 19:17:17,351:INFO:Uploading model into container now
2024-07-17 19:17:17,352:INFO:_master_model_container: 18
2024-07-17 19:17:17,352:INFO:_display_container: 6
2024-07-17 19:17:17,352:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A548CD0>
2024-07-17 19:17:17,353:INFO:create_model() successfully completed......................................
2024-07-17 19:17:17,481:INFO:SubProcess create_model() end ==================================
2024-07-17 19:17:17,481:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A548CD0> result for Accuracy is 0.7874
2024-07-17 19:17:17,482:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA83547390> result for Accuracy is 0.7791
2024-07-17 19:17:17,482:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A548CD0> is best model
2024-07-17 19:17:17,482:INFO:choose_better completed
2024-07-17 19:17:17,482:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 19:17:17,501:INFO:_master_model_container: 18
2024-07-17 19:17:17,502:INFO:_display_container: 5
2024-07-17 19:17:17,502:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A548CD0>
2024-07-17 19:17:17,502:INFO:tune_model() successfully completed......................................
2024-07-17 19:17:17,800:INFO:Initializing tune_model()
2024-07-17 19:17:17,800:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, fold=None, round=4, n_iter=10, custom_grid={'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA87D6C510>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DAFB264B50>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA8A56CC90>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DA8A56DED0>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA8A270690>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DA8A41FED0>}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-07-17 19:17:17,800:INFO:Checking exceptions
2024-07-17 19:17:17,841:INFO:Copying training dataset
2024-07-17 19:17:17,857:INFO:Checking base model
2024-07-17 19:17:17,857:INFO:Base model : CatBoost Classifier
2024-07-17 19:17:17,864:INFO:Declaring metric variables
2024-07-17 19:17:17,871:INFO:Defining Hyperparameters
2024-07-17 19:17:17,998:INFO:custom_grid: {'actual_estimator__iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA87D6C510>, 'actual_estimator__learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DAFB264B50>, 'actual_estimator__depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA8A56CC90>, 'actual_estimator__l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DA8A56DED0>, 'actual_estimator__border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x000001DA8A270690>, 'actual_estimator__scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x000001DA8A41FED0>}
2024-07-17 19:17:17,999:INFO:Tuning with n_jobs=-1
2024-07-17 19:17:17,999:INFO:Initializing RandomizedSearchCV
2024-07-17 19:17:23,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,426:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,445:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,623:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,631:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,674:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,774:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:23,786:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,745:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,783:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,832:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:28,842:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:31,577:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:31,669:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:31,671:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:31,675:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:33,793:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:33,822:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:33,862:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:33,868:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:35,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:36,006:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:36,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:36,465:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:36,880:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:36,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:37,503:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:37,990:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:38,021:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:38,080:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:38,628:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:39,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:39,239:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:39,270:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:39,648:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:40,646:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:40,666:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:40,727:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:41,106:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:42,581:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:42,583:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:42,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:44,054:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:17:44,236:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:39,632:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:39,736:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:40,679:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:40,798:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:42,408:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:43,049:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:43,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:18:44,012:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:01,013:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:01,505:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:04,118:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:04,799:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:05,334:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:05,994:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:14,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:14,959:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:16,100:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:16,230:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:18,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:18,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:20,970:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:23,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:29,842:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:29,932:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:32,351:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:32,364:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:35,296:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:35,463:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:36,051:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:19:37,235:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:06,281:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:07,224:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:11,344:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:15,342:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:18,520:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:18,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:19,334:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:20,580:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:22,110:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:22,564:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:25,260:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:25,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:26,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:27,246:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:28,347:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:28,739:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:30,806:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:30,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:33,651:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:33,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:33,808:INFO:best_params: {'actual_estimator__border_count': 246, 'actual_estimator__depth': 5, 'actual_estimator__iterations': 196, 'actual_estimator__l2_leaf_reg': 6.796942970226101, 'actual_estimator__learning_rate': 0.05198522878911536, 'actual_estimator__scale_pos_weight': 1.302035113322407}
2024-07-17 19:20:33,811:INFO:Hyperparameter search completed
2024-07-17 19:20:33,812:INFO:SubProcess create_model() called ==================================
2024-07-17 19:20:33,813:INFO:Initializing create_model()
2024-07-17 19:20:33,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A10FC50>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA86B40B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'border_count': 246, 'depth': 5, 'iterations': 196, 'l2_leaf_reg': 6.796942970226101, 'learning_rate': 0.05198522878911536, 'scale_pos_weight': 1.302035113322407})
2024-07-17 19:20:33,814:INFO:Checking exceptions
2024-07-17 19:20:33,814:INFO:Importing libraries
2024-07-17 19:20:33,814:INFO:Copying training dataset
2024-07-17 19:20:33,852:INFO:Defining folds
2024-07-17 19:20:33,852:INFO:Declaring metric variables
2024-07-17 19:20:33,859:INFO:Importing untrained model
2024-07-17 19:20:33,860:INFO:Declaring custom model
2024-07-17 19:20:33,872:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:20:33,891:INFO:Starting cross validation
2024-07-17 19:20:33,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:20:40,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,766:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,879:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,880:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,881:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,881:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,884:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,886:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,886:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,887:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,888:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,888:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,891:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,892:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,893:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,894:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,894:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,899:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,906:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:40,913:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,909:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,914:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,918:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,990:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,994:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:41,999:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:20:42,014:INFO:Calculating mean and std
2024-07-17 19:20:42,015:INFO:Creating metrics dataframe
2024-07-17 19:20:42,021:INFO:Finalizing model
2024-07-17 19:20:43,044:INFO:Uploading results into container
2024-07-17 19:20:43,046:INFO:Uploading model into container now
2024-07-17 19:20:43,049:INFO:_master_model_container: 19
2024-07-17 19:20:43,049:INFO:_display_container: 6
2024-07-17 19:20:43,049:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A13AD90>
2024-07-17 19:20:43,050:INFO:create_model() successfully completed......................................
2024-07-17 19:20:43,162:INFO:SubProcess create_model() end ==================================
2024-07-17 19:20:43,162:INFO:choose_better activated
2024-07-17 19:20:43,165:INFO:SubProcess create_model() called ==================================
2024-07-17 19:20:43,166:INFO:Initializing create_model()
2024-07-17 19:20:43,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 19:20:43,166:INFO:Checking exceptions
2024-07-17 19:20:43,167:INFO:Importing libraries
2024-07-17 19:20:43,167:INFO:Copying training dataset
2024-07-17 19:20:43,180:INFO:Defining folds
2024-07-17 19:20:43,180:INFO:Declaring metric variables
2024-07-17 19:20:43,180:INFO:Importing untrained model
2024-07-17 19:20:43,180:INFO:Declaring custom model
2024-07-17 19:20:43,180:INFO:CatBoost Classifier Imported successfully
2024-07-17 19:20:43,180:INFO:Starting cross validation
2024-07-17 19:20:43,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 19:21:05,348:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,352:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,353:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,356:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,357:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,361:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,364:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,368:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,371:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,374:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,378:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,381:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,463:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,464:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,469:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,471:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,472:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,475:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,475:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,477:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,484:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:05,485:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,748:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 19:21:10,769:INFO:Calculating mean and std
2024-07-17 19:21:10,770:INFO:Creating metrics dataframe
2024-07-17 19:21:10,772:INFO:Finalizing model
2024-07-17 19:21:15,607:INFO:Uploading results into container
2024-07-17 19:21:15,608:INFO:Uploading model into container now
2024-07-17 19:21:15,608:INFO:_master_model_container: 20
2024-07-17 19:21:15,608:INFO:_display_container: 7
2024-07-17 19:21:15,608:INFO:<catboost.core.CatBoostClassifier object at 0x000001DAFB264110>
2024-07-17 19:21:15,609:INFO:create_model() successfully completed......................................
2024-07-17 19:21:15,697:INFO:SubProcess create_model() end ==================================
2024-07-17 19:21:15,698:INFO:<catboost.core.CatBoostClassifier object at 0x000001DAFB264110> result for F1 is 0.787
2024-07-17 19:21:15,698:INFO:<catboost.core.CatBoostClassifier object at 0x000001DA8A13AD90> result for F1 is 0.7849
2024-07-17 19:21:15,698:INFO:<catboost.core.CatBoostClassifier object at 0x000001DAFB264110> is best model
2024-07-17 19:21:15,698:INFO:choose_better completed
2024-07-17 19:21:15,698:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-07-17 19:21:15,711:INFO:_master_model_container: 20
2024-07-17 19:21:15,711:INFO:_display_container: 6
2024-07-17 19:21:15,711:INFO:<catboost.core.CatBoostClassifier object at 0x000001DAFB264110>
2024-07-17 19:21:15,711:INFO:tune_model() successfully completed......................................
2024-07-17 19:21:25,289:INFO:Initializing interpret_model()
2024-07-17 19:21:25,289:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 19:21:25,290:INFO:Checking exceptions
2024-07-17 19:21:25,290:INFO:Soft dependency imported: shap: 0.46.0
2024-07-17 19:21:25,358:INFO:plot type: summary
2024-07-17 19:21:25,359:INFO:Creating TreeExplainer
2024-07-17 19:21:25,859:INFO:Compiling shap values
2024-07-17 19:21:28,245:INFO:Visual Rendered Successfully
2024-07-17 19:21:28,245:INFO:interpret_model() successfully completed......................................
2024-07-17 19:21:28,350:INFO:Initializing interpret_model()
2024-07-17 19:21:28,350:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, plot=reason, feature=None, observation=1, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-07-17 19:21:28,350:INFO:Checking exceptions
2024-07-17 19:21:28,350:INFO:Soft dependency imported: shap: 0.46.0
2024-07-17 19:21:28,391:INFO:plot type: reason
2024-07-17 19:21:28,391:INFO:model type detected: type 2
2024-07-17 19:21:28,392:INFO:Creating TreeExplainer
2024-07-17 19:21:28,739:INFO:Compiling shap values
2024-07-17 19:21:29,688:INFO:Visual Rendered Successfully
2024-07-17 19:21:29,689:INFO:interpret_model() successfully completed......................................
2024-07-17 19:54:40,172:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\shap\plots\_force.py:208: UserWarning: shap.plots.force is slow for many thousands of rows, try subsampling your data.
  warnings.warn("shap.plots.force is slow for many thousands of rows, try subsampling your data.")

2024-07-17 20:03:49,043:INFO:Initializing plot_model()
2024-07-17 20:03:49,044:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 20:03:49,044:INFO:Checking exceptions
2024-07-17 20:03:49,054:INFO:Preloading libraries
2024-07-17 20:03:49,059:INFO:Copying training dataset
2024-07-17 20:03:49,059:INFO:Plot type: calibration
2024-07-17 20:03:49,075:INFO:Scoring test/hold-out set
2024-07-17 20:03:49,420:INFO:Visual Rendered Successfully
2024-07-17 20:03:49,548:INFO:plot_model() successfully completed......................................
2024-07-17 20:03:59,894:INFO:Initializing calibrate_model()
2024-07-17 20:03:59,895:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>, method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-07-17 20:03:59,895:INFO:Checking exceptions
2024-07-17 20:03:59,902:INFO:Preloading libraries
2024-07-17 20:03:59,902:INFO:Preparing display monitor
2024-07-17 20:03:59,923:INFO:Getting model name
2024-07-17 20:03:59,923:INFO:Base model : CatBoost Classifier
2024-07-17 20:03:59,932:INFO:Importing untrained CalibratedClassifierCV
2024-07-17 20:03:59,932:INFO:SubProcess create_model() called ==================================
2024-07-17 20:03:59,933:INFO:Initializing create_model()
2024-07-17 20:03:59,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8A4A0CD0>,
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA8BA8EED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 20:03:59,934:INFO:Checking exceptions
2024-07-17 20:03:59,934:INFO:Importing libraries
2024-07-17 20:03:59,934:INFO:Copying training dataset
2024-07-17 20:03:59,950:INFO:Defining folds
2024-07-17 20:03:59,950:INFO:Declaring metric variables
2024-07-17 20:03:59,954:INFO:Importing untrained model
2024-07-17 20:03:59,954:INFO:Declaring custom model
2024-07-17 20:03:59,959:INFO:CatBoost Classifier Imported successfully
2024-07-17 20:03:59,968:INFO:Starting cross validation
2024-07-17 20:03:59,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 20:04:06,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:04:06,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-07-17 20:05:45,711:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:45,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:45,726:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:48,796:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:48,803:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:48,811:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,424:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,431:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,439:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,621:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,625:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,629:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,633:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,637:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:49,641:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,398:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,402:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,414:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,419:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,427:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,436:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:05:50,445:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:26,483:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:26,514:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:26,543:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:27,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:27,445:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:27,460:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 20:06:27,496:INFO:Calculating mean and std
2024-07-17 20:06:27,498:INFO:Creating metrics dataframe
2024-07-17 20:06:27,505:INFO:Finalizing model
2024-07-17 20:06:54,482:INFO:Uploading results into container
2024-07-17 20:06:54,483:INFO:Uploading model into container now
2024-07-17 20:06:54,483:INFO:_master_model_container: 21
2024-07-17 20:06:54,483:INFO:_display_container: 7
2024-07-17 20:06:54,484:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8BB770D0>,
                       method='sigmoid', n_jobs=None)
2024-07-17 20:06:54,484:INFO:create_model() successfully completed......................................
2024-07-17 20:06:54,613:INFO:SubProcess create_model() end ==================================
2024-07-17 20:06:54,630:INFO:_master_model_container: 21
2024-07-17 20:06:54,630:INFO:_display_container: 7
2024-07-17 20:06:54,631:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8BB770D0>,
                       method='sigmoid', n_jobs=None)
2024-07-17 20:06:54,631:INFO:calibrate_model() successfully completed......................................
2024-07-17 20:11:51,255:INFO:Initializing plot_model()
2024-07-17 20:11:51,255:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA86BD9C10>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x000001DA8BB770D0>,
                       method='sigmoid', n_jobs=None), plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-17 20:11:51,255:INFO:Checking exceptions
2024-07-17 20:11:51,264:INFO:Preloading libraries
2024-07-17 20:11:51,286:INFO:Copying training dataset
2024-07-17 20:11:51,286:INFO:Plot type: calibration
2024-07-17 20:11:51,302:INFO:Scoring test/hold-out set
2024-07-17 20:11:51,678:INFO:Visual Rendered Successfully
2024-07-17 20:11:51,813:INFO:plot_model() successfully completed......................................
2024-07-17 20:12:03,936:INFO:Initializing save_model()
2024-07-17 20:12:03,936:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>, model_name=my_first_best_pipeline_cboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-17 20:12:03,937:INFO:Adding model into prep_pipe
2024-07-17 20:12:03,944:INFO:my_first_best_pipeline_cboost.pkl saved in current working directory
2024-07-17 20:12:03,950:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state_value',
                                             'exp_award_natl_value', 'ft_pct',
                                             '...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 <catboost.core.CatBoostClassifier object at 0x000001DA8A30AFD0>)],
         verbose=False)
2024-07-17 20:12:03,950:INFO:save_model() successfully completed......................................
2024-07-17 20:12:15,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_acf329facd0a4c8c8d1b13bd9d7e0c2d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_36e5717c16b34df984b866a7cc63f94e_575b2467a2644d8d92faaecdf8d7a528
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_54255bc936d141f0bcd5e1506182b79e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_a69e9e792a684bc18e86cf340cfd1945_452af28a41a5407a8e8c112caa4773d9
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_9930292a180d4ed28312f692b7dd7f1d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_67722ed47ace44eab9ab744278bb5305_3afc8192ac884b7cbe31c89cf118d4a8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_f06229c9f323431cbe65663f89995734
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_511dec2e955f4ec5b87000044ce1693b_deaa2c2aafbc48d1876911a7bae004d8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_2ffae818164b4c8ebb9ef649622665e8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_1c58a3da07da4c3e9dbf34e3a9ac78c3_efeb6bed5d2d4a7dae2329881f59df1e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_fbdd2bd6c11948f998e53d85a59dcaa7
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_7312814abb6a4033a106498c21f3fe9e_6c042ecfb54047afa38b8f15dc230d85
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_81ddd3c3bd694823b0bcf79ddb2e46f3
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_25448cec29ab4e4cb177bdb627c8b8e9_534f01b65622458f9d0a7145b2e6cb8a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_19de0e2b48e14ffb8532c80c37e4c1c6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_b74dbf43c20b4a6e89025231d1e64416_25275cfc8be64eada8a07081546692f4
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_64f897196608423ea13923c48daf4a36
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_486c6fa230224ebaaf1f4b099a5f6e78_68e8f75e3e7e4d6c98c1b2ba4fb8cfe2
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_4868a19d900b49018d6637f88e453739
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_49eef24474e54b0cb0f153ecb385dc2c_19b3f4c45c524c6baab34c693d1f493d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,755:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_f819a938836c4efbb9c4d14d726744c7
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,755:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_7ecb3225cb014e46b32fd59ba51b5d8d_e5f861b48fcc475680be809e8068f46f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_97fbc6a2f477469cb7467529bcf5a327
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_3ce8e2d3cfec49ce99b3e4d6a106604a_86bf9c7526a44222b5186f8da1c59f73
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_f589c820cb724575b520491688d28f9f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,756:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_3544d6f22e094d679a379aa094a2a118_466bb659bc5342539af5dc3ad6b85050
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_93966c55ead94edcbd391686a0ce98f4
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_e705e696cbdb458ca8e5bbf876a1e9d8_56fd2839ae1f4494b20f0410829fc63f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_d451042a3d2d422eb957b1cf5a02d38f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_6af57a913e32469d9ea8c361d70c0709_3b59367b40624f52bbce29e3973b77b6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_ac580655b3574fa0bf7c799c7525ff34
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_a1118dc4375445709a7e54f81404c980_54d23f36c71f441fa851e6bd486aad9a
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_b9a9b5aeb4f64f03b3f6cde90230278f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_f79137f10ee5424abac0b743fbb8b939_a0534dc00ae84d02a2dfdbf7002079a8
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_50229fc2be5d473ca79d8441fcdf897f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_b0c19cc029144760ad96bdbe1643905a_0d11644e44c74d60b827ed45e09a8d00
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_569d41861ab74b5491e80b2f67fbc808
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_895dd44cc3ef4e2e8dc711c36536996c_add075c4f4ec49839544b644694730ad
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_e0ab104538ea4493a786b2c389676fef
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_a3eefb6e39a943db9705e5d68a95c4de_61b70b5f896a4b3190f372ddc781f676
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_812971ebb3e743eaae5d3f458419991d
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_79e4c5ec60914e68a1c274522f347780_a123cd30beae40998e2b670a9ac5acb5
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_64402a622f81432793ee883b0f7b450f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_db848449c43346f7bcc9bf246e14f7f3_7624101fe06a461fa5349ed1014f3fe9
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_168c522b199d4532ac2ae91f1d368d60
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_96acd70173054eca95493f46aef532ad_57a85aa383e643b98f54c838271186a1
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,760:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_e4e17274aeba487cbc100010dfbf169f
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_3d7768f8ffa6433ebe9525d1f2e4bff1_f48aaae0864c4fe597fb6989f3613b6e
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_adb3219906014421962b608939eb9a39
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,761:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_9b6a4198e8e0490ba19123e3b1134198_7266027c48c54850b29e64e1c2f30376
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,764:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_69025c43fa044a81a8172f40602430d6
  warnings.warn("Failed to delete temporary folder: {}"

2024-07-17 20:12:15,764:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_29920_168f2e4bb54d4b4293e9a1d023575542_c44f70a0a74d459bbbbb48454ddac55c
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 20:28:12,319:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-14 20:28:12,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-14 20:28:12,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-14 20:28:12,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-14 20:28:31,536:INFO:PyCaret ClassificationExperiment
2024-08-14 20:28:31,537:INFO:Logging name: clf-default-name
2024-08-14 20:28:31,537:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-14 20:28:31,537:INFO:version 3.3.2
2024-08-14 20:28:31,537:INFO:Initializing setup()
2024-08-14 20:28:31,537:INFO:self.USI: 3777
2024-08-14 20:28:31,537:INFO:self._variable_keys: {'fold_shuffle_param', 'idx', 'fix_imbalance', 'y_test', '_available_plots', 'fold_groups_param', 'seed', 'X', 'gpu_n_jobs_param', 'X_train', 'log_plots_param', 'exp_name_log', 'logging_param', 'n_jobs_param', 'target_param', '_ml_usecase', 'X_test', 'html_param', 'is_multiclass', 'gpu_param', 'data', 'fold_generator', 'pipeline', 'y', 'y_train', 'exp_id', 'USI', 'memory'}
2024-08-14 20:28:31,537:INFO:Checking environment
2024-08-14 20:28:31,537:INFO:python_version: 3.11.7
2024-08-14 20:28:31,537:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-08-14 20:28:31,537:INFO:machine: AMD64
2024-08-14 20:28:31,538:INFO:platform: Windows-10-10.0.19045-SP0
2024-08-14 20:28:31,538:INFO:Memory: svmem(total=17064296448, available=7784849408, percent=54.4, used=9279447040, free=7784849408)
2024-08-14 20:28:31,538:INFO:Physical Core: 4
2024-08-14 20:28:31,538:INFO:Logical Core: 8
2024-08-14 20:28:31,538:INFO:Checking libraries
2024-08-14 20:28:31,538:INFO:System:
2024-08-14 20:28:31,538:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-08-14 20:28:31,538:INFO:executable: C:\Users\MTIDES\anaconda3\python.exe
2024-08-14 20:28:31,538:INFO:   machine: Windows-10-10.0.19045-SP0
2024-08-14 20:28:31,538:INFO:PyCaret required dependencies:
2024-08-14 20:28:34,631:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:28:48,411:INFO:                 pip: 23.2.1
2024-08-14 20:28:48,411:INFO:          setuptools: 68.2.2
2024-08-14 20:28:48,411:INFO:             pycaret: 3.3.2
2024-08-14 20:28:48,411:INFO:             IPython: 8.20.0
2024-08-14 20:28:48,411:INFO:          ipywidgets: 8.0.4
2024-08-14 20:28:48,411:INFO:                tqdm: 4.65.0
2024-08-14 20:28:48,411:INFO:               numpy: 1.24.3
2024-08-14 20:28:48,411:INFO:              pandas: 2.1.4
2024-08-14 20:28:48,411:INFO:              jinja2: 3.1.2
2024-08-14 20:28:48,411:INFO:               scipy: 1.11.4
2024-08-14 20:28:48,411:INFO:              joblib: 1.3.2
2024-08-14 20:28:48,412:INFO:             sklearn: 1.4.2
2024-08-14 20:28:48,412:INFO:                pyod: 2.0.1
2024-08-14 20:28:48,412:INFO:            imblearn: 0.11.0
2024-08-14 20:28:48,412:INFO:   category_encoders: 2.6.3
2024-08-14 20:28:48,412:INFO:            lightgbm: 4.4.0
2024-08-14 20:28:48,412:INFO:               numba: 0.58.1
2024-08-14 20:28:48,412:INFO:            requests: 2.31.0
2024-08-14 20:28:48,412:INFO:          matplotlib: 3.8.0
2024-08-14 20:28:48,412:INFO:          scikitplot: 0.3.7
2024-08-14 20:28:48,412:INFO:         yellowbrick: 1.5
2024-08-14 20:28:48,412:INFO:              plotly: 5.22.0
2024-08-14 20:28:48,412:INFO:    plotly-resampler: Not installed
2024-08-14 20:28:48,412:INFO:             kaleido: 0.2.1
2024-08-14 20:28:48,412:INFO:           schemdraw: 0.15
2024-08-14 20:28:48,412:INFO:         statsmodels: 0.14.0
2024-08-14 20:28:48,412:INFO:              sktime: 0.26.0
2024-08-14 20:28:48,412:INFO:               tbats: 1.1.3
2024-08-14 20:28:48,412:INFO:            pmdarima: 2.0.4
2024-08-14 20:28:48,412:INFO:              psutil: 5.9.0
2024-08-14 20:28:48,413:INFO:          markupsafe: 2.1.3
2024-08-14 20:28:48,413:INFO:             pickle5: Not installed
2024-08-14 20:28:48,413:INFO:         cloudpickle: 2.2.1
2024-08-14 20:28:48,413:INFO:         deprecation: 2.1.0
2024-08-14 20:28:48,413:INFO:              xxhash: 2.0.2
2024-08-14 20:28:48,413:INFO:           wurlitzer: Not installed
2024-08-14 20:28:48,413:INFO:PyCaret optional dependencies:
2024-08-14 20:28:48,433:INFO:                shap: 0.46.0
2024-08-14 20:28:48,433:INFO:           interpret: Not installed
2024-08-14 20:28:48,433:INFO:                umap: Not installed
2024-08-14 20:28:48,433:INFO:     ydata_profiling: 4.6.4
2024-08-14 20:28:48,433:INFO:  explainerdashboard: Not installed
2024-08-14 20:28:48,434:INFO:             autoviz: Not installed
2024-08-14 20:28:48,434:INFO:           fairlearn: Not installed
2024-08-14 20:28:48,434:INFO:          deepchecks: Not installed
2024-08-14 20:28:48,434:INFO:             xgboost: Not installed
2024-08-14 20:28:48,434:INFO:            catboost: 1.2.5
2024-08-14 20:28:48,434:INFO:              kmodes: Not installed
2024-08-14 20:28:48,434:INFO:             mlxtend: Not installed
2024-08-14 20:28:48,434:INFO:       statsforecast: Not installed
2024-08-14 20:28:48,434:INFO:        tune_sklearn: Not installed
2024-08-14 20:28:48,434:INFO:                 ray: Not installed
2024-08-14 20:28:48,434:INFO:            hyperopt: Not installed
2024-08-14 20:28:48,434:INFO:              optuna: Not installed
2024-08-14 20:28:48,434:INFO:               skopt: Not installed
2024-08-14 20:28:48,434:INFO:              mlflow: Not installed
2024-08-14 20:28:48,434:INFO:              gradio: Not installed
2024-08-14 20:28:48,434:INFO:             fastapi: Not installed
2024-08-14 20:28:48,434:INFO:             uvicorn: Not installed
2024-08-14 20:28:48,434:INFO:              m2cgen: Not installed
2024-08-14 20:28:48,434:INFO:           evidently: Not installed
2024-08-14 20:28:48,435:INFO:               fugue: Not installed
2024-08-14 20:28:48,435:INFO:           streamlit: 1.37.1
2024-08-14 20:28:48,435:INFO:             prophet: Not installed
2024-08-14 20:28:48,435:INFO:None
2024-08-14 20:28:48,435:INFO:Set up data.
2024-08-14 20:28:48,452:INFO:Set up folding strategy.
2024-08-14 20:28:48,452:INFO:Set up train/test split.
2024-08-14 20:28:48,967:INFO:Set up index.
2024-08-14 20:28:48,967:INFO:Assigning column types.
2024-08-14 20:28:48,980:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-14 20:28:49,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,424:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,472:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,500:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-14 20:28:49,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,574:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-14 20:28:49,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,648:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,649:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-14 20:28:49,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,732:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:49,810:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:49,829:INFO:Preparing preprocessing pipeline...
2024-08-14 20:28:49,832:INFO:Set up label encoding.
2024-08-14 20:28:49,832:INFO:Set up simple imputation.
2024-08-14 20:28:49,886:INFO:Finished creating preprocessing pipeline.
2024-08-14 20:28:49,909:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-08-14 20:28:49,909:INFO:Creating final display dataframe.
2024-08-14 20:28:50,102:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target  num_awards_given
2                   Target type            Binary
3                Target mapping   High: 0, Low: 1
4           Original data shape        (3798, 40)
5        Transformed data shape        (3798, 40)
6   Transformed train set shape        (2658, 40)
7    Transformed test set shape        (1140, 40)
8              Numeric features                39
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              3777
2024-08-14 20:28:50,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:50,204:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:50,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-14 20:28:50,298:INFO:Soft dependency imported: catboost: 1.2.5
2024-08-14 20:28:50,300:INFO:setup() successfully completed in 18.77s...............
2024-08-14 20:28:50,300:INFO:Initializing compare_models()
2024-08-14 20:28:50,300:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-14 20:28:50,300:INFO:Checking exceptions
2024-08-14 20:28:50,309:INFO:Preparing display monitor
2024-08-14 20:28:50,373:INFO:Initializing Logistic Regression
2024-08-14 20:28:50,373:INFO:Total runtime is 0.0 minutes
2024-08-14 20:28:50,378:INFO:SubProcess create_model() called ==================================
2024-08-14 20:28:50,379:INFO:Initializing create_model()
2024-08-14 20:28:50,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:28:50,379:INFO:Checking exceptions
2024-08-14 20:28:50,379:INFO:Importing libraries
2024-08-14 20:28:50,380:INFO:Copying training dataset
2024-08-14 20:28:50,395:INFO:Defining folds
2024-08-14 20:28:50,395:INFO:Declaring metric variables
2024-08-14 20:28:50,400:INFO:Importing untrained model
2024-08-14 20:28:50,404:INFO:Logistic Regression Imported successfully
2024-08-14 20:28:50,412:INFO:Starting cross validation
2024-08-14 20:28:50,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:29:48,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:29:48,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:29:48,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:29:48,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:29:48,366:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:29:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,325:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,700:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,707:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,707:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,708:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,708:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,708:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,713:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:58,714:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:59,144:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,148:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-14 20:29:59,148:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,151:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,159:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,162:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,166:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,177:INFO:Calculating mean and std
2024-08-14 20:29:59,178:INFO:Creating metrics dataframe
2024-08-14 20:29:59,181:INFO:Uploading results into container
2024-08-14 20:29:59,182:INFO:Uploading model into container now
2024-08-14 20:29:59,183:INFO:_master_model_container: 1
2024-08-14 20:29:59,183:INFO:_display_container: 2
2024-08-14 20:29:59,184:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-14 20:29:59,184:INFO:create_model() successfully completed......................................
2024-08-14 20:29:59,300:INFO:SubProcess create_model() end ==================================
2024-08-14 20:29:59,300:INFO:Creating metrics dataframe
2024-08-14 20:29:59,308:INFO:Initializing K Neighbors Classifier
2024-08-14 20:29:59,308:INFO:Total runtime is 1.148931892712911 minutes
2024-08-14 20:29:59,312:INFO:SubProcess create_model() called ==================================
2024-08-14 20:29:59,312:INFO:Initializing create_model()
2024-08-14 20:29:59,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:29:59,313:INFO:Checking exceptions
2024-08-14 20:29:59,313:INFO:Importing libraries
2024-08-14 20:29:59,313:INFO:Copying training dataset
2024-08-14 20:29:59,329:INFO:Defining folds
2024-08-14 20:29:59,330:INFO:Declaring metric variables
2024-08-14 20:29:59,334:INFO:Importing untrained model
2024-08-14 20:29:59,339:INFO:K Neighbors Classifier Imported successfully
2024-08-14 20:29:59,347:INFO:Starting cross validation
2024-08-14 20:29:59,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:29:59,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,818:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,822:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,824:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,831:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,834:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,837:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,840:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,843:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,843:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,844:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,850:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,851:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,851:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,856:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,857:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,864:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,866:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:29:59,872:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,061:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,065:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,067:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,071:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,075:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,084:INFO:Calculating mean and std
2024-08-14 20:30:00,085:INFO:Creating metrics dataframe
2024-08-14 20:30:00,087:INFO:Uploading results into container
2024-08-14 20:30:00,087:INFO:Uploading model into container now
2024-08-14 20:30:00,088:INFO:_master_model_container: 2
2024-08-14 20:30:00,088:INFO:_display_container: 2
2024-08-14 20:30:00,088:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-14 20:30:00,089:INFO:create_model() successfully completed......................................
2024-08-14 20:30:00,191:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:00,191:INFO:Creating metrics dataframe
2024-08-14 20:30:00,199:INFO:Initializing Naive Bayes
2024-08-14 20:30:00,199:INFO:Total runtime is 1.1637781222661336 minutes
2024-08-14 20:30:00,203:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:00,204:INFO:Initializing create_model()
2024-08-14 20:30:00,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:00,204:INFO:Checking exceptions
2024-08-14 20:30:00,204:INFO:Importing libraries
2024-08-14 20:30:00,206:INFO:Copying training dataset
2024-08-14 20:30:00,226:INFO:Defining folds
2024-08-14 20:30:00,227:INFO:Declaring metric variables
2024-08-14 20:30:00,242:INFO:Importing untrained model
2024-08-14 20:30:00,249:INFO:Naive Bayes Imported successfully
2024-08-14 20:30:00,259:INFO:Starting cross validation
2024-08-14 20:30:00,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:00,398:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,400:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,400:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,402:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,403:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,404:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,409:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,410:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,411:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,413:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,413:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,414:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,419:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,417:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,420:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,424:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,427:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,432:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,458:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,462:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,463:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,466:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,466:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,482:INFO:Calculating mean and std
2024-08-14 20:30:00,485:INFO:Creating metrics dataframe
2024-08-14 20:30:00,488:INFO:Uploading results into container
2024-08-14 20:30:00,489:INFO:Uploading model into container now
2024-08-14 20:30:00,490:INFO:_master_model_container: 3
2024-08-14 20:30:00,490:INFO:_display_container: 2
2024-08-14 20:30:00,490:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-14 20:30:00,490:INFO:create_model() successfully completed......................................
2024-08-14 20:30:00,595:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:00,595:INFO:Creating metrics dataframe
2024-08-14 20:30:00,603:INFO:Initializing Decision Tree Classifier
2024-08-14 20:30:00,603:INFO:Total runtime is 1.1705121596654255 minutes
2024-08-14 20:30:00,607:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:00,607:INFO:Initializing create_model()
2024-08-14 20:30:00,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:00,608:INFO:Checking exceptions
2024-08-14 20:30:00,608:INFO:Importing libraries
2024-08-14 20:30:00,608:INFO:Copying training dataset
2024-08-14 20:30:00,623:INFO:Defining folds
2024-08-14 20:30:00,624:INFO:Declaring metric variables
2024-08-14 20:30:00,627:INFO:Importing untrained model
2024-08-14 20:30:00,632:INFO:Decision Tree Classifier Imported successfully
2024-08-14 20:30:00,639:INFO:Starting cross validation
2024-08-14 20:30:00,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:00,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,763:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,763:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,768:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,769:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,776:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,778:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,791:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,795:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,796:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,798:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,802:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,805:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,810:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,815:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,820:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,874:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,874:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,878:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,878:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:00,899:INFO:Calculating mean and std
2024-08-14 20:30:00,902:INFO:Creating metrics dataframe
2024-08-14 20:30:00,907:INFO:Uploading results into container
2024-08-14 20:30:00,908:INFO:Uploading model into container now
2024-08-14 20:30:00,909:INFO:_master_model_container: 4
2024-08-14 20:30:00,909:INFO:_display_container: 2
2024-08-14 20:30:00,910:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-14 20:30:00,910:INFO:create_model() successfully completed......................................
2024-08-14 20:30:01,018:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:01,018:INFO:Creating metrics dataframe
2024-08-14 20:30:01,027:INFO:Initializing SVM - Linear Kernel
2024-08-14 20:30:01,027:INFO:Total runtime is 1.177579363187154 minutes
2024-08-14 20:30:01,031:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:01,032:INFO:Initializing create_model()
2024-08-14 20:30:01,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:01,033:INFO:Checking exceptions
2024-08-14 20:30:01,033:INFO:Importing libraries
2024-08-14 20:30:01,033:INFO:Copying training dataset
2024-08-14 20:30:01,048:INFO:Defining folds
2024-08-14 20:30:01,048:INFO:Declaring metric variables
2024-08-14 20:30:01,052:INFO:Importing untrained model
2024-08-14 20:30:01,056:INFO:SVM - Linear Kernel Imported successfully
2024-08-14 20:30:01,064:INFO:Starting cross validation
2024-08-14 20:30:01,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:01,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,168:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,173:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,174:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,181:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,186:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,192:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,193:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,195:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,201:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,207:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,208:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,215:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,215:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,218:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,224:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,231:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,257:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,261:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,265:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,272:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,280:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,290:INFO:Calculating mean and std
2024-08-14 20:30:01,291:INFO:Creating metrics dataframe
2024-08-14 20:30:01,293:INFO:Uploading results into container
2024-08-14 20:30:01,294:INFO:Uploading model into container now
2024-08-14 20:30:01,294:INFO:_master_model_container: 5
2024-08-14 20:30:01,294:INFO:_display_container: 2
2024-08-14 20:30:01,295:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-14 20:30:01,295:INFO:create_model() successfully completed......................................
2024-08-14 20:30:01,398:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:01,398:INFO:Creating metrics dataframe
2024-08-14 20:30:01,408:INFO:Initializing Ridge Classifier
2024-08-14 20:30:01,408:INFO:Total runtime is 1.18392143646876 minutes
2024-08-14 20:30:01,412:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:01,412:INFO:Initializing create_model()
2024-08-14 20:30:01,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:01,413:INFO:Checking exceptions
2024-08-14 20:30:01,413:INFO:Importing libraries
2024-08-14 20:30:01,413:INFO:Copying training dataset
2024-08-14 20:30:01,428:INFO:Defining folds
2024-08-14 20:30:01,428:INFO:Declaring metric variables
2024-08-14 20:30:01,431:INFO:Importing untrained model
2024-08-14 20:30:01,435:INFO:Ridge Classifier Imported successfully
2024-08-14 20:30:01,445:INFO:Starting cross validation
2024-08-14 20:30:01,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:01,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,774:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,777:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,778:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,782:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,787:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,788:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,837:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,841:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,841:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,849:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:01,861:INFO:Calculating mean and std
2024-08-14 20:30:01,864:INFO:Creating metrics dataframe
2024-08-14 20:30:01,868:INFO:Uploading results into container
2024-08-14 20:30:01,869:INFO:Uploading model into container now
2024-08-14 20:30:01,870:INFO:_master_model_container: 6
2024-08-14 20:30:01,870:INFO:_display_container: 2
2024-08-14 20:30:01,871:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-14 20:30:01,871:INFO:create_model() successfully completed......................................
2024-08-14 20:30:01,978:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:01,979:INFO:Creating metrics dataframe
2024-08-14 20:30:01,988:INFO:Initializing Random Forest Classifier
2024-08-14 20:30:01,988:INFO:Total runtime is 1.1935868382453918 minutes
2024-08-14 20:30:01,992:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:01,992:INFO:Initializing create_model()
2024-08-14 20:30:01,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:01,992:INFO:Checking exceptions
2024-08-14 20:30:01,993:INFO:Importing libraries
2024-08-14 20:30:01,993:INFO:Copying training dataset
2024-08-14 20:30:02,007:INFO:Defining folds
2024-08-14 20:30:02,007:INFO:Declaring metric variables
2024-08-14 20:30:02,011:INFO:Importing untrained model
2024-08-14 20:30:02,017:INFO:Random Forest Classifier Imported successfully
2024-08-14 20:30:02,025:INFO:Starting cross validation
2024-08-14 20:30:02,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:04,099:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,100:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,108:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,113:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,117:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,120:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,122:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,127:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,130:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,131:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,132:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,138:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,139:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,142:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,147:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,148:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,169:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,177:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,185:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,641:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,642:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,645:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,646:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,649:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,650:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:04,662:INFO:Calculating mean and std
2024-08-14 20:30:04,663:INFO:Creating metrics dataframe
2024-08-14 20:30:04,666:INFO:Uploading results into container
2024-08-14 20:30:04,667:INFO:Uploading model into container now
2024-08-14 20:30:04,667:INFO:_master_model_container: 7
2024-08-14 20:30:04,667:INFO:_display_container: 2
2024-08-14 20:30:04,668:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-14 20:30:04,668:INFO:create_model() successfully completed......................................
2024-08-14 20:30:04,773:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:04,773:INFO:Creating metrics dataframe
2024-08-14 20:30:04,783:INFO:Initializing Quadratic Discriminant Analysis
2024-08-14 20:30:04,783:INFO:Total runtime is 1.2401718258857726 minutes
2024-08-14 20:30:04,786:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:04,787:INFO:Initializing create_model()
2024-08-14 20:30:04,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:04,787:INFO:Checking exceptions
2024-08-14 20:30:04,787:INFO:Importing libraries
2024-08-14 20:30:04,787:INFO:Copying training dataset
2024-08-14 20:30:04,802:INFO:Defining folds
2024-08-14 20:30:04,803:INFO:Declaring metric variables
2024-08-14 20:30:04,807:INFO:Importing untrained model
2024-08-14 20:30:04,813:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-14 20:30:04,820:INFO:Starting cross validation
2024-08-14 20:30:04,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:06,128:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,131:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,132:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,132:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,133:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,135:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,155:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,159:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,163:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,164:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,166:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,168:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,172:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,172:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,173:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,174:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,207:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-14 20:30:06,229:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,234:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,234:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,239:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,239:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:06,255:INFO:Calculating mean and std
2024-08-14 20:30:06,256:INFO:Creating metrics dataframe
2024-08-14 20:30:06,260:INFO:Uploading results into container
2024-08-14 20:30:06,261:INFO:Uploading model into container now
2024-08-14 20:30:06,262:INFO:_master_model_container: 8
2024-08-14 20:30:06,262:INFO:_display_container: 2
2024-08-14 20:30:06,262:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-14 20:30:06,262:INFO:create_model() successfully completed......................................
2024-08-14 20:30:06,378:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:06,378:INFO:Creating metrics dataframe
2024-08-14 20:30:06,387:INFO:Initializing Ada Boost Classifier
2024-08-14 20:30:06,387:INFO:Total runtime is 1.2669131557146707 minutes
2024-08-14 20:30:06,391:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:06,391:INFO:Initializing create_model()
2024-08-14 20:30:06,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:06,392:INFO:Checking exceptions
2024-08-14 20:30:06,392:INFO:Importing libraries
2024-08-14 20:30:06,392:INFO:Copying training dataset
2024-08-14 20:30:06,411:INFO:Defining folds
2024-08-14 20:30:06,411:INFO:Declaring metric variables
2024-08-14 20:30:06,417:INFO:Importing untrained model
2024-08-14 20:30:06,421:INFO:Ada Boost Classifier Imported successfully
2024-08-14 20:30:06,433:INFO:Starting cross validation
2024-08-14 20:30:06,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:06,632:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:06,633:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:06,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:06,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:06,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:06,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:07,186:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,189:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,189:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,192:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,193:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,193:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,195:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,196:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,200:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,202:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,203:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,212:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,214:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,216:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,222:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,228:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,246:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:07,247:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-14 20:30:07,600:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,604:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,608:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,611:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,616:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,621:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:07,634:INFO:Calculating mean and std
2024-08-14 20:30:07,636:INFO:Creating metrics dataframe
2024-08-14 20:30:07,638:INFO:Uploading results into container
2024-08-14 20:30:07,639:INFO:Uploading model into container now
2024-08-14 20:30:07,639:INFO:_master_model_container: 9
2024-08-14 20:30:07,639:INFO:_display_container: 2
2024-08-14 20:30:07,640:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-14 20:30:07,640:INFO:create_model() successfully completed......................................
2024-08-14 20:30:07,755:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:07,755:INFO:Creating metrics dataframe
2024-08-14 20:30:07,767:INFO:Initializing Gradient Boosting Classifier
2024-08-14 20:30:07,767:INFO:Total runtime is 1.2899035374323526 minutes
2024-08-14 20:30:07,772:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:07,773:INFO:Initializing create_model()
2024-08-14 20:30:07,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:07,774:INFO:Checking exceptions
2024-08-14 20:30:07,774:INFO:Importing libraries
2024-08-14 20:30:07,774:INFO:Copying training dataset
2024-08-14 20:30:07,792:INFO:Defining folds
2024-08-14 20:30:07,793:INFO:Declaring metric variables
2024-08-14 20:30:07,799:INFO:Importing untrained model
2024-08-14 20:30:07,805:INFO:Gradient Boosting Classifier Imported successfully
2024-08-14 20:30:07,816:INFO:Starting cross validation
2024-08-14 20:30:07,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:09,869:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,876:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,877:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,884:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,892:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,893:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,908:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,913:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,919:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,926:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,927:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,934:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,935:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,949:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,957:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,967:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,976:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,985:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,993:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:09,993:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:10,001:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:10,007:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,270:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,275:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,276:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,279:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,280:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,284:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,292:INFO:Calculating mean and std
2024-08-14 20:30:11,294:INFO:Creating metrics dataframe
2024-08-14 20:30:11,296:INFO:Uploading results into container
2024-08-14 20:30:11,297:INFO:Uploading model into container now
2024-08-14 20:30:11,298:INFO:_master_model_container: 10
2024-08-14 20:30:11,298:INFO:_display_container: 2
2024-08-14 20:30:11,299:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-14 20:30:11,299:INFO:create_model() successfully completed......................................
2024-08-14 20:30:11,417:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:11,417:INFO:Creating metrics dataframe
2024-08-14 20:30:11,427:INFO:Initializing Linear Discriminant Analysis
2024-08-14 20:30:11,427:INFO:Total runtime is 1.3509082118670146 minutes
2024-08-14 20:30:11,432:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:11,433:INFO:Initializing create_model()
2024-08-14 20:30:11,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:11,433:INFO:Checking exceptions
2024-08-14 20:30:11,433:INFO:Importing libraries
2024-08-14 20:30:11,433:INFO:Copying training dataset
2024-08-14 20:30:11,449:INFO:Defining folds
2024-08-14 20:30:11,449:INFO:Declaring metric variables
2024-08-14 20:30:11,455:INFO:Importing untrained model
2024-08-14 20:30:11,462:INFO:Linear Discriminant Analysis Imported successfully
2024-08-14 20:30:11,472:INFO:Starting cross validation
2024-08-14 20:30:11,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:11,566:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,570:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,574:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,578:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,584:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,586:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,587:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,595:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,602:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,604:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,606:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,610:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,611:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,613:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,614:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,619:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,619:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,621:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,621:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,625:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,627:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,629:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,632:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,640:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,665:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,668:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,670:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,673:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,675:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,678:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:11,694:INFO:Calculating mean and std
2024-08-14 20:30:11,695:INFO:Creating metrics dataframe
2024-08-14 20:30:11,697:INFO:Uploading results into container
2024-08-14 20:30:11,697:INFO:Uploading model into container now
2024-08-14 20:30:11,698:INFO:_master_model_container: 11
2024-08-14 20:30:11,698:INFO:_display_container: 2
2024-08-14 20:30:11,698:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-14 20:30:11,699:INFO:create_model() successfully completed......................................
2024-08-14 20:30:11,807:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:11,807:INFO:Creating metrics dataframe
2024-08-14 20:30:11,817:INFO:Initializing Extra Trees Classifier
2024-08-14 20:30:11,817:INFO:Total runtime is 1.3574142654736836 minutes
2024-08-14 20:30:11,823:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:11,823:INFO:Initializing create_model()
2024-08-14 20:30:11,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:11,824:INFO:Checking exceptions
2024-08-14 20:30:11,824:INFO:Importing libraries
2024-08-14 20:30:11,825:INFO:Copying training dataset
2024-08-14 20:30:11,846:INFO:Defining folds
2024-08-14 20:30:11,846:INFO:Declaring metric variables
2024-08-14 20:30:11,850:INFO:Importing untrained model
2024-08-14 20:30:11,855:INFO:Extra Trees Classifier Imported successfully
2024-08-14 20:30:11,866:INFO:Starting cross validation
2024-08-14 20:30:11,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:12,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,745:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,747:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,753:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,758:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,765:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,770:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,771:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,775:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,779:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,788:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,800:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,806:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,808:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,816:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,822:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,829:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,833:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,837:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:12,840:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,163:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,166:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,167:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,170:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,171:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:13,182:INFO:Calculating mean and std
2024-08-14 20:30:13,183:INFO:Creating metrics dataframe
2024-08-14 20:30:13,186:INFO:Uploading results into container
2024-08-14 20:30:13,186:INFO:Uploading model into container now
2024-08-14 20:30:13,187:INFO:_master_model_container: 12
2024-08-14 20:30:13,187:INFO:_display_container: 2
2024-08-14 20:30:13,188:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-14 20:30:13,188:INFO:create_model() successfully completed......................................
2024-08-14 20:30:13,291:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:13,291:INFO:Creating metrics dataframe
2024-08-14 20:30:13,303:INFO:Initializing Light Gradient Boosting Machine
2024-08-14 20:30:13,303:INFO:Total runtime is 1.3821810603141784 minutes
2024-08-14 20:30:13,307:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:13,307:INFO:Initializing create_model()
2024-08-14 20:30:13,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:13,307:INFO:Checking exceptions
2024-08-14 20:30:13,308:INFO:Importing libraries
2024-08-14 20:30:13,308:INFO:Copying training dataset
2024-08-14 20:30:13,327:INFO:Defining folds
2024-08-14 20:30:13,327:INFO:Declaring metric variables
2024-08-14 20:30:13,339:INFO:Importing untrained model
2024-08-14 20:30:13,345:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-14 20:30:13,353:INFO:Starting cross validation
2024-08-14 20:30:13,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:15,113:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,114:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,120:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,121:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,127:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,127:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,129:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,135:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,203:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,212:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,218:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,233:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,241:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,249:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,262:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,270:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,278:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,279:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,286:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,294:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,308:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,317:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,325:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,631:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,639:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,646:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,646:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,656:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,664:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:15,679:INFO:Calculating mean and std
2024-08-14 20:30:15,681:INFO:Creating metrics dataframe
2024-08-14 20:30:15,685:INFO:Uploading results into container
2024-08-14 20:30:15,685:INFO:Uploading model into container now
2024-08-14 20:30:15,686:INFO:_master_model_container: 13
2024-08-14 20:30:15,686:INFO:_display_container: 2
2024-08-14 20:30:15,687:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-14 20:30:15,687:INFO:create_model() successfully completed......................................
2024-08-14 20:30:15,819:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:15,819:INFO:Creating metrics dataframe
2024-08-14 20:30:15,832:INFO:Initializing CatBoost Classifier
2024-08-14 20:30:15,832:INFO:Total runtime is 1.4243274092674254 minutes
2024-08-14 20:30:15,837:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:15,837:INFO:Initializing create_model()
2024-08-14 20:30:15,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:15,837:INFO:Checking exceptions
2024-08-14 20:30:15,838:INFO:Importing libraries
2024-08-14 20:30:15,838:INFO:Copying training dataset
2024-08-14 20:30:15,855:INFO:Defining folds
2024-08-14 20:30:15,855:INFO:Declaring metric variables
2024-08-14 20:30:15,860:INFO:Importing untrained model
2024-08-14 20:30:15,864:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:30:15,873:INFO:Starting cross validation
2024-08-14 20:30:15,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:39,646:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,649:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,651:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,653:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,654:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,657:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,821:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,825:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,979:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,982:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,984:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,986:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,988:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,993:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,994:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:39,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,000:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,001:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,005:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,038:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:40,046:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,774:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,781:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,785:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,797:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:47,812:INFO:Calculating mean and std
2024-08-14 20:30:47,814:INFO:Creating metrics dataframe
2024-08-14 20:30:47,816:INFO:Uploading results into container
2024-08-14 20:30:47,816:INFO:Uploading model into container now
2024-08-14 20:30:47,817:INFO:_master_model_container: 14
2024-08-14 20:30:47,817:INFO:_display_container: 2
2024-08-14 20:30:47,817:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA92B910>
2024-08-14 20:30:47,817:INFO:create_model() successfully completed......................................
2024-08-14 20:30:47,923:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:47,924:INFO:Creating metrics dataframe
2024-08-14 20:30:47,940:INFO:Initializing Dummy Classifier
2024-08-14 20:30:47,940:INFO:Total runtime is 1.9594651460647583 minutes
2024-08-14 20:30:47,946:INFO:SubProcess create_model() called ==================================
2024-08-14 20:30:47,946:INFO:Initializing create_model()
2024-08-14 20:30:47,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:47,947:INFO:Checking exceptions
2024-08-14 20:30:47,947:INFO:Importing libraries
2024-08-14 20:30:47,948:INFO:Copying training dataset
2024-08-14 20:30:47,973:INFO:Defining folds
2024-08-14 20:30:47,974:INFO:Declaring metric variables
2024-08-14 20:30:47,978:INFO:Importing untrained model
2024-08-14 20:30:47,984:INFO:Dummy Classifier Imported successfully
2024-08-14 20:30:47,997:INFO:Starting cross validation
2024-08-14 20:30:47,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:30:48,073:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,080:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,081:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,085:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,085:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,087:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,089:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,091:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,093:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,095:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,102:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,107:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,112:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,114:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,114:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,115:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,117:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,118:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,119:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,121:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,121:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,124:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,128:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,130:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,135:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,144:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,147:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,152:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,154:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,157:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,158:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,162:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,179:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,186:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,189:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-14 20:30:48,191:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:48,208:INFO:Calculating mean and std
2024-08-14 20:30:48,209:INFO:Creating metrics dataframe
2024-08-14 20:30:48,211:INFO:Uploading results into container
2024-08-14 20:30:48,211:INFO:Uploading model into container now
2024-08-14 20:30:48,212:INFO:_master_model_container: 15
2024-08-14 20:30:48,212:INFO:_display_container: 2
2024-08-14 20:30:48,212:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-14 20:30:48,213:INFO:create_model() successfully completed......................................
2024-08-14 20:30:48,337:INFO:SubProcess create_model() end ==================================
2024-08-14 20:30:48,337:INFO:Creating metrics dataframe
2024-08-14 20:30:48,367:INFO:Initializing create_model()
2024-08-14 20:30:48,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA92B910>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:30:48,368:INFO:Checking exceptions
2024-08-14 20:30:48,371:INFO:Importing libraries
2024-08-14 20:30:48,371:INFO:Copying training dataset
2024-08-14 20:30:48,394:INFO:Defining folds
2024-08-14 20:30:48,394:INFO:Declaring metric variables
2024-08-14 20:30:48,394:INFO:Importing untrained model
2024-08-14 20:30:48,394:INFO:Declaring custom model
2024-08-14 20:30:48,395:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:30:48,395:INFO:Cross validation set to False
2024-08-14 20:30:48,396:INFO:Fitting Model
2024-08-14 20:30:54,441:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>
2024-08-14 20:30:54,441:INFO:create_model() successfully completed......................................
2024-08-14 20:30:54,597:INFO:_master_model_container: 15
2024-08-14 20:30:54,597:INFO:_display_container: 2
2024-08-14 20:30:54,597:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>
2024-08-14 20:30:54,598:INFO:compare_models() successfully completed......................................
2024-08-14 20:30:54,598:INFO:Initializing evaluate_model()
2024-08-14 20:30:54,599:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-08-14 20:30:54,722:INFO:Initializing plot_model()
2024-08-14 20:30:54,722:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-14 20:30:54,722:INFO:Checking exceptions
2024-08-14 20:30:54,729:INFO:Preloading libraries
2024-08-14 20:30:54,733:INFO:Copying training dataset
2024-08-14 20:30:54,733:INFO:Plot type: pipeline
2024-08-14 20:30:56,487:INFO:Visual Rendered Successfully
2024-08-14 20:30:56,593:INFO:plot_model() successfully completed......................................
2024-08-14 20:30:56,597:INFO:Initializing predict_model()
2024-08-14 20:30:56,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020AF7979760>)
2024-08-14 20:30:56,597:INFO:Checking exceptions
2024-08-14 20:30:56,597:INFO:Preloading libraries
2024-08-14 20:30:56,726:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:56,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:56,747:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:30:56,874:INFO:Initializing predict_model()
2024-08-14 20:30:56,874:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020AFAABA980>)
2024-08-14 20:30:56,946:INFO:Checking exceptions
2024-08-14 20:30:56,947:INFO:Preloading libraries
2024-08-14 20:30:56,948:INFO:Set up data.
2024-08-14 20:30:56,958:INFO:Set up index.
2024-08-14 20:33:44,629:INFO:Initializing plot_model()
2024-08-14 20:33:44,629:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-14 20:33:44,629:INFO:Checking exceptions
2024-08-14 20:33:44,637:INFO:Preloading libraries
2024-08-14 20:33:44,642:INFO:Copying training dataset
2024-08-14 20:33:44,642:INFO:Plot type: feature
2024-08-14 20:33:44,643:WARNING:No coef_ found. Trying feature_importances_
2024-08-14 20:33:44,975:INFO:Visual Rendered Successfully
2024-08-14 20:33:45,103:INFO:plot_model() successfully completed......................................
2024-08-14 20:34:09,678:INFO:Initializing plot_model()
2024-08-14 20:34:09,678:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-14 20:34:09,678:INFO:Checking exceptions
2024-08-14 20:34:09,688:INFO:Preloading libraries
2024-08-14 20:34:09,694:INFO:Copying training dataset
2024-08-14 20:34:09,694:INFO:Plot type: pipeline
2024-08-14 20:34:09,935:INFO:Visual Rendered Successfully
2024-08-14 20:34:10,052:INFO:plot_model() successfully completed......................................
2024-08-14 20:34:15,710:INFO:Initializing plot_model()
2024-08-14 20:34:15,711:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-14 20:34:15,711:INFO:Checking exceptions
2024-08-14 20:34:15,717:INFO:Preloading libraries
2024-08-14 20:34:15,723:INFO:Copying training dataset
2024-08-14 20:34:15,723:INFO:Plot type: feature_all
2024-08-14 20:34:15,773:WARNING:No coef_ found. Trying feature_importances_
2024-08-14 20:34:16,354:INFO:Visual Rendered Successfully
2024-08-14 20:34:16,467:INFO:plot_model() successfully completed......................................
2024-08-14 20:44:34,776:INFO:Initializing predict_model()
2024-08-14 20:44:34,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020AFAA0B7E0>)
2024-08-14 20:44:34,776:INFO:Checking exceptions
2024-08-14 20:44:34,776:INFO:Preloading libraries
2024-08-14 20:44:34,779:INFO:Set up data.
2024-08-14 20:44:34,790:INFO:Set up index.
2024-08-14 20:45:42,024:INFO:Initializing plot_model()
2024-08-14 20:45:42,025:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 20:45:42,026:INFO:Checking exceptions
2024-08-14 20:45:42,033:INFO:Preloading libraries
2024-08-14 20:45:42,038:INFO:Copying training dataset
2024-08-14 20:45:42,039:INFO:Plot type: confusion_matrix
2024-08-14 20:45:42,216:INFO:Fitting Model
2024-08-14 20:45:42,217:INFO:Scoring test/hold-out set
2024-08-14 20:45:42,370:INFO:Visual Rendered Successfully
2024-08-14 20:45:42,478:INFO:plot_model() successfully completed......................................
2024-08-14 20:45:52,651:INFO:Initializing plot_model()
2024-08-14 20:45:52,651:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 20:45:52,652:INFO:Checking exceptions
2024-08-14 20:45:52,664:INFO:Preloading libraries
2024-08-14 20:45:52,668:INFO:Copying training dataset
2024-08-14 20:45:52,668:INFO:Plot type: auc
2024-08-14 20:45:52,837:INFO:Fitting Model
2024-08-14 20:45:52,838:INFO:Scoring test/hold-out set
2024-08-14 20:45:53,105:INFO:Visual Rendered Successfully
2024-08-14 20:45:53,214:INFO:plot_model() successfully completed......................................
2024-08-14 20:46:03,900:INFO:Initializing plot_model()
2024-08-14 20:46:03,900:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 20:46:03,901:INFO:Checking exceptions
2024-08-14 20:46:03,909:INFO:Preloading libraries
2024-08-14 20:46:03,913:INFO:Copying training dataset
2024-08-14 20:46:03,913:INFO:Plot type: feature
2024-08-14 20:46:03,914:WARNING:No coef_ found. Trying feature_importances_
2024-08-14 20:46:04,196:INFO:Visual Rendered Successfully
2024-08-14 20:46:04,300:INFO:plot_model() successfully completed......................................
2024-08-14 20:46:21,050:INFO:Initializing tune_model()
2024-08-14 20:46:21,050:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-14 20:46:21,050:INFO:Checking exceptions
2024-08-14 20:46:21,077:INFO:Copying training dataset
2024-08-14 20:46:21,088:INFO:Checking base model
2024-08-14 20:46:21,088:INFO:Base model : CatBoost Classifier
2024-08-14 20:46:21,092:INFO:Declaring metric variables
2024-08-14 20:46:21,097:INFO:Defining Hyperparameters
2024-08-14 20:46:21,211:INFO:Tuning with n_jobs=-1
2024-08-14 20:46:21,211:INFO:Initializing RandomizedSearchCV
2024-08-14 20:46:33,890:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:34,277:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:34,525:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:34,805:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:35,044:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:35,190:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:35,313:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:46:35,335:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 20:47:38,961:INFO:best_params: {'actual_estimator__random_strength': 0.7, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 50, 'actual_estimator__eta': 0.15, 'actual_estimator__depth': 3}
2024-08-14 20:47:38,962:INFO:Hyperparameter search completed
2024-08-14 20:47:38,963:INFO:SubProcess create_model() called ==================================
2024-08-14 20:47:38,963:INFO:Initializing create_model()
2024-08-14 20:47:38,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAAB1310>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AF82F5010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.7, 'n_estimators': 250, 'l2_leaf_reg': 50, 'eta': 0.15, 'depth': 3})
2024-08-14 20:47:38,964:INFO:Checking exceptions
2024-08-14 20:47:38,964:INFO:Importing libraries
2024-08-14 20:47:38,964:INFO:Copying training dataset
2024-08-14 20:47:38,986:INFO:Defining folds
2024-08-14 20:47:38,986:INFO:Declaring metric variables
2024-08-14 20:47:38,990:INFO:Importing untrained model
2024-08-14 20:47:38,990:INFO:Declaring custom model
2024-08-14 20:47:38,994:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:47:39,002:INFO:Starting cross validation
2024-08-14 20:47:39,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:47:43,889:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:43,893:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:43,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,112:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,114:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,115:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,116:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,118:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,119:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,120:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,122:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,125:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,126:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,129:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,682:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,690:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,697:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,820:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:44,827:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,395:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,400:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,406:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,419:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,423:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,427:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:47:46,445:INFO:Calculating mean and std
2024-08-14 20:47:46,447:INFO:Creating metrics dataframe
2024-08-14 20:47:46,452:INFO:Finalizing model
2024-08-14 20:47:48,351:INFO:Uploading results into container
2024-08-14 20:47:48,352:INFO:Uploading model into container now
2024-08-14 20:47:48,352:INFO:_master_model_container: 16
2024-08-14 20:47:48,352:INFO:_display_container: 4
2024-08-14 20:47:48,352:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9EB1D0>
2024-08-14 20:47:48,353:INFO:create_model() successfully completed......................................
2024-08-14 20:47:48,474:INFO:SubProcess create_model() end ==================================
2024-08-14 20:47:48,474:INFO:choose_better activated
2024-08-14 20:47:48,478:INFO:SubProcess create_model() called ==================================
2024-08-14 20:47:48,478:INFO:Initializing create_model()
2024-08-14 20:47:48,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:47:48,478:INFO:Checking exceptions
2024-08-14 20:47:48,481:INFO:Importing libraries
2024-08-14 20:47:48,481:INFO:Copying training dataset
2024-08-14 20:47:48,494:INFO:Defining folds
2024-08-14 20:47:48,495:INFO:Declaring metric variables
2024-08-14 20:47:48,495:INFO:Importing untrained model
2024-08-14 20:47:48,495:INFO:Declaring custom model
2024-08-14 20:47:48,495:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:47:48,495:INFO:Starting cross validation
2024-08-14 20:47:48,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:48:05,169:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:05,173:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:05,177:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,320:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,326:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,333:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,457:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,464:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,471:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,743:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,744:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,745:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,750:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,752:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,757:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,759:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,876:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,884:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:06,891:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:07,044:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:07,053:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:07,061:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,128:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,131:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,140:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,144:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,148:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:48:12,157:INFO:Calculating mean and std
2024-08-14 20:48:12,157:INFO:Creating metrics dataframe
2024-08-14 20:48:12,160:INFO:Finalizing model
2024-08-14 20:48:18,551:INFO:Uploading results into container
2024-08-14 20:48:18,551:INFO:Uploading model into container now
2024-08-14 20:48:18,552:INFO:_master_model_container: 17
2024-08-14 20:48:18,552:INFO:_display_container: 5
2024-08-14 20:48:18,552:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAEA2090>
2024-08-14 20:48:18,552:INFO:create_model() successfully completed......................................
2024-08-14 20:48:18,664:INFO:SubProcess create_model() end ==================================
2024-08-14 20:48:18,664:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAEA2090> result for Accuracy is 0.7874
2024-08-14 20:48:18,664:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9EB1D0> result for Accuracy is 0.7791
2024-08-14 20:48:18,664:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAEA2090> is best model
2024-08-14 20:48:18,664:INFO:choose_better completed
2024-08-14 20:48:18,665:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-14 20:48:18,676:INFO:_master_model_container: 17
2024-08-14 20:48:18,676:INFO:_display_container: 4
2024-08-14 20:48:18,676:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAEA2090>
2024-08-14 20:48:18,676:INFO:tune_model() successfully completed......................................
2024-08-14 20:50:49,825:INFO:Initializing tune_model()
2024-08-14 20:50:49,825:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=None, round=4, n_iter=10, custom_grid={'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AF8DE8B50>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAA54790>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFADA15D0>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFADA2610>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFAED9350>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAED8210>}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-14 20:50:49,826:INFO:Checking exceptions
2024-08-14 20:50:49,865:INFO:Copying training dataset
2024-08-14 20:50:49,878:INFO:Checking base model
2024-08-14 20:50:49,879:INFO:Base model : CatBoost Classifier
2024-08-14 20:50:49,884:INFO:Declaring metric variables
2024-08-14 20:50:49,890:INFO:Defining Hyperparameters
2024-08-14 20:50:50,073:INFO:custom_grid: {'actual_estimator__iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AF8DE8B50>, 'actual_estimator__learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAA54790>, 'actual_estimator__depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFADA15D0>, 'actual_estimator__l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFADA2610>, 'actual_estimator__border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFAED9350>, 'actual_estimator__scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAED8210>}
2024-08-14 20:50:50,073:INFO:Tuning with n_jobs=-1
2024-08-14 20:50:50,073:INFO:Initializing RandomizedSearchCV
2024-08-14 20:50:52,978:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:53,677:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:54,005:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:54,064:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:54,121:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:54,122:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:54,318:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:55,805:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:56,300:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:56,836:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:57,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:57,474:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:57,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:57,558:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:58,000:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:58,640:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:59,220:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:50:59,839:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,111:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,534:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,535:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,541:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,601:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:02,890:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:03,087:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:03,433:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:04,297:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:04,824:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:04,872:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:04,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:05,207:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:05,364:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:05,710:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:06,437:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,112:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,435:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,439:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,449:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,819:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:07,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:08,150:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:08,605:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:09,998:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:10,462:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:10,602:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:10,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:10,851:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:10,936:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:54,194:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:54,359:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:54,665:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:56,954:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:58,349:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:59,022:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:59,090:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:51:59,221:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:13,889:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:15,014:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:16,258:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:16,259:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:16,494:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:16,598:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:26,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:27,236:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:27,990:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:28,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:30,231:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:31,746:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:32,466:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:32,543:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:37,339:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:37,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:38,783:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:38,818:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:41,098:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:43,294:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:44,944:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:52:45,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:10,416:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:11,853:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:13,553:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:14,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:16,579:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:19,094:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:20,199:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:20,225:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:21,251:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:21,983:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:24,242:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:26,499:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:28,600:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:28,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:29,748:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:30,085:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:30,552:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:31,930:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:32,733:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:32,901:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:32,916:INFO:best_params: {'actual_estimator__border_count': 246, 'actual_estimator__depth': 5, 'actual_estimator__iterations': 196, 'actual_estimator__l2_leaf_reg': 6.796942970226101, 'actual_estimator__learning_rate': 0.05198522878911536, 'actual_estimator__scale_pos_weight': 1.302035113322407}
2024-08-14 20:53:32,918:INFO:Hyperparameter search completed
2024-08-14 20:53:32,918:INFO:SubProcess create_model() called ==================================
2024-08-14 20:53:32,919:INFO:Initializing create_model()
2024-08-14 20:53:32,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFACF0BD0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFA91E390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'border_count': 246, 'depth': 5, 'iterations': 196, 'l2_leaf_reg': 6.796942970226101, 'learning_rate': 0.05198522878911536, 'scale_pos_weight': 1.302035113322407})
2024-08-14 20:53:32,919:INFO:Checking exceptions
2024-08-14 20:53:32,919:INFO:Importing libraries
2024-08-14 20:53:32,919:INFO:Copying training dataset
2024-08-14 20:53:32,941:INFO:Defining folds
2024-08-14 20:53:32,941:INFO:Declaring metric variables
2024-08-14 20:53:32,946:INFO:Importing untrained model
2024-08-14 20:53:32,946:INFO:Declaring custom model
2024-08-14 20:53:32,953:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:53:32,962:INFO:Starting cross validation
2024-08-14 20:53:32,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:53:36,456:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,464:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,470:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,677:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,681:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,898:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,905:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,911:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,964:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,973:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:36,982:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,006:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,013:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,013:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,018:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,020:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:37,042:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,054:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,058:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,062:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,084:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,089:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,093:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:38,104:INFO:Calculating mean and std
2024-08-14 20:53:38,106:INFO:Creating metrics dataframe
2024-08-14 20:53:38,115:INFO:Finalizing model
2024-08-14 20:53:41,155:INFO:Uploading results into container
2024-08-14 20:53:41,156:INFO:Uploading model into container now
2024-08-14 20:53:41,157:INFO:_master_model_container: 18
2024-08-14 20:53:41,158:INFO:_display_container: 5
2024-08-14 20:53:41,158:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA842450>
2024-08-14 20:53:41,158:INFO:create_model() successfully completed......................................
2024-08-14 20:53:41,287:INFO:SubProcess create_model() end ==================================
2024-08-14 20:53:41,287:INFO:choose_better activated
2024-08-14 20:53:41,292:INFO:SubProcess create_model() called ==================================
2024-08-14 20:53:41,293:INFO:Initializing create_model()
2024-08-14 20:53:41,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 20:53:41,293:INFO:Checking exceptions
2024-08-14 20:53:41,295:INFO:Importing libraries
2024-08-14 20:53:41,295:INFO:Copying training dataset
2024-08-14 20:53:41,309:INFO:Defining folds
2024-08-14 20:53:41,309:INFO:Declaring metric variables
2024-08-14 20:53:41,309:INFO:Importing untrained model
2024-08-14 20:53:41,309:INFO:Declaring custom model
2024-08-14 20:53:41,309:INFO:CatBoost Classifier Imported successfully
2024-08-14 20:53:41,310:INFO:Starting cross validation
2024-08-14 20:53:41,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 20:53:58,422:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:58,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:58,437:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:58,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:58,487:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:58,494:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:59,446:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:59,450:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:53:59,454:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,069:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,080:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,088:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,119:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,123:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,128:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,131:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,134:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,136:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,139:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,146:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,155:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,183:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,190:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:00,198:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,529:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,534:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,538:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,567:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,571:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,575:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:54:05,588:INFO:Calculating mean and std
2024-08-14 20:54:05,589:INFO:Creating metrics dataframe
2024-08-14 20:54:05,591:INFO:Finalizing model
2024-08-14 20:54:11,255:INFO:Uploading results into container
2024-08-14 20:54:11,256:INFO:Uploading model into container now
2024-08-14 20:54:11,256:INFO:_master_model_container: 19
2024-08-14 20:54:11,256:INFO:_display_container: 6
2024-08-14 20:54:11,256:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>
2024-08-14 20:54:11,256:INFO:create_model() successfully completed......................................
2024-08-14 20:54:11,370:INFO:SubProcess create_model() end ==================================
2024-08-14 20:54:11,370:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590> result for F1 is 0.787
2024-08-14 20:54:11,370:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA842450> result for F1 is 0.7849
2024-08-14 20:54:11,371:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590> is best model
2024-08-14 20:54:11,371:INFO:choose_better completed
2024-08-14 20:54:11,371:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-14 20:54:11,384:INFO:_master_model_container: 19
2024-08-14 20:54:11,384:INFO:_display_container: 5
2024-08-14 20:54:11,384:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>
2024-08-14 20:54:11,385:INFO:tune_model() successfully completed......................................
2024-08-14 20:56:57,314:INFO:Initializing tune_model()
2024-08-14 20:56:57,315:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=None, round=4, n_iter=10, custom_grid={'iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFA851250>, 'learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAA2AF90>, 'depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFACF4050>, 'l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAB45910>, 'border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFAB45850>, 'scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAB476D0>}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-14 20:56:57,315:INFO:Checking exceptions
2024-08-14 20:56:57,345:INFO:Copying training dataset
2024-08-14 20:56:57,356:INFO:Checking base model
2024-08-14 20:56:57,357:INFO:Base model : CatBoost Classifier
2024-08-14 20:56:57,361:INFO:Declaring metric variables
2024-08-14 20:56:57,366:INFO:Defining Hyperparameters
2024-08-14 20:56:57,487:INFO:custom_grid: {'actual_estimator__iterations': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFA851250>, 'actual_estimator__learning_rate': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAA2AF90>, 'actual_estimator__depth': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFACF4050>, 'actual_estimator__l2_leaf_reg': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAB45910>, 'actual_estimator__border_count': <scipy.stats._distn_infrastructure.rv_discrete_frozen object at 0x0000020AFAB45850>, 'actual_estimator__scale_pos_weight': <scipy.stats._distn_infrastructure.rv_continuous_frozen object at 0x0000020AFAB476D0>}
2024-08-14 20:56:57,487:INFO:Tuning with n_jobs=-1
2024-08-14 20:56:57,487:INFO:Initializing RandomizedSearchCV
2024-08-14 20:57:02,902:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:02,985:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,091:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,134:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,134:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,137:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,179:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:04,273:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:05,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:06,161:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,355:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,515:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,618:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,690:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,692:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,828:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:07,987:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:08,138:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:10,075:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:10,596:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:14,671:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:14,703:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:14,705:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:14,709:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:15,156:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:16,068:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:16,154:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:17,639:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:17,867:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:18,175:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:18,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:18,650:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:18,688:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:20,252:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:20,698:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:20,719:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:20,972:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:21,380:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:21,386:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:21,426:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:21,479:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,338:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,405:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,537:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,690:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:24,888:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:57:25,047:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:15,115:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:18,132:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,801:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,804:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,814:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,850:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,882:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:29,934:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:33,975:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:35,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,490:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,728:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,852:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,853:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,853:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:44,858:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:45,720:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:48,331:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:54,379:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:55,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:55,145:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:55,211:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:56,219:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:58:57,660:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:00,194:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:00,261:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:07,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:07,792:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:07,905:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:08,971:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:30,923:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:31,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:31,051:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:31,071:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:36,539:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:36,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:37,097:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:37,790:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:39,380:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:39,672:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:43,177:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:43,563:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:43,668:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:43,977:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:45,352:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:45,898:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:47,899:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 20:59:48,180:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:03,394:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:13,857:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:13,872:INFO:best_params: {'actual_estimator__border_count': 246, 'actual_estimator__depth': 5, 'actual_estimator__iterations': 196, 'actual_estimator__l2_leaf_reg': 6.796942970226101, 'actual_estimator__learning_rate': 0.05198522878911536, 'actual_estimator__scale_pos_weight': 1.302035113322407}
2024-08-14 21:00:13,873:INFO:Hyperparameter search completed
2024-08-14 21:00:13,873:INFO:SubProcess create_model() called ==================================
2024-08-14 21:00:13,873:INFO:Initializing create_model()
2024-08-14 21:00:13,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAA67990>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFACF62D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'border_count': 246, 'depth': 5, 'iterations': 196, 'l2_leaf_reg': 6.796942970226101, 'learning_rate': 0.05198522878911536, 'scale_pos_weight': 1.302035113322407})
2024-08-14 21:00:13,873:INFO:Checking exceptions
2024-08-14 21:00:13,873:INFO:Importing libraries
2024-08-14 21:00:13,873:INFO:Copying training dataset
2024-08-14 21:00:13,893:INFO:Defining folds
2024-08-14 21:00:13,893:INFO:Declaring metric variables
2024-08-14 21:00:13,898:INFO:Importing untrained model
2024-08-14 21:00:13,898:INFO:Declaring custom model
2024-08-14 21:00:13,901:INFO:CatBoost Classifier Imported successfully
2024-08-14 21:00:13,910:INFO:Starting cross validation
2024-08-14 21:00:13,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 21:00:38,629:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,634:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,638:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,836:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,838:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,840:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,845:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,846:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,849:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,849:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,852:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,861:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,866:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,886:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,887:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,891:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,892:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,896:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:38,897:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:39,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:39,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:39,043:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,197:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,205:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,210:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,214:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:40,230:INFO:Calculating mean and std
2024-08-14 21:00:40,231:INFO:Creating metrics dataframe
2024-08-14 21:00:40,237:INFO:Finalizing model
2024-08-14 21:00:41,220:INFO:Uploading results into container
2024-08-14 21:00:41,222:INFO:Uploading model into container now
2024-08-14 21:00:41,224:INFO:_master_model_container: 20
2024-08-14 21:00:41,224:INFO:_display_container: 6
2024-08-14 21:00:41,225:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9E72D0>
2024-08-14 21:00:41,225:INFO:create_model() successfully completed......................................
2024-08-14 21:00:41,371:INFO:SubProcess create_model() end ==================================
2024-08-14 21:00:41,381:INFO:choose_better activated
2024-08-14 21:00:41,385:INFO:SubProcess create_model() called ==================================
2024-08-14 21:00:41,386:INFO:Initializing create_model()
2024-08-14 21:00:41,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 21:00:41,386:INFO:Checking exceptions
2024-08-14 21:00:41,387:INFO:Importing libraries
2024-08-14 21:00:41,388:INFO:Copying training dataset
2024-08-14 21:00:41,403:INFO:Defining folds
2024-08-14 21:00:41,403:INFO:Declaring metric variables
2024-08-14 21:00:41,403:INFO:Importing untrained model
2024-08-14 21:00:41,403:INFO:Declaring custom model
2024-08-14 21:00:41,404:INFO:CatBoost Classifier Imported successfully
2024-08-14 21:00:41,404:INFO:Starting cross validation
2024-08-14 21:00:41,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 21:00:57,553:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:57,557:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:57,560:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,400:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,407:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,414:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,421:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,422:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,423:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,430:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,448:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,455:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,462:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,574:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,582:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,590:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,612:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,618:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:00:58,624:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,553:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,560:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,567:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,799:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,808:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,813:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:01:03,829:INFO:Calculating mean and std
2024-08-14 21:01:03,830:INFO:Creating metrics dataframe
2024-08-14 21:01:03,832:INFO:Finalizing model
2024-08-14 21:01:09,199:INFO:Uploading results into container
2024-08-14 21:01:09,200:INFO:Uploading model into container now
2024-08-14 21:01:09,200:INFO:_master_model_container: 21
2024-08-14 21:01:09,200:INFO:_display_container: 7
2024-08-14 21:01:09,200:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AF82F5E90>
2024-08-14 21:01:09,200:INFO:create_model() successfully completed......................................
2024-08-14 21:01:09,309:INFO:SubProcess create_model() end ==================================
2024-08-14 21:01:09,309:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AF82F5E90> result for F1 is 0.787
2024-08-14 21:01:09,310:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AFA9E72D0> result for F1 is 0.7849
2024-08-14 21:01:09,310:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AF82F5E90> is best model
2024-08-14 21:01:09,310:INFO:choose_better completed
2024-08-14 21:01:09,310:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-14 21:01:09,326:INFO:_master_model_container: 21
2024-08-14 21:01:09,326:INFO:_display_container: 6
2024-08-14 21:01:09,326:INFO:<catboost.core.CatBoostClassifier object at 0x0000020AF82F5E90>
2024-08-14 21:01:09,326:INFO:tune_model() successfully completed......................................
2024-08-14 21:13:06,287:INFO:Initializing interpret_model()
2024-08-14 21:13:06,287:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-08-14 21:13:06,287:INFO:Checking exceptions
2024-08-14 21:13:06,287:INFO:Soft dependency imported: shap: 0.46.0
2024-08-14 21:13:06,331:INFO:plot type: summary
2024-08-14 21:13:06,331:INFO:Creating TreeExplainer
2024-08-14 21:13:06,806:INFO:Compiling shap values
2024-08-14 21:13:08,427:INFO:Visual Rendered Successfully
2024-08-14 21:13:08,428:INFO:interpret_model() successfully completed......................................
2024-08-14 21:13:08,545:INFO:Initializing interpret_model()
2024-08-14 21:13:08,545:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-08-14 21:13:08,546:INFO:Checking exceptions
2024-08-14 21:13:08,546:INFO:Soft dependency imported: shap: 0.46.0
2024-08-14 21:13:08,591:INFO:plot type: summary
2024-08-14 21:13:08,591:INFO:Creating TreeExplainer
2024-08-14 21:13:09,016:INFO:Compiling shap values
2024-08-14 21:13:10,574:INFO:Visual Rendered Successfully
2024-08-14 21:13:10,575:INFO:interpret_model() successfully completed......................................
2024-08-14 21:13:10,689:INFO:Initializing interpret_model()
2024-08-14 21:13:10,689:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AF82F5E90>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-08-14 21:13:10,689:INFO:Checking exceptions
2024-08-14 21:13:10,689:INFO:Soft dependency imported: shap: 0.46.0
2024-08-14 21:13:10,728:INFO:plot type: summary
2024-08-14 21:13:10,728:INFO:Creating TreeExplainer
2024-08-14 21:13:11,160:INFO:Compiling shap values
2024-08-14 21:13:12,801:INFO:Visual Rendered Successfully
2024-08-14 21:13:12,801:INFO:interpret_model() successfully completed......................................
2024-08-14 21:13:58,052:INFO:Initializing interpret_model()
2024-08-14 21:13:58,052:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2024-08-14 21:13:58,052:INFO:Checking exceptions
2024-08-14 21:13:58,052:INFO:Soft dependency imported: shap: 0.46.0
2024-08-14 21:13:58,096:INFO:plot type: summary
2024-08-14 21:13:58,096:INFO:Creating TreeExplainer
2024-08-14 21:13:58,396:INFO:Compiling shap values
2024-08-14 21:13:59,994:INFO:Visual Rendered Successfully
2024-08-14 21:13:59,994:INFO:interpret_model() successfully completed......................................
2024-08-14 21:14:20,211:INFO:Initializing plot_model()
2024-08-14 21:14:20,211:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 21:14:20,212:INFO:Checking exceptions
2024-08-14 21:14:20,220:INFO:Preloading libraries
2024-08-14 21:14:20,225:INFO:Copying training dataset
2024-08-14 21:14:20,225:INFO:Plot type: calibration
2024-08-14 21:14:20,244:INFO:Scoring test/hold-out set
2024-08-14 21:14:20,571:INFO:Visual Rendered Successfully
2024-08-14 21:14:20,729:INFO:plot_model() successfully completed......................................
2024-08-14 21:15:46,207:INFO:Initializing plot_model()
2024-08-14 21:15:46,207:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>, plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 21:15:46,208:INFO:Checking exceptions
2024-08-14 21:15:46,215:INFO:Preloading libraries
2024-08-14 21:15:46,219:INFO:Copying training dataset
2024-08-14 21:15:46,219:INFO:Plot type: calibration
2024-08-14 21:15:46,241:INFO:Scoring test/hold-out set
2024-08-14 21:15:46,559:INFO:Visual Rendered Successfully
2024-08-14 21:15:46,701:INFO:plot_model() successfully completed......................................
2024-08-14 21:17:01,537:INFO:Initializing calibrate_model()
2024-08-14 21:17:01,538:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>, method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-08-14 21:17:01,538:INFO:Checking exceptions
2024-08-14 21:17:01,551:INFO:Preloading libraries
2024-08-14 21:17:01,551:INFO:Preparing display monitor
2024-08-14 21:17:01,584:INFO:Getting model name
2024-08-14 21:17:01,584:INFO:Base model : CatBoost Classifier
2024-08-14 21:17:01,598:INFO:Importing untrained CalibratedClassifierCV
2024-08-14 21:17:01,599:INFO:SubProcess create_model() called ==================================
2024-08-14 21:17:01,600:INFO:Initializing create_model()
2024-08-14 21:17:01,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFA9FC8D0>,
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFA9E3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 21:17:01,602:INFO:Checking exceptions
2024-08-14 21:17:01,602:INFO:Importing libraries
2024-08-14 21:17:01,603:INFO:Copying training dataset
2024-08-14 21:17:01,626:INFO:Defining folds
2024-08-14 21:17:01,626:INFO:Declaring metric variables
2024-08-14 21:17:01,630:INFO:Importing untrained model
2024-08-14 21:17:01,630:INFO:Declaring custom model
2024-08-14 21:17:01,638:INFO:CatBoost Classifier Imported successfully
2024-08-14 21:17:01,647:INFO:Starting cross validation
2024-08-14 21:17:01,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 21:17:12,789:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:12,829:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:13,206:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:13,661:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:13,725:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:13,754:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:13,875:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:17:14,468:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:18:31,429:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:31,437:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:31,444:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:31,997:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,004:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,011:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,268:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,275:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,283:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,575:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,583:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,591:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:32,995:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,003:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,010:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,381:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,398:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,475:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,483:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,491:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,534:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,542:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:33,549:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,324:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,332:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,340:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,730:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,734:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,738:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:18:58,753:INFO:Calculating mean and std
2024-08-14 21:18:58,754:INFO:Creating metrics dataframe
2024-08-14 21:18:58,760:INFO:Finalizing model
2024-08-14 21:19:23,575:INFO:Uploading results into container
2024-08-14 21:19:23,576:INFO:Uploading model into container now
2024-08-14 21:19:23,577:INFO:_master_model_container: 22
2024-08-14 21:19:23,577:INFO:_display_container: 7
2024-08-14 21:19:23,577:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020A82A7E450>,
                       method='sigmoid', n_jobs=None)
2024-08-14 21:19:23,577:INFO:create_model() successfully completed......................................
2024-08-14 21:19:23,728:INFO:SubProcess create_model() end ==================================
2024-08-14 21:19:23,747:INFO:_master_model_container: 22
2024-08-14 21:19:23,747:INFO:_display_container: 7
2024-08-14 21:19:23,747:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020A82A7E450>,
                       method='sigmoid', n_jobs=None)
2024-08-14 21:19:23,748:INFO:calibrate_model() successfully completed......................................
2024-08-14 21:20:20,658:INFO:Initializing plot_model()
2024-08-14 21:20:20,658:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020A82A7E450>,
                       method='sigmoid', n_jobs=None), plot=calibration, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-14 21:20:20,658:INFO:Checking exceptions
2024-08-14 21:20:20,666:INFO:Preloading libraries
2024-08-14 21:20:20,686:INFO:Copying training dataset
2024-08-14 21:20:20,686:INFO:Plot type: calibration
2024-08-14 21:20:20,705:INFO:Scoring test/hold-out set
2024-08-14 21:20:21,057:INFO:Visual Rendered Successfully
2024-08-14 21:20:21,207:INFO:plot_model() successfully completed......................................
2024-08-14 21:25:40,634:INFO:Initializing calibrate_model()
2024-08-14 21:25:40,634:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>, method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2024-08-14 21:25:40,635:INFO:Checking exceptions
2024-08-14 21:25:40,642:INFO:Preloading libraries
2024-08-14 21:25:40,642:INFO:Preparing display monitor
2024-08-14 21:25:40,665:INFO:Getting model name
2024-08-14 21:25:40,666:INFO:Base model : CatBoost Classifier
2024-08-14 21:25:40,674:INFO:Importing untrained CalibratedClassifierCV
2024-08-14 21:25:40,675:INFO:SubProcess create_model() called ==================================
2024-08-14 21:25:40,675:INFO:Initializing create_model()
2024-08-14 21:25:40,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020AF8447C90>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAD0B590>,
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A81F2C2D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-14 21:25:40,675:INFO:Checking exceptions
2024-08-14 21:25:40,676:INFO:Importing libraries
2024-08-14 21:25:40,676:INFO:Copying training dataset
2024-08-14 21:25:40,693:INFO:Defining folds
2024-08-14 21:25:40,693:INFO:Declaring metric variables
2024-08-14 21:25:40,699:INFO:Importing untrained model
2024-08-14 21:25:40,699:INFO:Declaring custom model
2024-08-14 21:25:40,704:INFO:CatBoost Classifier Imported successfully
2024-08-14 21:25:40,713:INFO:Starting cross validation
2024-08-14 21:25:40,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-14 21:25:48,285:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,309:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,321:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,339:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,372:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,390:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,395:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:25:48,415:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\dask\dataframe\_pyarrow_compat.py:23: UserWarning: You are using pyarrow version 11.0.0 which is known to be insecure. See https://www.cve.org/CVERecord?id=CVE-2023-47248 for further details. Please upgrade to pyarrow>=14.0.1 or install pyarrow-hotfix to patch your current version.
  warnings.warn(

2024-08-14 21:27:04,929:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:04,937:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:04,944:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:05,620:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:05,628:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:05,635:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,225:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,234:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,242:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,377:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,382:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,385:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,391:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,392:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,403:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,768:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,776:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,784:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,812:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,819:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,827:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,935:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,944:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:06,952:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,480:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,484:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,488:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,553:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,557:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,561:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Low') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-14 21:27:31,569:INFO:Calculating mean and std
2024-08-14 21:27:31,572:INFO:Creating metrics dataframe
2024-08-14 21:27:31,579:INFO:Finalizing model
2024-08-14 21:27:56,863:INFO:Uploading results into container
2024-08-14 21:27:56,863:INFO:Uploading model into container now
2024-08-14 21:27:56,864:INFO:_master_model_container: 23
2024-08-14 21:27:56,864:INFO:_display_container: 8
2024-08-14 21:27:56,864:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAED8050>,
                       method='sigmoid', n_jobs=None)
2024-08-14 21:27:56,864:INFO:create_model() successfully completed......................................
2024-08-14 21:27:57,018:INFO:SubProcess create_model() end ==================================
2024-08-14 21:27:57,035:INFO:_master_model_container: 23
2024-08-14 21:27:57,036:INFO:_display_container: 8
2024-08-14 21:27:57,036:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020AFAED8050>,
                       method='sigmoid', n_jobs=None)
2024-08-14 21:27:57,036:INFO:calibrate_model() successfully completed......................................
2024-08-14 21:39:19,249:INFO:Initializing save_model()
2024-08-14 21:39:19,249:INFO:save_model(model=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=<catboost.core.CatBoostClassifier object at 0x0000020A82A7E450>,
                       method='sigmoid', n_jobs=None), model_name=my_first_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MTIDES\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-08-14 21:39:19,250:INFO:Adding model into prep_pipe
2024-08-14 21:39:19,287:INFO:my_first_best_pipeline.pkl saved in current working directory
2024-08-14 21:39:19,294:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['student_count',
                                             'awards_per_state_value',
                                             'awards_per_natl_value',
                                             'exp_award_value',
                                             'exp_award_state_value',
                                             'exp_award_natl_value', 'ft_pct',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 CalibratedClassifierCV(cv=5, ensemble=True,
                                        estimator=<catboost.core.CatBoostClassifier object at 0x0000020A82A7E450>,
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2024-08-14 21:39:19,294:INFO:save_model() successfully completed......................................
2024-08-14 21:44:38,024:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_7fdf1c36976b4aa9aef7ee0fdf1173f5
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,025:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_bf748d30ef6146aa8de66783ae2e5ed2_d03291dbb7d349d98372781bc44dd32c
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,025:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_6c5e6c22363a4ff88cdd90d39456e6e8
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,025:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_fed0ca0a01f949938a96348360f6d910_ce08a2cc74cf4f73994bb6347017e846
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,026:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_2fde9cdab2074d7f9d5f993a74cd96eb
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,026:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_08c5374d384747c0b887e97f04bdca3d_9f000b2924eb4166b5a650588c83fd38
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,026:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_7afe42495dbc4aa49847d6b2e815c5ec
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,026:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_9f364df9d9b143b7b7e3d0606846b43b_f6bb40644590467687cf58b858e391c5
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_62bf7b969f7140efbb913df2c6a7f237
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_951928f18f034458b3c89fb5907ac6c9_8b4f4cd2860142c8baf05bbd5b2f819d
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_d74e28c3d1f04dbfb98ee3554848fdd4
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_16987142cefd47768e7a2a4f403284c5_577c8d92c3334550b2a25513965f7eda
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,027:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_72c65b465cf44dc0ad57cf8f27b3a1ae
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_9901b27261bd481f8055d4fe91153fbc_da9f4e96f2be4638b0b2b44402e59762
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_4bc34aec027a4494bba7074e120e28d1
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,028:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_b1011b3ea0d84007a9ce658ca4ea07df_b7438677f82b4eab92699689e7613497
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_6cb4b2d291334b928f89f4911242aa7f
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_3143c94638f7449cb4f05d5c6a50921e_f7f897d7ffd4472c9f2f443a51583af3
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_d5f2fa16e8094a0cb1f507d6bd89176f
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,029:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_c294333c4a8043838c993642f606c1fa_d6d3b7fc46524820a160a55b8953c1ca
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_1660ca7c45de4043a62a3277bbe4746b
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_34fb8784c21543f9941cc271da4baf1f_e52db3fec7294758a88c93c8942520de
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_57f71e3fa3294caa90e5d85abc6f5bec
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,030:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_82e9073dd1dd4075a9768169aabc78e2_8f02194c6f9c4232a8cfdbb9adf30e46
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,031:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_8859bb98fbce4589b4d8c0286bfdd6db
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,031:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_a3666f48f063470ea07d5be632cc383c_ff63ac13471c4fa98dfac3b87e5c9eb4
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,031:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_1ed6d0ec084b4ca2824ce9fd69d9e116
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_09d25f1fa5494a47ba3abcc99e5def4e_2581fc3c17eb433aba079a17a5c0221b
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_0364eef42f874ddc8c6e8ae3c1765b95
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_09920c190bf24805bfa6a911be58f603_fe105b62495648fe8736745ee5c1fcb9
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,032:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_5811b9ce657d46fab13aefb32de3e7b4
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_c1079459610840c99ed064ad387f1151_d88188e1d75d4480a6f5f14118650f84
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_3066d03cf4ab4daeb2254ce1eeb788df
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,033:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_f1361dbcbf5945c19413a7a71bfb3044_7c381f66b89246128aee56c364363a8f
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_fdd9dc6c98da4974b57e41b68f5445d5
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_068f4dfa790d442cad030e21ff9c7212_f1566de37112492ab2345163fcb078dc
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_4a7a249b47a94721b9373a8891b0c562
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,034:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_45433d4d7a1d486b9f943f68b9117e4b_9a6303aaa1704a9b8f2c2527b181a091
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,035:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_92021af8f1594a8f887c728aa5a16f73
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,035:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_04474c8838824400a9ad1032e861afd7_784eecfa15c140bd831437a6b9d20c86
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,035:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_830f1b2a281b4081aee2668500937e9c
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,035:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_88a9b23464b340349b6ac7b10fb42f05_83dc464635b94fd7b801f876722a3101
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_c44fa964af1a448d8a5dc559c62c3e1f
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_c7b0f2148dc4466bba32fb2f6a002632_13770f02da5c45678a1b5629a09431b6
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,036:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_4094d425b940420cb94f21e5bbb55301
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_333a2fd9dba54dc5960a93a7963bb335_c04d9e7341a04edda8c42c1acb385e87
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_cbd2538e434e405f9fba7d0eaeae80ff
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_f7969130a357474c959e8c77ab6c33b5_d9797ee23a6049c79185e7117329f18d
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,037:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_1e41315fc969490a97345be897f875fb
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,038:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6fb3696ad4dc44d8bdc33c4de2372678_04ebb1f9b6e44465bc584949daf6f6cb
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,038:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_5a4b272e441d4b239a801b2c4b8c438c
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,038:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_4f2793fc6a7d48d4b5ac9d906da8abba_75271f1de3824ec5bac1a43e3c0e280e
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,039:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_0a3a903a0ca944c1b2ad1ccf7d4376f4
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,039:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_1dc077bf431849e38e6a93bff9ec5933_6b03f346f62e4ea4ba7222937f030a1a
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_4021f27b0e3e49ea8cb12a56e102ba32
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_e5a562d4672f4fd084181c381eecb062_a01a9447c42447b29ef4b7f1a9b6e3d5
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,040:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_ab4e41730be44668b5212e9613676153
  warnings.warn("Failed to delete temporary folder: {}"

2024-08-14 21:44:38,041:WARNING:C:\Users\MTIDES\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\MTIDES\AppData\Local\Temp\joblib_memmapping_folder_11004_6a40a57173c341dda98823bca61cae3c_b455467c2fcf44baa3ba3b7ab21f40cc
  warnings.warn("Failed to delete temporary folder: {}"

